<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:SensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ab86e0560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ab862d8b0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ab862d8b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ab846b590"/></to>
    </wire>
    <wire loc="12:SensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab86c68d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab844e020"/></to>
    </wire>
    <wire loc="13:SensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab86d6770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab81e6640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab81e6640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81dc7d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:SensorAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f4ab86c3500"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f4ab7d72430"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f4ab7d72430"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f4ab7c2c020"/></to>
    </wire>
    <wire loc="26:SensorAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f4ab86c0d60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f4ab7d6b6b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f4ab7d6b6b0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f4ab7c2b270"/></to>
    </wire>
    <wire loc="32:SensorAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab86645f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab70d5c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab70d5c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab67508b0"/></to>
    </wire>
    <wire loc="33:SensorAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab86554e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70d48b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70d48b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab674e590"/></to>
    </wire>
    <wire loc="34:SensorAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ab864a5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ab70d5020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ab70d5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ab6751b60"/></to>
    </wire>
    <wire loc="35:SensorAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f4ab86466f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7c1cc00"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7c1cc00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7beb2f0"/></to>
    </wire>
    <wire loc="36:SensorAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab8641df0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab70cf910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab70cf910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab7c16020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab7235dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab72bdb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab72dc750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab72f9080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab744f620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab753dc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab7a767e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab68db020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab7907020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab7b1d4a0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab7d713a0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab6ad3020"/></to>
    </wire>
    <wire loc="45:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab802c020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab81d4400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4ab846bc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4ab8b863a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4ab8b863a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4ab8731140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4ab845e6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab8629c90"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab8629c90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab8622020"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab845edc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ab8622730"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ab8623640"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ab8623640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab8603580"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4ab8622e10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab861b360"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f4ab8621520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab8426c40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab8603580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab85eb3c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ab85fbbb0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ab85eba70"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ab88094c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ab85e9cc0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f4ab85a6a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84e36d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f4ab8593410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84dbb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f4ab859cd10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84e8160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f4ab857f020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84c2cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f4ab85a2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84e9480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f4ab8587570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84c2020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f4ab857c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84abcb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f4ab858ea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84bc220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f4ab85ae020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab85399d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f4ab8582020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84d12f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f4ab8589890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84d2610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f4ab85928c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84d3220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f4ab859bc70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84e17a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f4ab857e020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84b92f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f4ab8590020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84cc6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f4ab85a2da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84e2ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f4ab85af7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab8546540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f4ab85863e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84ba610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f4ab85ad5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84ea020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f4ab858c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84b46d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f4ab8597dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84f1a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f4ab8581020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84c97a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f4ab85a3140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84f2de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f4ab8588700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84caac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f4ab857d020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84b27a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f4ab858f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84c4b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f4ab85851f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84b3ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f4ab8583020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab84d9cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f4ab8584020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84ab020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f4ab858aa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ab84d9020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f4ab858b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ab84adb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4ab8544450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab8545d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ab8544aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4ab84a5a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ab8543120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4ab84a2260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84f0930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab8546540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84ee020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab8545d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84e7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab8546540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84e67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab8545d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84e0610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab8546540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84dfc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab8545d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4ab853d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ab853d940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4ab84a29f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ab853c020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4ab84a1240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84d8b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84d62f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84d0160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84cf7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84c8610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84c7c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84c1b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84bf2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84b8160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84b77a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84b1610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84b0c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab84a9b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ab84a72f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab872f040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f4ab872b490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f4ab8b1d3b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab8426c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab84518d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4ab84467b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f4ab8429360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4ab8429360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab820e020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4ab844c980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f4ab84286a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4ab84286a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab81fab90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4ab844bca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f4ab84279c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4ab84279c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab81f5710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab81fd2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f4ab83ce200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f4ab83ce200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82ab740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab81f9de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f4ab83cc200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f4ab83cc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82a6100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab81f4930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f4ab83ca200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f4ab83ca200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82a2d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4ab8410020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8344100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4ab83fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8315d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f4ab83b2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8306d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f4ab838d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab827b100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f4ab83b0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8301740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f4ab83f7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab830b100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f4ab83e3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82dbe00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f4ab83be200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8285d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f4ab83aa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82f8d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f4ab8399570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8297100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f4ab8385580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8276d10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4ab840a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8336100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f4ab83a8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82f3740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4ab8406020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab832c740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f4ab83f1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82fc100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f4ab83dd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82cdd10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f4ab83c8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab829d740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f4ab83b8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8276d10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4ab8414020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab834ed10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4ab83ff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab831e860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f4ab83eb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82ee100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f4ab83b4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8306d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f4ab8393570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8289100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f4ab8387570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8276d10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f4ab839f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82b0d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f4ab83e7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82e4a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f4ab83d2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82b4100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f4ab83c2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab828e740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f4ab8391570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8285d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f4ab83a6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82bed10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4ab840e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8340d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4ab83f9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8310740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f4ab83c6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8297100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f4ab83f5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8306d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f4ab83e1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82d6740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f4ab83bc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8280740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f4ab83a1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82b4100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4ab8421020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab83586d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4ab8403020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8327100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f4ab83ef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82f8d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f4ab83db200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82c8740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f4ab839d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82ee100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f4ab8397570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8293d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f4ab838b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8276d10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f4ab83d7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82bed10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f4ab839b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82ead10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4ab8412020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8349740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4ab83fd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8319270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f4ab83e9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82ead10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f4ab83a3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82b9740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f4ab838f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8280740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f4ab83e5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82df460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f4ab83d0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82b0d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f4ab83c0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8289100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4ab840c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab833b740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f4ab83c4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8293d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4ab8408020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8332d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f4ab83f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8301740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f4ab83df200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82d1100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f4ab83ba200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab827b100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4ab8416020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8352100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4ab8401020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab8323d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f4ab83ed020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82f3740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f4ab83d9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82c3100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f4ab83ac560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82fc100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f4ab8395570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab828e740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f4ab83ae580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82fc100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f4ab83d4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab82b9740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f4ab8389570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab827b100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f4ab8383580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab829d740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f4ab83b61f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ab830b100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81dc7d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81d31d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81d31d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab805d690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab81d4400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab80d8760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4ab81caa80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ab804ecf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab80d8760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab6bf5380"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4ab8057c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ab80accf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ab80a61d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab80d7020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ab80d7020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bef020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab8043020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab8155020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab8155020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab81190f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab6bf5380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab6bdaa30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ab6be9780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bf5bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bf5bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bd9340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab6beb3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab8155020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6bd54c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6bdf7b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6bdf7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6bd4a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6bdeda0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6bdeda0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6bd3da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6bdc0c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6bdc0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f4ab8593410"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f4ab858aa20"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f4ab8590020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f4ab8588700"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f4ab858f5a0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f4ab8587570"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f4ab858ea50"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f4ab85863e0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f4ab858c020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f4ab85851f0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f4ab858b5a0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f4ab8584020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4ab8117540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ab814c020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ab814c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab81470a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81392c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f4ab80a2490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f4ab8052e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ab8030c50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab802d810"/></to>
    </wire>
    <wire loc="48:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7f4ab8032dc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab801d870"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ab801d870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab7d82080"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ab8027c40"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ab8019e10"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ab8019e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ab7d87440"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f4ab7d74080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f4ab80256e0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ab7d87440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ab7facd00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ab800fe10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ab7d88440"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ab7d88440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ab7fad670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7d86020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7d828e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7d81020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7d8a020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7d8a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7fb3c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7d8ac70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6b41c70"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6b41c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7e51d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7fa61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7d86020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab6b3bd70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7faa8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ab7fa8e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab6b41020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab6b41020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7e52a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7fa0710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab6b3b5d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab6b3b5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7e57cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7faa8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7f1ca20"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ab7facd00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ab7f19570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ab7fad670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ab7f1a3e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7fb3c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7f1db10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7f17020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7fa61d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ab7f18230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4ab7fa8e50"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7f12290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7fa0710"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4ab7f17690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab7f02900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab7f02900"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ab7efb020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab7f12c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab7e6f110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab7e6f110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ab814c020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab7f10dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab7eff3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7ef7dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7f020d0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7efe710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ab7ef66d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f4ab83a3580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4ab7ef4670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f4ab83a1580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ab7ef2670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f4ab839f580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4ab7ef0670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f4ab839b580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4ab7eee670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f4ab839d580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab6b40be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab7f02900"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab6b40440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7e50590"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7e50590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7dbd060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7e4f370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab6b3bd70"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7e51d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7dbfbf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7dbfbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6ad06c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7e57cd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7e4b0d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7e52a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7dc1e60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7dc1e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab6ad1850"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7dbd060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab6acea70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ab7e3a0a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab7eff3b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7dbd930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7e4f370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7e39020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7dbd060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7da39d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7dbe400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7dbe400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab6ad0e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7db8b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7f020d0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab6acd400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7dbd930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ab6acdbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ab6ad3630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4ab6acbde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab6a9b470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7db8b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ab6a9bbd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ab7da3400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab6a99270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7da39d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab6a99e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7da1720"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f4ab7d71a00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f4ab7d74080"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f4ab7c328f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f4ab7d5f360"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f4ab7d5f360"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ab7c5d490"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7c33660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7d68a90"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7d68a90"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7c64d70"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f4ab7c2ae20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f4ab7c37b10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f4ab7c27130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f4ab7c36ca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7c62020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4ab83f9020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ab7c50020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4ab7d498a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4ab7d498a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4ab7d358a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4ab7d55710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ab7d41710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4ab7d4a8a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f4ab7d368a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4ab7d51710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f4ab7d3e710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4ab7d4f710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f4ab7d3c710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4ab7d5c710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f4ab7d43710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4ab7d4c710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4ab7d39710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4ab7d54710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f4ab7d40710"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4ab7d57660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ab7d456b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4ab7d4e710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f4ab7d3b710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4ab7d56710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4ab7d42710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4ab7d4b8a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f4ab7d378a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4ab7d53710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f4ab7d3f710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4ab7d50710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f4ab7d3d710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4ab7d5d710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f4ab7d44710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4ab7d4d710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f4ab7d3a710"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f4ab7c31480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7beb2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7bc2020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ab7c19ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ab7bea320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ab7bea320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ab71f6020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4ab7c16c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4ab7be71d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4ab7be71d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4ab71f5df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab7c152b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab7be5020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab7be5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab71f2a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab7c12430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73c9550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73c9550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73bba80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bf6430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bd1170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bd1170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bb0080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab7c16020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab7be8510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab7be8510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab71f5210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7c0b350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7be4020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7be4020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7bb1020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7c14020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7be7800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7be7800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab71f3470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab7c02660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab73c5660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab73c5660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab73b7af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7bc2020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7228b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7bdb2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab71f08b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4ab7bcf1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4ab71f1ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7bdc0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7bb2020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7bb2020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bb0080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7228080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7bb1020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ab73cb6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7bc7430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7bb0b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7bb0b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7213020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab7bd7170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab7bb19d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab7bb19d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab73caa70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f4ab71e70f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7bc11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab71ef860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7bbd990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7bbd990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7291c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ab71ee690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7bb5840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7bb5840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7290a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab71ea4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab75f6b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab71eece0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73c0d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab71edb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73bc640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab71ec610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7b26b80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7b26b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7b1c970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4ab71e81f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7baa330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7baa330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7ba57e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab71e7d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7228b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4ab7225d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab73caa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab73bb020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7213020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7210410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7291c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7286a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7228080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab72212d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4ab7bbe500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab72915e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab72915e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f4ab7286370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ab73cb6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ab73bdc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7bc11d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7293be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7293be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab72897b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4ab7bb36f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab72928e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab72928e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4ab72874d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ab7bbebc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ab728f170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ab728f170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ab7284020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7290a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7285840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ab7225d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7bac390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7bac390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7ba9e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab728e6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab72e1220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab72e1220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab72dfa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab72e0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab7217350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab7217350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ab7213d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab7213d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab722cce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab722cce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ab7226860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab7226860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab7bace80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab7bace80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab7ba6990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ab728e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab7229980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab7229980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ab7225690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ab7225690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab72c5aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab72c5aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab72c0e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ab72c2950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab7babb40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab7babb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab74547c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ab74547c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ab744d020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7ba3640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7b36720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7b36720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7b1db10"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b9cb50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b31a60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b31a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b1a740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ab7ba0020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab754e6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ab7ba0020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab74575c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ab74575c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab744fca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ab754e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab753c320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ab7b93d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ab754b020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ab754b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab753cbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4ab7b9aae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab754bcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab754bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab753a970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7b8e020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab7b88660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ab7b92020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ab7302a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ab7302a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ab72f8a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f4ab7b83e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab7304aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ab7304aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab790c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab7b927f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f4ab7b7e9e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f4ab7b7fa10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f4ab7b80a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f4ab7b24020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f4ab7b19b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f4ab7b15a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a73220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a73220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a6caf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ab7b12c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ab7a2de60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ab7a2de60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a20b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4ab7b10e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f4ab7a296a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4ab7a296a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a11d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4ab7b0e0f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f4ab7a27ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4ab7a27ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a07710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ab7b0d400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ab79f0d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ab79f0d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ab79ce8a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ab7af81d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7681e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7681e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ab7af92b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f4ab767e7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ab767e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab7af99c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab767dae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab767dae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab7afba40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab767fad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab767fad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab7afb120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab767b160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab767b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7affbe0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7673870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7673870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7b02550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7671880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7671880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7b02e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab76700a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab76700a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7b01710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7678e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7678e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7afe020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7676670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7676670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ab7b0a5a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f4ab7661500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ab7661500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7b03c00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7662ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7662ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7afe8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7674e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7674e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ab7afd1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f4ab7676e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ab7676e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7afda70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7675e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7675e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f4ab7af7d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab764fa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab764fa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f4ab7af7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab76229e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab76229e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab7b08af0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab75f6b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab7b15020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab75f5d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab75f5d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab75da310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f4ab7aec820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f4ab7aed940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab7a767e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab7a6c260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab7a6c260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab6a50020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a6caf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a50870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab6a50020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab6a48020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a50870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a43a90"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab6a48020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab6a2da30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ab6a3c210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a48870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a48870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a2c340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab6a3fe10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab7a56080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab7a56080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab7a51cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6a284c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6a32570"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6a32570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6a27a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6a31c10"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6a31c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6a26da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6a2f020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6a2f020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4ab7a4d0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ab814c020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4ab7a2b090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a1a710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4ab7a2a390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a151d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4ab7a74b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a24020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4ab7a289b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a0cb60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a232f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ab8410020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a1fde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f4ab83e3200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a19930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4ab8412020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a14480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ab8421020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a0f020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f4ab83db200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a0bde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4ab83e5200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a05930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f4ab83dd200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ab79f0150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ab79e6a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ab79efa20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ab79cb8b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab79d55d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f4ab85928c0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f4ab79d48f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f4ab8582020"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab79d37a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4ab83e5200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ab79cd480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ab7d55710"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ab79ca480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ab7d57660"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ab767e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7672880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ab76680a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ab76710a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab765c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab765e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab767d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ab7664880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab765f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab766a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ab766d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7680a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7984920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab767be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ab767a490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7663c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab767abe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab765fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ab76640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7675670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab76650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7668880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7665880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab765dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab765ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ab766d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ab76660a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7661ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab7670880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab765cce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab767f480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ab7678670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7674670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab76690a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab7669880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab76720a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab76792f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ab7678020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab767b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab7662500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ab765d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab766a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7666880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ab767ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab766e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ab7679940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ab766e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ab76630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab765b9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7980bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab797d020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab797ddb0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7981810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab797cba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f4ab7978020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab7910770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ab7910770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab790c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ab797b400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab78efc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab78efc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab6960770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ab7979080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ab78ee8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ab78ee8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ab695fbe0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab796f680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab76a9020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab76a9020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab695ed70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab7978df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f4ab796b120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ab790c280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab7907b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab695ed70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab78d9850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ab695fbe0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ab78da020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab6960770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab78dc430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab695f440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6956d90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6956d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab77832c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ab78da020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ab787da10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab695e2b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab78da6a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab78da6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab787c060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab78d6a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab695d5a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab69405d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab78db6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ab78d7690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab6956140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab6956140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7785020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab78d52a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab6949760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab6949760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ab77874d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab78db6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab787d250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab78d9850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab787cc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab78dc430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab787e470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab787a3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab78d6a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ab787b5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4ab78d7690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7875480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab78d52a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4ab787aa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab786a020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab786a020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ab7864c70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab7875c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f4ab78722f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ab78655e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab785c150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab7866d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ab785d780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ab782ebb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4ab83b4580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4ab782cb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f4ab83b0580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ab782ab20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4ab83ae580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4ab7828b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f4ab83a8580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4ab7826b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f4ab83aa580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f4ab7833d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4ab7765430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ab6947020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab77863f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ab6947630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ab7771540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ab7771540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4ab7765430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab694ed40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab786a020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab694e5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7783ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7783ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7779c30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab77828a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab69405d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab77832c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab777a850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab777a850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab68d76c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4ab77874d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7780060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7785020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab777ba80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab777ba80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab68d8850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab77863f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab7780990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7779c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab68d6a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7778570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab77828a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab777fe50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7779c30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ab777f060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab7866d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ab777f840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ab78655e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7779020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab68d7e40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab68d5400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7778570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ab68d5bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ab68db630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4ab68d3de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f4ab775d250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ab7864c70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ab7759d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4ab83b4580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ab7757cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4ab83ae580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7642c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ab764cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7645b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab763f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ab7638e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ab763fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab762b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab762e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab764a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ab7634670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab762f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ab7644c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7643c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab7639670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ab763ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab763e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab764e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab7649aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ab7648120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7632a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab7648870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab762fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab764adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ab7635e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7643480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7644480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab764c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab7636e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7637670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7635670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab762dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab762ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ab763b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ab7637e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7630ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab763d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab762bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab764c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ab7645370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7642480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab7639e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab763ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab7638670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7640670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ab764b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7640e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab7646020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ab7646cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ab76302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7631ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab7649450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab76312f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ab762d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab763be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7636670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ab764baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab764a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab763de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ab7646670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ab763c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ab7634e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab762a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7615c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ab7620da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7619b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7613670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ab760ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ab7613e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab75ff2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab76012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab761d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ab7607670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab76022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ab7617c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7616c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab760d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ab760fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7612670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7621760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab761caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ab761b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7606a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab761b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7602ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab761ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ab7608e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7616480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7617480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab7620750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab7609e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ab760b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7608670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab7600ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab7601ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ab760e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ab760be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7604ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab7610670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab75ffad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab7620100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ab7619370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7615480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab760de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7612e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab760c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7614670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ab761f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7614e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab761a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ab761acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ab76042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7605ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab761c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab76052f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ab76002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab760ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7609670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ab761faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab761d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab7610e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ab761a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ab760f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ab7607e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab75fe7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75d7880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75cc020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75cc020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75c7140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4ab75c3bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f4ab75cbc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4ab75cbc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f4ab75ae150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f4ab75c6530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ab7565a20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4ab75b2540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f4ab75b3590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f4ab75b3590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab75639e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4ab75a9950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4ab75b0ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4ab75b0ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4ab7586a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4ab75ae9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f4ab75b2540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab7576020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4ab7570530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4ab7570530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab756de50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab7569020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f4ab85af7b0"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7561c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4ab83ff020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ab7547990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ab7539900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ab7549150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ab75380f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f4ab7538ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a73220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4ab752c500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f4ab7a74b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ab7525820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ab7a2de60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4ab7524b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f4ab7a289b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ab752d880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ab79f0150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ab7522020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7487c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7487c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7522d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab74868f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab74868f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab751f6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4ab74852f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab74852f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ab751fde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f4ab7484cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ab7484cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab751e530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab7482370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab7482370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab751ec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab7481d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab7481d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7520e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab747bc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab747bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab7521780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab74637a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab74637a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab7520550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab74672f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab74672f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab751d3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab747c480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab747c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab751c5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7479e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7479e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab751b020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7478670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7478670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ab751de80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f4ab747f7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ab747f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab751a9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab7465ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab7465ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab751b890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4ab74662f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab74662f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab751a130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4ab7466ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab7466ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab7514d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab7457df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab7457df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab744e550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7535d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab7533bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ab7532950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73c9550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab7527be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab73c1480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab73c1480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab73b38b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab75186c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab747ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ab7484020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab747ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ab7471e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ab7478e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab74642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ab746c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ab747cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab7472670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ab7474e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7477670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ab7480370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab746ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab7480ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7467ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab7481060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ab746de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab747b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab7485940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab746ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7470670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab746d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ab7473670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ab7470e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7469ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab7475670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab7464ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ab747e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab747a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab7472e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7477e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab7471670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7479670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ab7484670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab747f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ab747fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ab74692f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab746aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab74816b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab746a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ab74652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab7473e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ab746e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab74829c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab7475e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ab7474670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ab746ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ab7452020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ab744d7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ab7436150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ab744c020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ab7a2de60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4ab744b380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f4ab7a2b090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4ab744a6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f4ab7a2a390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ab7449a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ab79efa20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ab74486e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab7350520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ab7350520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab7447530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab732d480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab732d480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab7446ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab734b060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab734b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ab74463a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f4ab734bd00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ab734bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7445330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab74441e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ab7442d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73c9550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7444b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7b26b80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab743b3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7342840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7342840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab743bcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7341060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7341060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab743cb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab7349ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab7349ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab74386d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab732ec60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab732ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab743a590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4ab7331c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ab7331c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab743ae00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4ab732f480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ab732f480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7437020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7331480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7331480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab74378b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4ab734fc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ab734fc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f4ab742b9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ab735d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ab7a56080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4ab73b03b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ab7360cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4ab73af6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ab81caa80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ab73590b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81dc7d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7343620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ab734e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7347620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ab733a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ab7341840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab734dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ab7335060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab7332c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ab7346620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7345620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab733b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ab733e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7340060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab734f2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab734b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7334480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab7349490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab734c9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ab7337840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7346e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7347e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab734e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab7338840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7339060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7337060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab732e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ab733c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ab7339840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7332480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab733f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ab7348e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7345e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab733b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7340840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab733a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7342060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ab734d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ab73487b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ab7333c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7333480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab7334c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ab732fc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab733c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7338060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ab734d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab734c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab733f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ab7348160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ab733e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ab7335840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab732c160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f4ab7300920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f4ab72f9940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ab7306990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ab72f9080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab72dce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ab72e0020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ab72dbae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab72dd690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ab72dd690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab790c280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ab72da8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ab7302a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab72d9170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ab72c2200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ab72bd570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ab72bc3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ab72c2950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab72bca70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ab7284d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ab728e6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ab7283b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ab728e020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab72822f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab7281170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ab7281b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ab7234410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f4ab7255db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f4ab7227800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab7223580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ab7223580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ab790c280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab720d1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7bb1020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ab6751b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ab6743640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab67508b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab7c152b0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab674e590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7c14020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ab70d2020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ab674dc10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ab674dc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7c0b350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab67422e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab7139930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab6741020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7c14020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ab7139930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ab70eb4b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ab70ea400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ab7c19ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70e9060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7c14020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab70e8720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab7c152b0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f4ab70e7480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f4ab70e7c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ab70c9020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ab7c152b0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70c9c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7c14020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SensorC" loc="8:SensorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.TimerMilliC" loc="44(SensorAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:../../../tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:../../../tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.AMSenderC" loc="47(SensorAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC" loc="47(SensorAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SensorAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.AMReceiverC" loc="43(SensorAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f4ab8578890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f4ab8578c30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f4ab8577020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f4ab85773a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f4ab8577720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f4ab8577a90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f4ab8577e20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f4ab8576200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f4ab85765d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f4ab853be70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f4ab8537270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f4ab837e9f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f4ab837eda0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f4ab837d1a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f4ab837d550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f4ab837d8c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4ab818c9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4ab818c9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4ab8146120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4ab8146120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4ab8135a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4ab8135a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4ab8132290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4ab8132290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4ab8132680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4ab8132680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4ab8132e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4ab8132e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4ab8131260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f4ab8131a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f4ab8131a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4ab8156ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4ab8156ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4ab810f2d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4ab810f2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4ab810f6c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4ab810f6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4ab810e020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4ab810e020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4ab810e3f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab80d04f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab80d04f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab80a0d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab80a0d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4ab809d0d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab804c1f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab804c1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4ab7e369b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f4ab7e2a910" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f4ab7e0c7e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab7584020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab7584020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ab75847b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab75847b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4ab715e660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4ab7154360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4ab714d0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f4ab7133c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4ab70ce330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7f4ab86466f0" loc="32:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f4ab86466f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab8646a70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab8646c00"/>
        <function-ref name="start" scoped="" ref="0x7f4ab8646d90"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab8654020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4ab86e0560" loc="12:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ab86e0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ab86e08e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ab86645f0" loc="29:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab86645f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab8664970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab8664b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab8664c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab8664e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab86be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ab864a5a0" loc="31:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab864a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab864a920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab864aab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab864ac40"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab864add0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab8670020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7f4ab86c0d60" loc="19:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f4ab86c0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab86e5770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f4ab86e40d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f4ab86c4e00"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab86c4980"/>
        <function-ref name="notify" scoped="" ref="0x7f4ab86c2300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f4ab8641df0" loc="33:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab8641df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab864b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab86c68d0" loc="14:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab86c68d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab86c6c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab86c6de0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab86d2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab86d21b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab86d2340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab86d24d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab86d2660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab86d2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab86d27f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab86d2980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab86d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7f4ab86c3500" loc="18:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f4ab86c3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab86e5770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f4ab86e40d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab86c5130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ab86554e0" loc="30:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab86554e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab8655860"/>
        <function-ref name="source" scoped="" ref="0x7f4ab86559f0"/>
        <function-ref name="address" scoped="" ref="0x7f4ab8655b80"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab8655d10"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab86bd020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab86bd1b0"/>
        <function-ref name="type" scoped="" ref="0x7f4ab86bd340"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab86bd4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab86bd660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab86bd7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab86bd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab86d6770" loc="13:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab86d6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab86d4c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab86e11e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab86d4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab86e1ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab86d3590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab86d3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab86e1660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab86e2390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab86d4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab86e2860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab86e2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4ab862ad70" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab862ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab8629180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4ab862d8b0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ab862d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ab862dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab8629c90" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab8629c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab86250a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f4ab8622e10" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f4ab8622e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab86211c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab8622020" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab8622020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab86223a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f4ab8622730" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ab8622730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab8622ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f4ab8621520" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f4ab8621520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab86218a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab861b360" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab861b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab861b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f4ab8623640" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ab8623640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab86239c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4ab85fbbb0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ab85fbbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ab8600b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ab86001b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ab8600340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ab86004d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ab8600020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ab8600660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ab86007f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ab8600980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab8603580" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab8603580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab8603900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4ab85eba70" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ab85eba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ab85e9980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ab85e9020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ab85e91b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ab85e9340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ab85ebdf0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ab85e94d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ab85e9660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ab85e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4ab85e9cc0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ab85e9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4ab85e80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab85eb3c0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab85eb3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab85eb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f4ab85a6a50" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f4ab85a6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab85a6dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab85a5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab85a51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab85a5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab85a54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab85a5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab85a57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab85a5980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab85a5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f4ab8593410" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f4ab8593410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab8593790"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab8593920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab8593ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab8593c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab8593dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab8592020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab85921b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab8592340"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab85924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f4ab859cd10" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f4ab859cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab859b0e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab859b270"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab859b400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab859b590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab859b720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab859b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f4ab857f020" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f4ab857f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab857f3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab857f530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab857f6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab857f850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab857f9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab857fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f4ab85a2020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f4ab85a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85a23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab85a2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab85a26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab85a2850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab85a29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f4ab8587570" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f4ab8587570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85878f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab8587a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab8587c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab8587da0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab8586020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f4ab857c020" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f4ab857c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab857c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab857c530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab857c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab857c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab857c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab857cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f4ab858ea50" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f4ab858ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab858edd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab858d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab858d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab858d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab858d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab858d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab858d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab858d980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab858db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f4ab85ae020" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f4ab85ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab85ae3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab85ae530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab85ae6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab85ae850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab85ae9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab85aeb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab85aed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab85ad020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab85ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f4ab8582020" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f4ab8582020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85823a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab8582530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab85826c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8582850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab85829e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab8582b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f4ab8589890" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f4ab8589890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab8589c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab8589da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab8588020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab85881b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab8588340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f4ab85928c0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f4ab85928c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab8592d40"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab8591020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab85911b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab8591340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab85914d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab8591660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab85917f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab8591980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab8591b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f4ab859bc70" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f4ab859bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab8595020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab85951b0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab8595340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab85954d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab8595660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab85957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f4ab857e020" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f4ab857e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab857e3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab857e530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab857e6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab857e850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab857e9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab857eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f4ab8590020" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f4ab8590020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab85903a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab8590530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab85906c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab8590850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab85909e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab8590b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab8590d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab858f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab858f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f4ab85a2da0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f4ab85a2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab859d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab859d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab859d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab859d630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab859d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f4ab85af7b0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f4ab85af7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab85afb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab85afcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab85afe50"/>
        <function-ref name="get" scoped="" ref="0x7f4ab85b7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab85b71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab85b7340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab85b74d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab85b7660"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab85b77f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab85b7980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab85b7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f4ab85863e0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f4ab85863e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab8586760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab85868f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab8586a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab8586c10"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab8586da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f4ab85ad5a0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f4ab85ad5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab85ad920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab85adab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab85adc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab85addd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab85a6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab85a61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab85a6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab85a64d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab85a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f4ab858c020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f4ab858c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab858c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab858c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab858c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab858c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab858c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab858cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab858cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab858b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab858b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f4ab8597dc0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f4ab8597dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab859c180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab859c310"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab859c4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab859c630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab859c7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab859c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f4ab8581020" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f4ab8581020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85813a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab8581530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab85816c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8581850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab85819e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab8581b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f4ab85a3140" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f4ab85a3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85a34c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab85a3650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab85a37e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab85a3970"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab85a3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f4ab8588700" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f4ab8588700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab8588a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab8588c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab8588da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab8587020"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab85871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f4ab857d020" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f4ab857d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab857d3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab857d530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab857d6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab857d850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab857d9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab857db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f4ab858f5a0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f4ab858f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab858f920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab858fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab858fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab858fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab858e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab858e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab858e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab858e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab858e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f4ab8595b70" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f4ab8595b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab8594020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab85941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab8594340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab85944d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab8594660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab85947f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab8594980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab8594b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8594ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab8594e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab8593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f4ab85851f0" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f4ab85851f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab8585570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab8585700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab8585890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab8585a20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab8585bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f4ab8583020" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f4ab8583020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85833a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab8583530"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab85836c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8583850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab85839e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab8583b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f4ab8584020" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f4ab8584020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab85845a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab8584730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab85848c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab8584a50"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab8584be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f4ab858aa20" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f4ab858aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab858ada0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab8589020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab85891b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab8589340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab85894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f4ab858b5a0" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f4ab858b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab858b920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab858bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab858bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab858bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab858a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab858a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab858a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab858a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab858a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4ab8544aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ab8544aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab8544e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4ab8544450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4ab8544450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab85447d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4ab8543120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ab8543120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab85434a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4ab8545d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab8545d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab8544180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ab8546540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab8546540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab85468c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab8546a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab8546be0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8546d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab8545020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab85451b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab8545340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab85454d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8545660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab85457f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab8545980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4ab853d940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ab853d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab853dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4ab853d2f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4ab853d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab853d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4ab853c020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ab853c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab853c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4ab853ebf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab853ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab853d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ab853f3e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab853f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab853f760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab853f8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab853fa80"/>
        <function-ref name="get" scoped="" ref="0x7f4ab853fc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab853fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab853e020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab853e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab853e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab853e4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab853e660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab853e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84f1a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84f1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84f1e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84f0020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84f01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84f0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84f04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab85399d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab85399d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab8539d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84f2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84f21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84f2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84f24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84f2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84f27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84f2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84f2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84ee020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84f2de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84f2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84f1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84f1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84f14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84f1630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84f17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84f0930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84f0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84f0cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84f0e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84ef020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84ef1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84ef340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84ef4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84ef660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84ef7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84ef980"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84efb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84efca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84e8160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84e8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84e84e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84e8670"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84e8800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84e8990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84e8b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84e8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84ea020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84ea3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84ea530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84ea6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84ea850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84ea9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84eab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84ead00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84e9020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84e67a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84e67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84e6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84e9480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84e9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84e9800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84e9990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84e9b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84e9cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84e9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84e7020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84e73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84e7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84e76c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84e7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84e79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84e7b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84e7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84e6020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84e61b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84e6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84e17a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84e17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84e1b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84e1cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84e1e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84e0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84e01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84e36d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84e36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84e3a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84e3be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84e3d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84e2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84e21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84e2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84e24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84e2660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84e27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84dfc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84dfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84e2ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84e2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84e2e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84e1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84e11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84e1340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84e0610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84e0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84e0990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84e0b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84e0cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84e0e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84df020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84df1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84df340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84df4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84df660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84df7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84d9cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84d9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84d80a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84d8230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84d83c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84d8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84d86e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84d8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84dbb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84dbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84da020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84da1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84da340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84da4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84da660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84da7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84da980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84dab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84daca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84d62f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84d6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84d9020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84d93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84d9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84d96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84d9850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84d8b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84d8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84d7020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84d71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84d7340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84d74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84d7660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84d77f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84d7980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84d7b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84d7ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84d7e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84d12f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84d12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84d1670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84d1800"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84d1990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84d1b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84d1cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84d1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84d3220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84d3220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84d35a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84d3730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84d38c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84d3a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84d3be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84d3d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84d2020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84d21b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84d2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84cf7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84cf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84cfb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84d2610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84d2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84d2990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84d2b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84d2cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84d2e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84d0160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84d0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84d04e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84d0670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84d0800"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84d0990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84d0b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84d0cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84d0e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84cf020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84cf1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84cf340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84c97a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84c97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84c9b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84c9cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84c9e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84c8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84c81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84cc6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84cc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84cca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84ccbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84ccd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84ca020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84ca1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84ca340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84ca4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84ca660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84c7c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84c7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84caac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84caac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84cae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84c9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84c91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84c9340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84c8610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84c8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84c8990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84c8b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84c8cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84c8e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84c7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84c71b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84c74d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84c7660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84c77f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84c7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84c2cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84c2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84c10a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84c1230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84c13c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84c1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84c16e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84c1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84c4b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84c4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84c3020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84c31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84c3340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84c34d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84c3660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84c37f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84c3980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84c3b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84c3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84bf2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84bf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84c2020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84c23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84c2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84c26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84c2850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84c29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84c1b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84c1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84c0020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84c01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84c0340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84c04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84c0660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84c07f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84c0980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84c0b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84c0ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84c0e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84b92f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84b9670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84b9800"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84b9990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84b9b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84b9cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84b9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84bc220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84bc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84bc5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84bc730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84bc8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84bca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84bcbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84bcd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84ba020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84ba1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84ba340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84b77a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84b77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84b7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84ba610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84ba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84ba990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84bab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84bacb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84bae40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84b8160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84b8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84b84e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84b8670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84b8800"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84b8990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84b8b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84b8cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84b8e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84b7020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84b71b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84b7340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84b27a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84b27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84b2b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84b2cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84b2e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84b1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84b11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84b46d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84b46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84b4a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84b4be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84b4d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84b3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84b31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84b3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84b34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84b3660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84b0c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84b0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84b3ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84b3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84b3e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84b2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84b21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84b2340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84b1610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84b1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84b1990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84b1b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84b1cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84b1e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84b0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84b01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84b0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84b04d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84b0660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84b07f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84b0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab84abcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab84abcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84a90a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab84a9230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab84a93c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84a9550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84a96e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab84a9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ab84adb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ab84adb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab84ac020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab84ac1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84ac340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab84ac4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab84ac660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84ac7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab84ac980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab84acb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab84acca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ab84a72f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ab84a72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84a7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ab84ab020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ab84ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab84ab3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab84ab530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab84ab6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab84ab850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab84ab9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ab84a9b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab84a9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab84a8020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab84a81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab84a8340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84a84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab84a8660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab84a87f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab84a8980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab84a8b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab84a8ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab84a8e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab84a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f4ab84a1240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4ab84a1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84a15c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f4ab84a5a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4ab84a5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84a5e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f4ab84a2260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4ab84a2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84a25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f4ab84a29f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4ab84a29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab84a2d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4ab88094c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ab88094c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4ab8809840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f4ab8b1d3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4ab8b1d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4ab8b1d730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4ab8b1d8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4ab8b1da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f4ab8945bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f4ab8945bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4ab8a81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f4ab8601b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ab8601b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ab846ab10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ab846a1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ab846a340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ab846a4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ab846a020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ab846a660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ab846a7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ab846a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4ab845edc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ab845edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab845d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4ab846b590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ab846b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ab846b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4ab845e6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f4ab845e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab845ea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4ab846bc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ab846bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab845e020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ab845e1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ab845e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4ab8bf5410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab8bf5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab8bf5790"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab8bf5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4ab8b863a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ab8b863a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab8b86720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ab8b868b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ab8b86a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4ab872f040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4ab872f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab872f3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab872f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f4ab872b490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4ab872b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4ab872b810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4ab872b9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4ab872bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4ab8731140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ab8731140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab87314c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ab8731650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ab87317e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ab862b590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab862b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab862b910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab862baa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab862bc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab862bdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab8452020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84521b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab8452340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab8452980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84524d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab8452660"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab84527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f4ab84467b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4ab84467b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8446b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8446cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8446e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab844c020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab844c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab844c340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab844c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab844c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab84518d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab84518d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab8451c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f4ab844c980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4ab844c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab844cd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab844b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab844b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab844b340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab844b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab844b660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab844b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab844b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ab844e020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab844e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab844e3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab844e530"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab844e6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab844e850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab844e9e0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab844eb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab844ed00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab844d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab844d020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab844d1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab844d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f4ab844bca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4ab844bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84450a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8445230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab84453c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8445550"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84456e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8445870"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8445a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8445b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f4ab8429360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4ab8429360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84296e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8429870"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8429a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8429b90"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8429d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8428020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84281b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8428340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f4ab84286a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4ab84286a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8428a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8428bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8428d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8427020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8427340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84274d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8427660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f4ab8426c40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab8426c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab8425020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f4ab84279c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4ab84279c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8427d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8426020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab84261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8426340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab84264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8426660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84267f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8426980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ab8410020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ab8410020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8410530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84106c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8410850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8410b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8410d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab840f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab840f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab840f340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab840f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab840f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab840f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab840fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab840fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ab83fb020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ab83fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83fb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83fb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83fb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83fbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83fbd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83fa340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83faa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f4ab83b2560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f4ab83b2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83b28e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83b2a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83b2c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83b2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83b1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83b1340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83b14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83b1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83b17f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83b1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83b1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83b1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83b0020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f4ab838d570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f4ab838d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab838d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab838da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab838dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab838dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab838c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab838c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab838c340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab838c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab838c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab838c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab838c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab838cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab838cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab838b020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab838b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f4ab83b0580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f4ab83b0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83b0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83b0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83b0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83b0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83af020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83af340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83af4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83af660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83af7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83af980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83afb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83afca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83ae020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f4ab83f7020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f4ab83f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83f7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83f76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83f7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83f79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83f7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83f7d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83f6340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83f6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f4ab83e3200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f4ab83e3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83e3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83e3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83e38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83e3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83e3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83e3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83e2020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83e21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83e2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83e24d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83e2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83e27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83e2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83e2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83e2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f4ab83ce200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f4ab83ce200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ce580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83ce710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83ce8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83cea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83cebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ced50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83cd020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83cd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83cd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83cd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83cd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83cd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83cd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83cdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83cdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f4ab83be200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f4ab83be200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83be580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83be710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83be8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83bea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83bebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83bed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83bd020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83bd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83bd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83bd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83bd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83bd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83bdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83bdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f4ab83aa580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f4ab83aa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83aa900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83aaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83aac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83aadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83a9340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83a94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83a9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83a97f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83a9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83a9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83a9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83a8020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f4ab8399570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f4ab8399570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83998f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8399a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8399c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8399da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8398020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8398340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83984d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8398660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83987f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8398980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8398b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8398ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8397020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f4ab8385580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f4ab8385580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8385900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8385a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8385c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8385db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8384020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8384340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8384660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83847f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8384980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8384b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8384ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8383020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ab840a020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ab840a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab840a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab840a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab840a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab840a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab840a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab840ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab840ad00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8409020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84091b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8409340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84094d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8409660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8409a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8409c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f4ab83a8580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f4ab83a8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83a8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83a8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83a8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83a8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83a7340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83a74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83a7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83a77f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83a7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83a7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83a7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83a6020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ab8406020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ab8406020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8406530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84066c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8406850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84069e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8406b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8406d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8405020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8405340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8405660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8405a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8405c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f4ab83f1020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f4ab83f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83f13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83f1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83f16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83f1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83f19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83f1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83f1d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83f01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83f0340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83f04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83f0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83f07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83f0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f4ab83dd200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f4ab83dd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83dd580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83dd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83dd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83dda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ddbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83dc020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83dc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83dc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83dc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83dc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83dc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83dcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f4ab83c8200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f4ab83c8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83c8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83c8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83c88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83c8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83c8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83c8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83c7020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83c71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83c7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83c74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83c7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83c77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83c7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83c7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f4ab83b8200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f4ab83b8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83b8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83b8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83b88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83b8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83b8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83b8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83b7020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83b71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83b7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83b74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83b7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83b77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83b7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83b7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83b7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ab8414020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ab8414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8414530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84146c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8414850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84149e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8414b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8414d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8413020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8413340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8413660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8413a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8413c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ab83ff020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ab83ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ff4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83ff630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83ff7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83ff950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ffae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ffc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83ffe00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83fe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83fe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83fe340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83fe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83fe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83fe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83fea80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83fec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f4ab83eb020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f4ab83eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83eb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83eb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83eb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83eb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83eb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ebb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83ebd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83ea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83ea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83ea340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83ea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83ea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83ea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83eaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83eac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f4ab83b4580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f4ab83b4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83b4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83b4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83b4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83b4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83b3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83b3340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83b34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83b3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83b37f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83b3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83b3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83b3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83b2020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f4ab8393570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f4ab8393570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83938f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8393a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8393c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8393da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8392020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8392340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83924d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8392660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83927f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8392980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8392b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8392ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8391020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f4ab8387570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f4ab8387570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83878f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8387a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8387c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8387da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8386020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8386340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8386660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83867f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8386980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8386b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8386ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8385020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f4ab839f580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f4ab839f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab839f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab839fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab839fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab839fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab839e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab839e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab839e340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab839e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab839e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab839e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab839e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab839eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab839eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab839d020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab839d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f4ab83e7020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f4ab83e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83e75a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83e7730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83e78c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83e7a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83e7be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83e7d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83e6020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83e61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83e6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83e64d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83e6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83e67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83e6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83e6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83e6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f4ab83d2200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f4ab83d2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83d2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83d2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83d28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83d2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83d2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83d2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83d1020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83d11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83d1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83d14d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83d1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83d17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83d1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83d1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83d1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f4ab83c2200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f4ab83c2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83c2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83c2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83c28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83c2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83c2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83c2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83c1020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83c11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83c1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83c14d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83c1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83c17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83c1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83c1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f4ab8391570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f4ab8391570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83918f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8391a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8391c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8391da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8390020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8390340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83904d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8390660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83907f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8390980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8390b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8390ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab838f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab838f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f4ab83a6570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f4ab83a6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83a68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83a6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83a6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83a6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83a4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83a41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83a4340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83a44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83a4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83a47f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83a4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83a4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83a4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83a3020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ab840e020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ab840e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab840e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab840e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab840e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab840e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab840e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab840eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab840ed00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab840d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab840d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab840d340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab840d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab840d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab840d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab840da80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab840dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ab83f9020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ab83f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83f9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83f96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83f9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83f99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83f9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83f9d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83f8340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83f8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f4ab83c6200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f4ab83c6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83c6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83c6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83c68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83c6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83c6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83c6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83c5020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83c51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83c5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83c54d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83c5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83c57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83c5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83c5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f4ab83f5020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f4ab83f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83f5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83f56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83f5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83f59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83f5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83f5d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83f4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83f4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f4ab83e1200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f4ab83e1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83e1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83e1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83e18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83e1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83e1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83e1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83e0020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83e01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83e0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83e04d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83e0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83e07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83e0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83e0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f4ab83cc200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f4ab83cc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83cc580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83cc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83cc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83cca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ccbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ccd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83cb020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83cb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83cb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83cb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83cb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83cb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f4ab83bc200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f4ab83bc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83bc580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83bc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83bc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83bca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83bcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83bcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83bb020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83bb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83bb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83bb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83bb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83bb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f4ab83a1580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f4ab83a1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83a1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83a1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83a1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83a1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83a0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83a01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83a0340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83a04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83a0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83a07f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83a0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83a0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83a0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab839f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab839f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ab8421020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ab8421020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8421530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84216c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8421850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8421b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8421d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8420020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8420340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8420660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8420a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8420c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ab8403020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ab8403020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84033a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8403530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84036c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8403850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8403b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8403d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8402020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8402340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8402660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8402a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8402c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f4ab83ef020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f4ab83ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83ef530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83ef6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83ef850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ef9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83efb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83efd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83ee020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83ee1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83ee340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83ee4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83ee660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83ee7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83eea80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83eec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f4ab83db200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f4ab83db200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83db580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83db710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83db8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83dba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83dbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83dbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83da020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83da1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83da340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83da4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83da660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83da7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83da980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83dac10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83dada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f4ab839d580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f4ab839d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab839d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab839da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab839dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab839ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab839c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab839c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab839c340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab839c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab839c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab839c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab839c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab839cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab839cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab839b020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab839b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f4ab8397570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f4ab8397570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83978f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8397a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8397c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8397da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8396020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8396340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8396660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83967f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8396980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8396b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8396ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8395020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f4ab838b570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f4ab838b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab838b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab838ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab838bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab838bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab838a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab838a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab838a340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab838a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab838a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab838a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab838a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab838ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab838aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8389020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f4ab83d7200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f4ab83d7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83d7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83d7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83d78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83d7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83d7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83d7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83d6020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83d61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83d6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83d64d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83d6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83d67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83d6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83d6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83d6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f4ab839b580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f4ab839b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab839b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab839ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab839bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab839bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab839a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab839a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab839a340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab839a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab839a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab839a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab839a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab839ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab839aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8399020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ab8412020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ab8412020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8412530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84126c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8412850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8412b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8412d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8411020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8411340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8411660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8411a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8411c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ab83fd020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ab83fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83fd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83fd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83fd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83fd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83fdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83fdd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83fc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83fc340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83fc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83fc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83fc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83fca80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83fcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f4ab83e9020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f4ab83e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83e9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83e96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83e9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83e99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83e9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83e9d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83e8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83e81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83e8340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83e84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83e8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83e87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83e8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83e8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f4ab83a3580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f4ab83a3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83a3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83a3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83a3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83a3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83a2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83a21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83a2340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83a24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83a2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83a27f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83a2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83a2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83a2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83a1020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f4ab838f570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f4ab838f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab838f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab838fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab838fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab838fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab838e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab838e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab838e340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab838e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab838e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab838e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab838e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab838eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab838eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab838d020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab838d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f4ab83e5200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f4ab83e5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83e5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83e5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83e58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83e5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83e5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83e5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83e4020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83e41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83e4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83e44d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83e4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83e47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83e4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83e4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83e4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f4ab83d0200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f4ab83d0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83d0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83d0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83d08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83d0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83d0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83d0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83cf020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83cf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83cf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83cf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83cf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83cf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83cf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83cfc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83cfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f4ab83c0200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f4ab83c0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83c0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83c0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83c08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83c0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83c0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83c0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83bf020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83bf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83bf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83bf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83bf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83bf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83bfc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ab840c020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ab840c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab840c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab840c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab840c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab840c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab840c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab840cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab840cd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab840b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab840b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab840b340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab840b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab840b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab840b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab840ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab840bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f4ab83c4200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f4ab83c4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83c4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83c4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83c48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83c4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83c4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83c4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83c3020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83c31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83c3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83c34d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83c3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83c37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83c3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83c3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83c3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ab8408020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ab8408020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8408530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84086c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8408850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84089e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8408b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8408d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8407020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8407340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8407660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8407a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8407c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f4ab83f3020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f4ab83f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83f3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83f36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83f3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83f39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83f3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83f3d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83f2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83f21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83f2340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83f24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83f2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83f27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83f2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83f2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f4ab83df200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f4ab83df200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83df580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83df710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83df8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83dfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83dfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83dfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83de020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83de1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83de340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83de4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83de660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83de7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83de980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83dec10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f4ab83ca200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f4ab83ca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ca580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83ca710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83ca8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83caa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83cabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83cad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83c9020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83c91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83c9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83c94d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83c9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83c97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83c9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83c9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83c9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f4ab83ba200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f4ab83ba200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ba580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83ba710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83ba8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83baa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83babc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83bad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83b9020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83b91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83b9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83b94d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83b9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83b97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83b9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83b9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83b9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ab8416020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ab8416020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84163a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8416530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84166c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8416850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84169e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8416b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8416d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8415020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8415340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8415660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8415a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8415c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ab8401020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ab8401020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab84013a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8401530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab84016c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8401850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab84019e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8401b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8401d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8400020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab84001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8400340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab84004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8400660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab84007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8400a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8400c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f4ab83ed020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f4ab83ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83ed530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83ed6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83ed850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ed9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83edb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83edd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83ec1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83ec340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83ec4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83ec660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83ec7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83eca80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83ecc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f4ab83d9200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f4ab83d9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83d9580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83d9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83d98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83d9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83d9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83d9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83d8020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83d81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83d8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83d84d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83d8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83d87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83d8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83d8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83d8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f4ab83ac560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f4ab83ac560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ac8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83aca70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83acc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83acd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ab020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83ab340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83ab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83ab660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83ab7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83ab980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83abb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83abca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83aa020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f4ab8395570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f4ab8395570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83958f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8395a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8395c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8395da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8394020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8394340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83944d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8394660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83947f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8394980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8394b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8394ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8393020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f4ab83ae580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f4ab83ae580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83ae900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83aea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83aec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83aedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83ad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83ad340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83ad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83ad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83ad7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83ad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83adb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83adca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83ac020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f4ab83d4200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f4ab83d4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83d4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83d4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83d48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83d4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83d4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83d4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83d3020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83d31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83d3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83d34d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83d3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83d37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83d3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83d3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83d3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f4ab8389570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f4ab8389570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83898f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8389a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8389c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8389da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8388020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8388340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83884d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8388660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83887f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8388980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8388b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8388ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8387020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f4ab8383580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f4ab8383580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8383900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8383a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8383c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8383db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8382020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8382340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8382660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83827f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8382980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8382b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8382ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8381020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f4ab83b61f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f4ab83b61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83b6970"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab83b6b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83b6c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab83b6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83b51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83b5340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83b54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83b5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83b57f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83b5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83b5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83b5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab83b4020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab83586d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab83586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8358a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8358be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8358d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8357020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8357340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83574d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8357660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8357980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8357b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8357ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8357e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8356120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8352100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8352100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8352480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8352610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83527a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8352930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8352ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8352c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8352de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8351020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8351340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8351660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8351a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8351c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab834ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab834ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab834d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab834d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab834d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab834d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab834d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab834d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab834da40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab834dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab834dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab834c020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab834c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab834c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab834c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab834c760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab834c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8349740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8349740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8349ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8349c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8349de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8348020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83481b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8348340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83484d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8348660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83487f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8348980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8348b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8348ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8348e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8347120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8344100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8344100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8344480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8344610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83447a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8344930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8344ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8344c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8344de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8343020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8343340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8343660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8343a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8343c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8340d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8340d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab833f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab833f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab833f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab833f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab833f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab833f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab833fa40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab833fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab833fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab833e020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab833e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab833e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab833e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab833e760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab833e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab833b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab833b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab833bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab833bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab833bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab833a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab833a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab833a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab833a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab833a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab833a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab833a980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab833ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab833aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab833ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8339120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8336100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8336100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8336480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8336610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83367a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8336930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8336ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8336c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8336de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8335020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8335340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8335660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8335a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8335c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8332d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8332d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83300e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8330270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8330400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8330590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8330720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83308b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8330a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8330bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8330d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab832f020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab832f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab832f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab832f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab832f760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab832f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab832c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab832c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab832cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab832cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab832cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab832b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab832b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab832b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab832b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab832b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab832b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab832b980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab832bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab832bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab832be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab832a120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab832a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8327100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8327100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8327480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8327610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab83277a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8327930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8327ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8327c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8327de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8326020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8326340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8326660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8326a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8326c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8323d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8323d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83220e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8322270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8322400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8322590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8322720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83228b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8322a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8322bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8322d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8321020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8321340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8321760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab831e860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab831e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab831ebe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab831ed70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab831d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab831d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab831d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab831d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab831d660"/>
        <function-ref name="get" scoped="" ref="0x7f4ab831d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab831d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab831db10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab831dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab831de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab831c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab831c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab831c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8319270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8319270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83195f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8319780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8319910"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8319aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8319c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8319dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8318020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab83181b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8318340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab83184d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8318660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab83187f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8318980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8318c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8318da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8315d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8315d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8314270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8314400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8314590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8314720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8314a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8314bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8314d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8313020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8313340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8313760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8310740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8310740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8310ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8310c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8310de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab830f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab830f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab830f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab830f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab830f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab830f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab830f980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab830fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab830fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab830fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab830e120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab830e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab830b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab830b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab830b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab830b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab830b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab830b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab830bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab830bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab830bde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8309020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83091b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8309340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83094d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8309660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8309a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8309c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8306d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8306d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab83050e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8305270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8305400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8305590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8305720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab83058b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8305a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8305bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8305d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8304020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab83041b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8304340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab83044d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8304760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab83048f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8301740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8301740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8301ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8301c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8301de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8300020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab83001b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8300340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab83004d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8300660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab83007f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8300980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab8300b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8300ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab8300e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82ff120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82ff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82fc100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82fc480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82fc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82fc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82fc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82fcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82fcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82fcde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82fb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82fb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82fb340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82fb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82fb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82fb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82fba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82fbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82f8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82f8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82f70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82f7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82f7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82f7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82f7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82f78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82f7a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82f7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82f7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82f6020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82f61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82f6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82f64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82f6760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82f68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82f3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82f3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82f3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82f3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82f3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82f21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82f2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82f24d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82f2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82f27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82f2980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82f2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82f2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82f2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82f1120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82ee100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82ee480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82ee610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82ee7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82ee930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82eeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82eec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82eede0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82ed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82ed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82ed340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82ed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82ed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82ed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82eda80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82ead10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82ead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82e90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82e9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82e9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82e9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82e9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82e98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82e9a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82e9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82e9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82e8020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82e8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82e8760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82e4a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82e4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82e4de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82e3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82e31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82e3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82e34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82e3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82e37f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82e3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82e3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82e3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82e2440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82e25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82df460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82df460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82df7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82df970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82dfb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82dfc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82dfe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82de020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82de1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82de340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82de4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82de660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82de7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82de980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82deb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82deda0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82dbe00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82dbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82da1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82da350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82da4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82da670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82da800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82da990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82dab20"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82dacb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82dae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82d9020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82d91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82d9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82d94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82d9760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82d98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82d6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82d6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82d6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82d6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82d6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82d51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82d54d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82d5980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82d5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82d5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82d4120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82d1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82d1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82d1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82d17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82d1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82d1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82d1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82d1de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82d0340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82d0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82cdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82cdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82cc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82cc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82cc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82cc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82cc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82cc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82cca40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82ccbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82ccd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82cb020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82cb760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82c8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82c8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82c8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82c8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82c8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82c7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82c74d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82c7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82c77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82c7980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82c7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82c7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82c7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82c6120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82c62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82c3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82c3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82c3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82c3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82c37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82c3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82c3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82c3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82c3de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82c11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82c1340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82c14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82c1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82c17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82c1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82c1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82bed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82bed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82bd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82bd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82bd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82bd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82bd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82bd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82bda40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82bdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82bdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82bc020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82bc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82bc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82bc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82bc760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82bc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82b9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82b9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82b9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82b9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82b9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82b8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82b81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82b8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82b84d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82b8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82b87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82b8980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82b8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82b8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82b8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82b7120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82b72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82b4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82b4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82b4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82b4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82b47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82b4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82b4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82b4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82b4de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82b3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82b31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82b3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82b34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82b3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82b37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82b3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82b3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82b0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82b0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82af0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82af270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82af400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82af590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82af720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82af8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82afa40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82afbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82afd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82ae020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82ae760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82ab740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82ab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82abac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82abc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82abde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82aa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82aa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82aa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82aa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82aa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82aa980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82aab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82aaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82aae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82a9120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82a6100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82a6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82a6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82a6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82a67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82a6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82a6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82a6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82a6de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82a5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82a51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82a5340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82a54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82a5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82a57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82a5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82a5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab82a2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab82a2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82a10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab82a1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82a1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab82a1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab82a1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82a18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab82a1a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab82a1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82a1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab82a0020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab82a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab82a0760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab829d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab829d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab829dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab829dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab829dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab829b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab829b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab829b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab829b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab829b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab829b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab829b980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab829bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab829bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab829be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab829a120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab829a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8297100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8297100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8297480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8297610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82977a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8297930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8297ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8297c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8297de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8296020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8296340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8296660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8296a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8296c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8293d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8293d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82920e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8292270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8292400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8292590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8292720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82928b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8292a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8292bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8292d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8291020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8291340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8291760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab828e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab828e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab828eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab828ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab828ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab828d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab828d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab828d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab828d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab828d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab828d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab828d980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab828db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab828dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab828de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab828c120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab828c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8289100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8289100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8289480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8289610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab82897a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8289930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8289ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab8289c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8289de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8288020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab82881b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8288340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82884d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8288660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82887f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8288a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab8288c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8285d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8285d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82840e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8284270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8284400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8284590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8284720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82848b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8284a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8284bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8284d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8283020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82831b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8283340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82834d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8283760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82838f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8280740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8280740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab8280ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8280c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8280de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab827f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab827f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab827f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab827f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab827f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab827f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab827f980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab827fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab827fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab827fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab827e120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab827e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab827b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab827b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab827b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab827b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab827b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab827b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab827bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab827bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab827bde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab827a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab827a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab827a340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab827a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab827a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab827a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab827aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab827ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ab8276d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ab8276d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab82750e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab8275270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab8275400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab8275590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab8275720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab82758b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab8275a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8275bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab8275d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab8274020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab82741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab8274340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab82744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab8274760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab82748f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab81fd2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab81fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab81fd670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab81fd800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab81fd990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab81fdb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab81fdcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab81fde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab81fc020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab81fc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab81fc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab81fc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab81fc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab81fc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab81fc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab81fcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab81fcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab820e020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab820e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab820e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab820e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab820e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab820e850"/>
        <function-ref name="get" scoped="" ref="0x7f4ab820e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab820eb70"/>
        <function-ref name="set" scoped="" ref="0x7f4ab820ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab81fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab81f9de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab81f9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab81f8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab81f8310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab81f84a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab81f8630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab81f87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab81f8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab81f8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab81f8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab81f8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab81f7020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab81f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab81f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab81f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab81f7760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab81f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab81fab90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab81fab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab81f9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab81f91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab81f9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab81f94d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab81f9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab81f97f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab81f9980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab81f9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab81f4930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab81f4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab81f4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab81f4e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab81f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab81f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab81f3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab81f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab81f3660"/>
        <function-ref name="get" scoped="" ref="0x7f4ab81f37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab81f3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab81f3b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab81f3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab81f3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab81f2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab81f22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab81f2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab81f5710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab81f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab81f5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab81f5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab81f5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab81f4020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab81f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab81f4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab81f44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab81f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ab81e6640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab81e6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab8039c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab803a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab8039020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab803aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab8037590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab8037110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab803a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab803b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab8039630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab803b860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab803bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4ab81dc7d0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81dc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab81d9c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab81da260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab81d9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab81dab60"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab81d8590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab81d8110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab81da6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab81db400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab81d9630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab81db8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab81dbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4ab81d31d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4ab81d31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab81cf630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab81d2c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab81d09d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab81d0550"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab81ce020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab81cfab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab81d00d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab81d3dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab81cf020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab81d22e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab81d27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ab81caa80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ab81caa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab81cc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab81d4400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab81d4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab81d4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab80d7020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab80d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab80d5870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab80d6840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab80d5220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab80d6d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab80d5d30"/>
        <function-ref name="start" scoped="" ref="0x7f4ab80d7e30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab80d6380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab80d8760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab80d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab80d8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6bf5bd0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bf5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6bf24e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6bf34e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6bf3e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6bf39a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6bf29a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6bf4a80"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6bf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab6bf5380" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab6bf5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab6bf5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ab6bdc0c0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6bdc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab6bdc440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab6bdc5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab6bdc760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab6bdc8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6bdca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ab6bdf7b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6bdf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab6bdfb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab6bdfcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6bdfe50"/>
        <function-ref name="get" scoped="" ref="0x7f4ab6bde020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6bde1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab6bde340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab6bde4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab6bde660"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab6bde7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab6bde980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab6bdeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ab6bdeda0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6bdeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab6bdd180"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab6bdd310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6bdd4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab6bdd630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab6bdd7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6bdd950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab6bddae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab6bddc70"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab6bdde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ab81a8ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab81a8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab81a6020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab81a61b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab81a6340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab81a64d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab81a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ab81ab4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81ab4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab81ab850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab81ab9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab81abb70"/>
        <function-ref name="get" scoped="" ref="0x7f4ab81abd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab81aa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab81aa1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab81aa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab81aa4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab81aa660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab81aa7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab81aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ab81a9280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab81a9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab81a9600"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab81a9790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab81a9920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab81a9ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab81a9c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab81a9dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab81a8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab81a81b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab81a8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4ab6bd3da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6bd3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab6bd2180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab6bd2310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab6bd24a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab6bd2630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6bd27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ab6bd54c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6bd54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab6bd5840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab6bd59d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6bd5b60"/>
        <function-ref name="get" scoped="" ref="0x7f4ab6bd5cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6bd5e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab6bd4030"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab6bd41c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab6bd4350"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab6bd44e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab6bd4670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab6bd4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6bd9340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bd9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6bd6ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6bd8b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6bd6550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6bd6090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6bd5090"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6bd81b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6bd86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab6bdaa30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab6bdaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab6bdadb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ab6bd4a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6bd4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab6bd4e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab6bd3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6bd31b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab6bd3340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab6bd34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6bd3660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab6bd37f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab6bd3980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab6bd3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab8155020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab8155020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab8155e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8150800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab8150340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8150cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f4ab814c020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ab814c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab814ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab814b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab814b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab814bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ab81392c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab81392c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab8139640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab81397d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab8139960"/>
        <function-ref name="get" scoped="" ref="0x7f4ab8139af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab8139c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8139e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab8138020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab81381b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8138340"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab81384d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab8138660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab81470a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab81470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab813a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab813a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab813a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab813ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4ab8117540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4ab8117540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab81153d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8115d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab8115890"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8114260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab81190f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab81190f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab8118020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab81189a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab81184e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8118e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6bef020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6bef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6bec870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6bed840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6bec220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6bedd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6becd30"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6befe30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6bed380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4ab6be9780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ab6be9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6be5020"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6be6020"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6be69a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6be64e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6be54e0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6be75d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6be7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ab6beb3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab6beb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab6bea240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab6beabc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab6bea700"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab6be90d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f4ab80a2490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f4ab80a2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab80a2810"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab80a29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4ab80a61d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab80a61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab80a3b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab80a59f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab80a34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab80a3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab80a2020"/>
        <function-ref name="start" scoped="" ref="0x7f4ab80a5020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab80a5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ab80accf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab80accf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab80a7220"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab80aa7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab80a8590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab80a8110"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab80a7b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab80a76a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab80aac40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab80ab940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab80a8ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab80abe10"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab80aa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f4ab8052e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f4ab8052e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab8051220"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab80513b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4ab8057c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4ab8057c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab8052110"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab80546a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab80534a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab8053020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab8052a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab8052590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab8054b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab8056860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab8053ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab8056d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab8054220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ab805d690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab805d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab8059cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab805a260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab8059090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab805aba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab8057680"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab80571e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab805a700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab805c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab80596c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab805c880"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab805cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ab804ecf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ab804ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab8044980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ab8043020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab8043020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab8043e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab8042800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab8042340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab8042cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab8030c50" loc="38:../../../tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab8030c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab8032020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab80321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f4ab80256e0" loc="44:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f4ab80256e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f4ab8025a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7f4ab8027c40" loc="39:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ab8027c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab802d020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ab802d1b0"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab802d340"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ab802d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab802c020" loc="43:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab802c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab802c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7f4ab8032dc0" loc="38:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7f4ab8032dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab802e180"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab802e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab802d810" loc="42:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab802d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab802db90"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab802dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ab8019e10" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ab8019e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab80181c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ab8018350"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab80184e0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ab8018670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ab800fe10" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ab800fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab80191c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ab8019350"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab80194e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ab8019670"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ab8019800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ab8019990"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab8019b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab801d870" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab801d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab801dbf0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab801dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab7d8ac70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7d8ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab7d88020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab7d881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ab7d87440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ab7d87440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7d877c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ab7d87950"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab7d87ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ab7d87c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4ab7d86020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7d86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab7d863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ab7d88440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ab7d88440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7d887c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ab7d88950"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab7d88ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ab7d88c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ab7d88e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ab7d87020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7d871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7d8a020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7d8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7d8a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7d8a530"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7d8a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7d8a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7d8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ab7faa8e0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7faa8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab7faac60"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab7faadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ab7facd00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ab7facd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7fa80a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ab7fa8230"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab7fa83c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ab7fa8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4ab7fa61d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7fa61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab7fa6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ab7fad670" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ab7fad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7fad9f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ab7fadb80"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab7fadd10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ab7fac020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ab7fac1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ab7fac340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7fac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ab7fa8e50" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ab7fa8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7fa7210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7fa73a0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7fa7530"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7fa76c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7fa7850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7fb3c80" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7fb3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7fae0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7fae230"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7fae3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7fae550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7fae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ab7fa0710" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7fa0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7fa0a90"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7fa0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ab7f1ca20" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7f1ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab7f1cdc0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab7f1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ab7f19570" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ab7f19570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7f19910"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ab7f19aa0"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab7f19c30"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ab7f19dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4ab7f17020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7f17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab7f173c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4ab7f17690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ab7f17690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab7f17a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab7f17ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab7f17d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab7f16020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab7f161b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab7f16340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab7f164d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab7f16660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab7f167f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab7f16980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab7f16b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab7f16ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab7f16e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab7f15120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab7f152b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab7f15440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab7f155d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab7f15760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab7f158f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab7f15a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab7f15c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab7f15da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab7f14020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab7f141b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab7f14340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab7f146d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab7f14860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab7f149f0"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab7f14b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab7f14d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab7f13020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab7f131b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab7f13340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab7f134d0"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab7f13660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab7f137f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab7f13980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab7f13b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab7f13ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab7f13e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ab7f1a3e0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ab7f1a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7f1a780"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ab7f1a910"/>
        <function-ref name="receive" scoped="" ref="0x7f4ab7f1aaa0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ab7f1ac30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ab7f1adc0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ab7f19020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7f191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ab7f12c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab7f12c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7f11ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7f104e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7f10020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab7f109a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ab7f18230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ab7f18230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7f185d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7f18760"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7f188f0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7f18a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7f18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7f1db10" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7f1db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7f1c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7f1c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7f1c340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7f1c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7f1c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ab7f12290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7f12290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7f12630"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7f127c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab7f10dd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab7f10dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab7f0e180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab7f0e310"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab7f0e4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab7f0e630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab7f0e7c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7f0e950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab7f0eae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7f0d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7f0ee00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab7f0ec70"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab7f0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ab7eff3b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab7eff3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7eff730"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7eff8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4ab7f020d0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7f020d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7f02450"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7f025e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ab7f02900" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab7f02900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab7f02c80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab7f02e10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab7f05020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab7f051b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab7f05340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab7f054d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab7f05660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab7f057f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab7f05980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab7f05b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab7f05ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab7f05e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab7f04020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab7f042b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab7f04440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab7f045d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab7f04760"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab7f048f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab7f04a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab7f04c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab7f04da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab7f01020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab7f011b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab7f01340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab7f014d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab7f01860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab7f019f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab7f01b80"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab7f01d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab7f00020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab7f001b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab7f00340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab7f004d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab7f00660"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab7f007f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab7f00980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab7f00b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab7f00ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab7f00e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab7eff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ab7ef2670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ab7ef2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7ef29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7ef2b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7ef2d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7ef1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7ef11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7ef1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7ef14d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7ef1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7ef17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7ef1980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7ef1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7ef1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7ef1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7ef0120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7ef02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ab7ef7dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7ef7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7ef6180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7ef6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4ab7ef0670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4ab7ef0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7ef09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7ef0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7ef0d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7eef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7eef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7eef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7eef4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7eef660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7eef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7eef980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7eefb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7eefca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7eefe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7eee120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7eee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4ab7eee670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4ab7eee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7eee9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7eeeb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7eeed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7eed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7eed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7eed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7eed4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7eed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7eed7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7eed980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7eedb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7eedca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7eede30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7eec120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7eec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4ab7efb020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ab7efb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab7efb3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab7efb530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab7efb6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab7efb850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab7efb9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab7efbb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab7efbd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab7efa020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab7efa1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab7efa340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab7efa4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab7efa660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab7efa7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab7efaa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab7efac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab7efada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab7ef9020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab7ef91b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab7ef9340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab7ef94d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab7ef9660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab7ef97f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab7ef9980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab7ef9b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab7ef9ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab7ef8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab7ef83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab7ef8540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab7ef86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab7ef8860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab7ef89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab7ef8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab7ef8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab7ef7020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab7ef71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab7ef7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab7ef74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab7ef7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab7ef77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab7ef7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4ab7efe710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7efe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7efea90"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7efec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4ab7ef4670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4ab7ef4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7ef49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7ef4b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7ef4d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7ef3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7ef31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7ef3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7ef34d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7ef3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7ef37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7ef3980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7ef3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7ef3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7ef3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7ef2120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7ef22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ab7ef66d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ab7ef66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7ef6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7ef6be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7ef6d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7ef5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7ef51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7ef5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7ef54d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7ef5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7ef57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7ef5980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7ef5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7ef5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7ef5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7ef4120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7ef42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab7e6f110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab7e6f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7e6e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7e6e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7e6e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab7e6ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab6b41c70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6b41c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab6b40020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab6b401b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab6b3bd70" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab6b3bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab6b3a180"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab6b3a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ab6b3b5d0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab6b3b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab6b3b950"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab6b3bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab6b41020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab6b41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab6b413a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab6b41530"/>
        <function-ref name="request" scoped="" ref="0x7f4ab6b416c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab6b41850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab6b419e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ab6b40be0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab6b40be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab6b3f020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab6b3f1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab6b3f340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab6b3f4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab6b3f660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab6b3f7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab6b3f980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab6b3fb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab6b3fca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab6b3fe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab6b3e020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab6b3e1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab6b3e340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab6b3e5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab6b3e760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab6b3e8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab6b3ea80"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab6b3ec10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab6b3eda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab6b3d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab6b3d1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab6b3d340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab6b3d4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab6b3d660"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab6b3d7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab6b3db80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab6b3dd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab6b3c020"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab6b3c1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab6b3c340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab6b3c4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab6b3c660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab6b3c7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab6b3c980"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab6b3cb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab6b3cca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab6b3ce30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab6b3b020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab6b3b1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab6b3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab6b40440" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab6b40440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab6b407c0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab6b40950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab7e51d50" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7e51d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab7e50100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab7e50290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab7e4f370" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7e4f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab7e4f6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab7e4f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ab7e57cd0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7e57cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7e520a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7e52230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7e52a60" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7e52a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7e52de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7e51020"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7e511b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7e51340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7e514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab7e50590" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7e50590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab7e50910"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab7e50aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ab7e39020" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7e39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab7e393a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab7e39530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ab7e4b0d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7e4b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7e4b470"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7e4b600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4ab7e3a880" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ab7e3a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7e3ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ab7e4ba00" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab7e4ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7e4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4ab7e3a0a0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ab7e3a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7e3a420"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7e3a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab7dbfbf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab7dbfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab7dbe020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab7dbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab7dbd930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7dbd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab7dbdcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab7dbde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ab7dbe400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7dbe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7dbe780"/>
        <function-ref name="requested" scoped="" ref="0x7f4ab7dbe910"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7dbeaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7dbec30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab7dbedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7dc1e60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7dc1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7dbf230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7dbf3c0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7dbf550"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7dbf6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7dbf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab7dbd060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7dbd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab7dbd3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab7dbd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab6ad3020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab6ad3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab6ad33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ab6ad3630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ab6ad3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ab6ad39b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ab6ad3b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ab6ad3cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ab6ad3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab6ad06c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6ad06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab6ad0a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab6ad0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab6acd400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab6acd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab6acd7a0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab6acd930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ab6acdbc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ab6acdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ab6acc020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ab6acc1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ab6acc340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ab6acc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ab6ad0e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab6ad0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab6ace1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f4ab6ace370"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab6ace500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab6ace690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab6ace820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab6acc720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab6acc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab6accaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab6accc30"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab6accdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab6acb020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab6acb1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab6acb340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab6acb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab6acbb10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab6acb7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab6acb660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab6acb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab6ad1850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab6ad1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab6ad1bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab6ad1d80"/>
        <function-ref name="request" scoped="" ref="0x7f4ab6ad0020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab6ad01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab6ad0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab6acea70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab6acea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab6acedf0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab6acd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4ab6acbde0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f4ab6acbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab6aca180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab6aca310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4ab7da3400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ab7da3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4ab7da3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4ab7da39d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7da39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7da3d50"/>
        <function-ref name="requested" scoped="" ref="0x7f4ab7da1020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7da11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7da1340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab7da14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4ab7db8b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab7db8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7da3020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7da31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ab7da1720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7da1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab7da1aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab7da1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4ab6a9bbd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ab6a9bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4ab6a99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4ab6a99270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab6a99270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab6a995f0"/>
        <function-ref name="requested" scoped="" ref="0x7f4ab6a99780"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab6a99910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab6a99aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab6a99c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4ab6a9b470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ab6a9b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab6a9b7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6a9b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ab6a99e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab6a99e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab6a98220"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab6a983b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f4ab7d828e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ab7d828e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab7d82c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4ab7d81020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7d81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7d813a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7d81530"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7d816c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7d81850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7d819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab7d82080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab7d82080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7d82400"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7d82590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f4ab7d74080" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f4ab7d74080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f4ab7d74400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7d713a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7d713a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7d71720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f4ab7d71a00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f4ab7d71a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f4ab7d71d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f4ab7d6b6b0" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f4ab7d6b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab86e5770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f4ab86e40d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d6a810"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d6a390"/>
        <function-ref name="notify" scoped="" ref="0x7f4ab7d6ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f4ab7d72430" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f4ab7d72430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab86e5770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f4ab86e40d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7d6b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f4ab7d5f360" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f4ab7d5f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d5f6e0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d5f870"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab7d5fa00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab7d5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7d68a90" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7d68a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7d68e10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7d64020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7d641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7d64340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7d644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7d64660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7d647f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7d64980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ab7d55710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ab7d55710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d55a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d55c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d55db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d54020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d541b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d54340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ab7d4a8a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ab7d4a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d4ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d4adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d49020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d491b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d49340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ab7d51710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ab7d51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d51a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d51c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d51db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d50020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d501b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ab7d4f710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ab7d4f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d4fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d4fc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d4fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d4e020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d4e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d4e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ab7d5c710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ab7d5c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d5ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d5cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d5cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d56020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d561b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ab7d4c710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ab7d4c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d4cb90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d4cd20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d4b020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d4b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d4b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ab7d54710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ab7d54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d54a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d54c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d54db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d53020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d531b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ab7d498a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ab7d498a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d49c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d49db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d48020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d481b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d48340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ab7d57660" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ab7d57660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d579e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d57b70"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d57d00"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d5d020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d5d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ab7d4e710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ab7d4e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d4ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d4ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d4edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d4d020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d4d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d4d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ab7d56710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ab7d56710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d56a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d56c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d56db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d55020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d551b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ab7d4b8a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ab7d4b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d4bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d4bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d4a020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d4a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d4a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ab7d53710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ab7d53710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d53a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d53c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d53db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d51020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d511b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ab7d50710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ab7d50710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d50a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d50c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d50db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d4f020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d4f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d4f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ab7d5d710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ab7d5d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d5da90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d5dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d5ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d5c020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d5c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ab7d4d710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ab7d4d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d4da90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d4dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d4ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d4c020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d4c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ab7d41710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ab7d41710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d41a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d41c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d41db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d40020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d401b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ab7d368a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ab7d368a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d36c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d36db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d35020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d351b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d35340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ab7d3e710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ab7d3e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d3ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d3ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d3edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d3d020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d3d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d3d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ab7d3c710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ab7d3c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d3ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d3cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d3cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d3b020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d3b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ab7d43710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ab7d43710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d43a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d43c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d43db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d42020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d421b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d42340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ab7d39710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ab7d39710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d39b90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d39d20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d37020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d371b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d37340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ab7d40710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ab7d40710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d40a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d40c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d40db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d3f020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d3f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d3f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ab7d358a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ab7d358a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d35c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d35db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d34020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d341b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d34340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ab7d456b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ab7d456b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d45a30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d45bc0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d45d50"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d44020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d441b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d44340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ab7d3b710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ab7d3b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d3ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d3bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d3bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d3a020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d3a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d3a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ab7d42710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ab7d42710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d42a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d42c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d42db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d41020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d411b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d41340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ab7d378a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ab7d378a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d37c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d37db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d36020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d361b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d36340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d364d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ab7d3f710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ab7d3f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d3fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d3fc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d3fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d3e020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d3e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ab7d3d710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ab7d3d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d3da90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d3dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d3ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d3c020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d3c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ab7d44710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ab7d44710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d44a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d44c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d44db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d43020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d431b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ab7d3a710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ab7d3a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7d3aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7d3ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7d3adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7d39020"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7d391b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7d39340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7c62020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7c62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7c623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7c62530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7c626c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7c62850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7c629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7c62b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7c62d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7c61020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7c611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7c61340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7c614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7c61660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7c617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7c61a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7c61c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7c64d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7c64d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7c63180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7c63310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7c634a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7c63630"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7c637c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7c63950"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7c63ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7c63c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ab7c50020" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ab7c50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7c503a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7c50530"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7c506c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab7c50850"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7c509e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab7c50b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ab7c5d490" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ab7c5d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7c5d810"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7c5d9a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab7c5db30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab7c5dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f4ab7c31480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f4ab7c31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7c31800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7c31990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f4ab7c328f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f4ab7c328f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7c32c70"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7c32e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab7c31020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab7c311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f4ab7c36ca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f4ab7c36ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f4ab7c35d40"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7c358c0"/>
        <function-ref name="notify" scoped="" ref="0x7f4ab7c331e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f4ab7c37b10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f4ab7c37b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7c36750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f4ab7c33660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7c33660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7c339e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7c33b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7c33d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7c32020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7c321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7c32340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7c324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7c32660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f4ab7c2ae20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7f4ab7c2ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7c28a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f4ab7c2b270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f4ab7c2b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab86e5770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f4ab86e40d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f4ab7c2a310"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7c2be60"/>
        <function-ref name="notify" scoped="" ref="0x7f4ab7c2a790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f4ab7c27130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f4ab7c27130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f4ab7c261e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab7c27d20"/>
        <function-ref name="notify" scoped="" ref="0x7f4ab7c26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f4ab7c2c020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f4ab7c2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab86e5770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f4ab86e40d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7c2cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ab7c1cc00" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7c1cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7c19020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab7c191b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7c19340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7c194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ab7c19ca0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab7c19ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7c170a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7c17230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7c173c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7c17550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7c176e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4ab7c16c00" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4ab7c16c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ab7c152b0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab7c152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7c15630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab7c157c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7c15950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7c15ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab7c15c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ab7c12430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab7c12430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab7c11b00"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab7c032a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab7c113d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7c039d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ab7bf6430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bf6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ab7bf67b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ab7bf6940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ab7bf6ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ab7bf6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab7c16020" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab7c16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7c163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ab7c0b350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7c0b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab7c0b6d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab7c0b860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab7c0b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ab7c14020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7c14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab7c143a0"/>
        <function-ref name="source" scoped="" ref="0x7f4ab7c14530"/>
        <function-ref name="address" scoped="" ref="0x7f4ab7c146c0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab7c14850"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab7c149e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab7c14b70"/>
        <function-ref name="type" scoped="" ref="0x7f4ab7c14d00"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab7c13020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab7c131b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab7c13340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab7c134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ab7c02660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab7c02660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab7c01ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab7bff460"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab7c015b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7bffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ab7beb2f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7beb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7beb670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab7beb800"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7beb990"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7bebb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ab7bdb2c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7bdb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab7bdb640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab7bdb7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab7bdb960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab7bdbaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab7bdbc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab7bdbe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4ab7bcf1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f4ab7bcf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4ab7bcf650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ab7be5020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab7be5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7be53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab7be5530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7be56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7be5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab7be59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ab7bea320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab7bea320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7bea6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7bea830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7bea9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7beab50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7beace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4ab7be71d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4ab7be71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7be7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ab7bdc0f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7bdc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab7bdc470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab7bdc600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab7bdc790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab7bdc920"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab7bdcab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab7bdcc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ab7bd1170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bd1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ab7bd14f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ab7bd1680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ab7bd1810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ab7bd19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab7be8510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab7be8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7be8890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ab7be4020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7be4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab7be43a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab7be4530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab7be46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ab7bc7430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7bc7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ab7bc77b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ab7bc7940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ab7bc7ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ab7bc7c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ab7bc7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ab7be7800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab7be7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab7be7b80"/>
        <function-ref name="source" scoped="" ref="0x7f4ab7be7d10"/>
        <function-ref name="address" scoped="" ref="0x7f4ab7be6020"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab7be61b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab7be6340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab7be64d0"/>
        <function-ref name="type" scoped="" ref="0x7f4ab7be6660"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab7be67f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab7be6980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab7be6b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab7be6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ab7bd7170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab7bd7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ab7bd74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ab7bc2020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7bc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7bc23a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab7bc2530"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7bc26c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7bc2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ab7bb19d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab7bb19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ab7bb1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ab7bb0b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7bb0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ab7baf020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ab7baf1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ab7baf340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ab7baf4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ab7baf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ab7bb2020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7bb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab7bb23a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab7bb2530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab7bb26c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab7bb2850"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab7bb29e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab7bb2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ab7bbd990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7bbd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7bbdd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7bb5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7bb51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7bb5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7bb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ab7bb0080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7bb0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ab7bb0400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ab7bb0590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ab7bb0720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ab7bb08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ab7bbe500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ab7bbe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7bbe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ab7bb1020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab7bb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab7bb13a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab7bb1530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab7bb16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7bc11d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7bc11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7bc1550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7bc16e0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7bc1870"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7bc1a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7bc1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ab7bb36f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ab7bb36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7bb3a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7bb3c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7bb3d90"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7bbe020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7bbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ab7bbebc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ab7bbebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab7bbd020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab7bbd1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7bbd340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7bbd4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab7bbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ab7bb5840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7bb5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7bb5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ab7bac390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7bac390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7bac710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab7bac8a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7baca30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7bacbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ab7baa330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7baa330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab7baa6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab7baa840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab7baa9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab7baab60"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab7baacf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab7baae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab7bace80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab7bace80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7bab220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7bab3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7bab540"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7bab6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7bab860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab7babb40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab7babb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7baa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ab7ba9e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7ba9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7ba6220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab7ba63b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7ba6540"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7ba66d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ab7ba57e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab7ba57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab7ba5b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab7ba5cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab7ba5e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab7ba3030"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab7ba31c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab7ba3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4ab7b9aae0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4ab7b9aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab7b9ae60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab7b99020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab7b991b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab7b99340"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab7b994d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab7b99660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ab7b8e020" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7b8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab7b8e3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab7b8e530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab7b8e6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab7b8e850"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab7b8e9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab7b8eb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f4ab7b93d30" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ab7b93d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7b9a0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7b9a270"/>
        <function-ref name="modify" scoped="" ref="0x7f4ab7b9a400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7b9a590"/>
        <function-ref name="resend" scoped="" ref="0x7f4ab7b9a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab7ba6990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab7ba6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7ba6d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7ba5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7ba51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7ba5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7ba54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ab7b92020" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ab7b92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ab7b923a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ab7b92530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4ab7ba0020" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4ab7ba0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7ba03a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7ba0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab7b88660" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab7b88660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7b889e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab7b88b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab7b88d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f4ab7b9cb50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b9cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ab7ba1020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ab7ba11b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ab7ba1340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ab7ba14d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ab7ba1660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ab7ba17f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ab7ba1980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ab7ba1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab7b927f0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab7b927f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab7b92b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab7b92d00"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab7b8f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab7b8f1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab7b8f340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7b8f4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab7b8f660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab7b8fca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7b8f7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab7b8f980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7b8fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4ab7ba3640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7ba3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7ba39c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7ba3b50"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7ba3ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7ba3e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7ba2030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f4ab7b83e40" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f4ab7b83e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab7b8b310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab7b8b4a0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab7b8b630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab7b8b7c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab7b8b950"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab7b8bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f4ab7b7e9e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f4ab7b7e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7b7ed60"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7b7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f4ab7b7fa10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f4ab7b7fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7b7fd90"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7b7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f4ab7b80a00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f4ab7b80a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7b80d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7b7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4ab7b26b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7b26b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ab7b32020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ab7b321b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ab7b32340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ab7b324d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ab7b32660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ab7b327f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ab7b32980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ab7b32b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ab7b32ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ab7b32e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ab7b31020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ab7b311b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ab7b31340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ab7b315d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ab7b31760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4ab7b24020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4ab7b24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b24c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab7b230d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4ab7b31a60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b31a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ab7b31de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ab7b25020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ab7b251b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ab7b25340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ab7b254d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ab7b25660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ab7b257f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ab7b25980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7b36720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7b36720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7b36aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7b36c30"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7b36dc0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7b33020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7b331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4ab7b1c970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7b1c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ab7b1ccf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ab7b1ce80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ab7b1b030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ab7b1b1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ab7b1b350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ab7b1b4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ab7b1b670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ab7b1b800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ab7b1b990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ab7b1bb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ab7b1bcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ab7b1be40"/>
        <function-ref name="sync" scoped="" ref="0x7f4ab7b1a020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ab7b1a2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ab7b1a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f4ab7afe8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7afe8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7afec60"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7afedf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4ab7b15020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab7b15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ab7b153a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f4ab7b15a10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f4ab7b15a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab7b122a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7b132a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab7b13c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab7b13760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab7b12760"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7b14890"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7b14da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f4ab7b01710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7b01710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b01a90"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7b01c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f4ab7b10e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4ab7b10e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7b0f220"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7b0f3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7b0f540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7b0f6d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7b0f860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7b0f9f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7b0fb80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7b0fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4ab7b19b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4ab7b19b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b18750"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab7b18bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f4ab7aec820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f4ab7aec820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7aecba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7aecd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f4ab7afd1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ab7afd1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7afd540"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7afd6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4ab7afda70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7afda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7afddf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7afc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f4ab7b02550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7b02550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b028d0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7b02a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4ab7b08af0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab7b08af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ab7b08e70"/>
        <function-ref name="changed" scoped="" ref="0x7f4ab7b0b030"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ab7b0b1c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ab7b0b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ab7b12c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ab7b12c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7b10020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7b101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7b10340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7b104d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7b10660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7b107f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7b10980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7b10b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f4ab7afb120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab7afb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7afb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f4ab7b0e0f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4ab7b0e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7b0e470"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7b0e600"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7b0e790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7b0e920"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7b0eab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7b0ec40"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7b0edd0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7b0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7b1d4a0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7b1d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7b1d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4ab7afe020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7afe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7afe3a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7afe530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f4ab7afba40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab7afba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7afbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ab7af81d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ab7af81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7af8550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7af86e0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7af8870"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7af8a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7af8b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f4ab7af7d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f4ab7af7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7af6180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7af6310"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7af64a0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7af6630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7af67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4ab7b1a740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ab7b1a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ab7b1aac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ab7b1ac50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ab7b1ade0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ab7b19020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ab7b191b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ab7b19340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ab7b194d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ab7b19660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f4ab7b02e00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7b02e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b011c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7b01350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f4ab7affbe0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7affbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b02020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7b021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f4ab7af92b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ab7af92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7af9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab7af6a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab7af6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab7af6e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab7af5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab7af51b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab7af5340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab7af54d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7af5660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab7af57f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab7af5e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7af5980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab7af5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7af5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f4ab7aed940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f4ab7aed940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7aedcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7aede50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7b1db10" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7b1db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7b1c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7b1c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7b1c340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7b1c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7b1c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f4ab7b0a5a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ab7b0a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b0a920"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7b0aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f4ab7b03c00" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7b03c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7b0a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7b0a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f4ab7b0d400" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ab7b0d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7b0d780"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7b0d910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab7b0daa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab7b0dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f4ab7af7020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f4ab7af7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7af73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7af7530"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7af76c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7af7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7af79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f4ab7af99c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab7af99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7af9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7a767e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7a767e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7a76b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4ab7a73220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a73220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab7a71b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7a72a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab7a714e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab7a71020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab7a6f020"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7a72090"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7a725a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7a6c260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7a6c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7a6c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4ab7a6caf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ab7a6caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab7a31390"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7a33360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab7a33ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab7a33820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab7a31850"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7a34970"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7a34e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6a50870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a50870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6a4c090"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a4e090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6a4ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6a4e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6a4c550"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6a4f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6a4fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab6a50020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab6a50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab6a503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6a48870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a48870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6a45090"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a46090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6a46a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6a46550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6a45550"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6a476a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6a47bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab6a48020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab6a48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab6a483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ab6a2f020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6a2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab6a2f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab6a2f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab6a2f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab6a2f850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a2f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ab6a32570" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6a32570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab6a328f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab6a32a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6a32c10"/>
        <function-ref name="get" scoped="" ref="0x7f4ab6a32da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6a31020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab6a311b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab6a31340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab6a314d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab6a31660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab6a317f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab6a31980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ab6a31c10" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6a31c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab6a30020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab6a301b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6a30340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab6a304d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab6a30660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6a307f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab6a30980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab6a30b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab6a30ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4ab6a26da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ab6a26da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab6a25180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ab6a25310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ab6a254a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ab6a25630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a257c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ab6a284c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab6a284c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab6a28840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab6a289d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6a28b60"/>
        <function-ref name="get" scoped="" ref="0x7f4ab6a28cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6a28e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab6a27030"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab6a271c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab6a27350"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab6a274e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab6a27670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab6a27800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6a2c340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a2c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6a29ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a2bb80"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6a29550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6a29090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6a28090"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6a2b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6a2b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab6a2da30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab6a2da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab6a2ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ab6a27a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab6a27a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab6a27e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab6a26020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab6a261b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab6a26340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab6a264d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab6a26660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab6a267f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab6a26980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab6a26b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab7a56080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab7a56080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7a55020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7a559a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7a554e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab7a55e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4ab7a4d0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4ab7a4d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7a4c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7a4c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7a4c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab7a4ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab7a51cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab7a51cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7a50b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7a4e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7a4e090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab7a4ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ab6a43a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ab6a43a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6a3f2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a402e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6a40c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6a407a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6a3f7a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6a428d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6a42de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4ab6a3c210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ab6a3c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab6a39b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab6a3aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab6a394e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab6a39020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab6a38020"/>
        <function-ref name="start" scoped="" ref="0x7f4ab6a3a090"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab6a3a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ab6a3fe10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab6a3fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab6a3eca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab6a3d670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab6a3d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab6a3db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f4ab7a2b090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4ab7a2b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a2b410"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a2b5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a2b730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a2b8c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a2ba50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a2bbe0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a2bd70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f4ab7a2a390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4ab7a2a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a2a710"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a2a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a2aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a2abc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a2ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a29020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a291b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f4ab7a296a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4ab7a296a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a29a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a29bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a29d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a28020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a28340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a284d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a28660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f4ab7a2de60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ab7a2de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a2c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a2c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a2c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a2c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a2c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a2c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a2cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a2cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f4ab7a27ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4ab7a27ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a260a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a26230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a263c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a26550"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a266e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a26870"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a26a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a26b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f4ab7a74b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4ab7a74b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a2d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a2d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a2d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a2d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a2d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a2d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a2d980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a2db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f4ab7a289b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4ab7a289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a28d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a27020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a27340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a27660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a277f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a27980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a232f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a23670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a23800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a23990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a23b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a23cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a23e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a22020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a221b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a22340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a224d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a22660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a227f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a22980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a22c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a22da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a24020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a24530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a246c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a24850"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a249e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a24b70"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a24d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a1fde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a1fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a1d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a1d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a1d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a1d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a1d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a1d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a1dae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a1dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a1de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a1c020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a1c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a1c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a1c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a1c760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a1c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a20b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a20b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a1f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a1f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a1f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a1f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a1f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a1f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a1f980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a1fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a19930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a19930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a19cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a19e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a18020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a18340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a18660"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a18980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a18b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a18ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a18e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a17020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a172b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a17440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a1a710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a1a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a1aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a1ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a1adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a19020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a19340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a194d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a19660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a14480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a14480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a14800"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a14990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a14b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a14cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a14e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a131b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a13340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a134d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a13660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a137f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a13980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a13b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a13da0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a151d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a151d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a15550"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a156e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a15870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a15a00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a15b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a15d20"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a14020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a0f020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a0f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a0f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a0f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a0f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a0f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a0fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a0fd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a0e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a0e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a0e340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a0e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a0e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a0e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a0ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a0ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a11d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a11d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a10180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a10310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a104a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a10630"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a107c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a10950"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a10ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a10c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a0bde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a0bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a0a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a0a310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a0a4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a0a630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a0a7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a0a950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a0aae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a0ac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a0ae00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a09020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a09340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a094d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a09760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a0cb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a0cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a0b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a0b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a0b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a0b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a0b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a0b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a0b980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a0bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7a05930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7a05930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a05cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a05e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7a04020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a04340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7a044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a04660"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7a04980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7a04b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a04ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7a04e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7a03020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7a032b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a03440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab7a07710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab7a07710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7a07a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7a07c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7a07db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7a05020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7a051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7a05340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7a054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7a05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f4ab79f0150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ab79f0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ab79f04d0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79f0660"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab79f07f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ab79f0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f4ab79f0d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ab79f0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab79ef180"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79ef310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab79ef4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab79ef630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f4ab79efa20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ab79efa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab79efda0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79ec020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab79ec1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab79ec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f4ab79d48f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f4ab79d48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ab79d4c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ab79d4e00"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab79d3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab79d31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab79d3340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ab79d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ab79e6a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ab79e6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ab79e6da0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79d5020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab79d51b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ab79d5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ab79d55d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ab79d55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ab79d5950"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ab79d5ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab79d5c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ab79d5e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ab79d4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab79d41b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ab79d4340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ab79d44d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ab79d4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f4ab79d37a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab79d37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab79d3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab79d3cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab79d3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab79d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab79d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab79d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab79d24d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab79d2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab79d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab79d2980"/>
        <function-ref name="set" scoped="" ref="0x7f4ab79d2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab79d2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab79d2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab79d1120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab79d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ab79cd480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ab79cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab79cd800"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab79cd990"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79cdb20"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab79cdcb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab79cde40"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab79cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ab79ce8a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ab79ce8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab79cec20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79cedb0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab79cd020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab79cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ab79ca480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ab79ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab79ca800"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab79ca990"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79cab20"/>
        <function-ref name="edge" scoped="" ref="0x7f4ab79cacb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ab79cae40"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ab79c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ab79cb8b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ab79cb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab79cbc30"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab79cbdc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab79ca020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab79ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ab7674e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7674e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7673410"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76735a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ab767e160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ab767e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ab7678e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7678e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7676210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ab7672880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7672880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7672c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7672d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ab76680a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ab76680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7668420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76685b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ab76710a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ab76710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7671420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76715b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ab765c500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab765c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765c880"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ab765e500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab765e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765e880"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ab767d490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab767d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ab7664880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ab7664880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7664c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7664d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ab765f500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab765f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765f880"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ab7676e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ab7676e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7675210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ab7675e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7675e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7674210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ab766a880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab766a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab766ac00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab766ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ab766d0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ab766d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab766d420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab766d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ab7671880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7671880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7671c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7671d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab7680a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7680a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab7680e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab767f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab767f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ab767be00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab767be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ab767a490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ab767a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ab7663c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7663c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76620a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7662230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ab767abe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab767abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7679020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ab765fce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab765fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ab767b160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab767b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ab76640a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ab76640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7664420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ab7675670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7675670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76759f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7675b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ab7676670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7676670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76769f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7676b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ab767fad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab767fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ab76650a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab76650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7665420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ab7668880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7668880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7668c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7668d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ab7665880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7665880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7665c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7665d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ab765dce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab765dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ab765ece0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab765ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ab766d880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ab766d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab766dc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab766dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ab76660a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ab76660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7666420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76665b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ab7661ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7661ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ab7670880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab7670880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7670c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7670d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ab765cce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab765cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab765b0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab765b230"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765b3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab765b550"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab765b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ab767f480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab767f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ab7678670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ab7678670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76789f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7678b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ab7674670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7674670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76749f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7674b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ab76690a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab76690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7669420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76695b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ab76700a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab76700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7670420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76705b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ab7669880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab7669880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7669c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7669d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ab7673870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7673870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7673bf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7673d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ab767e7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ab767e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ab76720a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab76720a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7672420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76725b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7681e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7681e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab76801c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7680350"/>
        <function-ref name="request" scoped="" ref="0x7f4ab76804e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7680670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7680800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ab76792f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab76792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7679670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ab7678020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ab7678020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ab7661500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ab7661500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7661880"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7661a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ab7662ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7662ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76610a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7661230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ab767b7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab767b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ab7662500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab7662500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7662880"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7662a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ab765d500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ab765d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab765d880"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ab766a0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab766a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab766a420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab766a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ab7666880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7666880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7666c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7666d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ab767ee00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ab767ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ab767dae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab767dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab767de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ab766e0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab766e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab766e420"/>
        <function-ref name="write" scoped="" ref="0x7f4ab766e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ab7679940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ab7679940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7679cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ab766e880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ab766e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab766ec00"/>
        <function-ref name="write" scoped="" ref="0x7f4ab766ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ab76630a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ab76630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7663820"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76639b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ab765b9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab765b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab765bd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab765a020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab765a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab765a340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab765a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4ab7989630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4ab7989630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab79899b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab7989b40"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7989cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab7989e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab7988020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab798a670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab798a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab798a9f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab798ab80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab798ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4ab79888c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4ab79888c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7988c40"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7988dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4ab79866f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4ab79866f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7986a70"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7986c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab798d950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab798d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab798dcd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab798de60"/>
        <function-ref name="request" scoped="" ref="0x7f4ab798a020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab798a1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab798a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4ab7985510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4ab7985510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7985890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f4ab796f680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab796f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab796fa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab796fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4ab7980bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4ab7980bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab797f020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab797f1b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab797f340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab797f4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab797f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab7984920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7984920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab7984ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab7984e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab7981020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f4ab7979080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ab7979080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ab7979400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f4ab7978020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f4ab7978020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab79783a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab7978530"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab79786c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab7978850"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab79789e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab7978b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ab797b400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ab797b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab797b780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab797b910"/>
        <function-ref name="request" scoped="" ref="0x7f4ab797baa0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab797bc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab797bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4ab797d020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4ab797d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab797d3a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab797d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4ab797ddb0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4ab797ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab797c180"/>
        <function-ref name="write" scoped="" ref="0x7f4ab797c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab7978df0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab7978df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab79771c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab7977350"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab79774e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab7977670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab7977800"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7977990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab7977b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab79711b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7977cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab7977e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7971020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7981810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7981810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7981b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7981d20"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7980020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab79801b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7980340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f4ab796b120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f4ab796b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab796b4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab796b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4ab797cba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4ab797cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab797b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ab7910770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab7910770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab7910af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab7910c80"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab7910e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab790d020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab790d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab790d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ab790c280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab790c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab790c600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab790c790"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab790c920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab790cab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab790cc40"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab790cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7907020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7907020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab79073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ab7907b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab7907b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab7906020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab79061b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab7906340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab79064d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab7906660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab79067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ab76a9020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab76a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab76a93a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab76a9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ab78ee8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ab78ee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ab78eec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab78efc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab78efc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab78ee020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab78ee1b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab78ee340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab78ee4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab78ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab695f440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab695f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab695f7c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab695f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ab695ed70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab695ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab695d180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab695d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ab695d5a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab695d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab695d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ab695fbe0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ab695fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ab695e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab6960770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab6960770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab6960af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab6960c80"/>
        <function-ref name="request" scoped="" ref="0x7f4ab6960e10"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab695f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab695f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ab695e2b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab695e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ab695e630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ab695e7c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ab695e950"/>
        <function-ref name="write" scoped="" ref="0x7f4ab695eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ab78db6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab78db6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab78dba30"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab78dbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ab78d9850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab78d9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab78d9bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab78d9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ab78d6a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab78d6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab78d6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ab78da020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ab78da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ab78da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ab78d7690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ab78d7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab78d7a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab78d7ba0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab78d7d30"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab78d6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab78d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab78dc430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab78dc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab78dc7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab78dc940"/>
        <function-ref name="request" scoped="" ref="0x7f4ab78dcad0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab78dcc60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab78dcdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ab78da6a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab78da6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ab78daa20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ab78dabb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ab78dad40"/>
        <function-ref name="write" scoped="" ref="0x7f4ab78d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ab78d52a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab78d52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab78d5620"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab78d57b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ab787d250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab787d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab787d5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab787d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ab787cc50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ab787cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab787b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab787b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ab787a3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ab787a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ab787a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ab787da10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ab787da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ab787dd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4ab787aa50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ab787aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab787add0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab7879020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab78791b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab7879340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab78794d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab7879660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab78797f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab7879980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab7879b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab7879ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab7879e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab7878020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab78781b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab7878440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab78785d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab7878760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab78788f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab7878a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab7878c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab7878da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab7877020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab78771b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab7877340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab78774d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab7877660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab78779f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab7877b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab7877d10"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab7876020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab78761b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab7876340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab78764d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab7876660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab78767f0"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab7876980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab7876b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab7876ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab7876e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab7875020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab78751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab7875c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab7875c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab7873020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab78731b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab7873340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab78734d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab7873660"/>
        <function-ref name="get" scoped="" ref="0x7f4ab78737f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab7873980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7872020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7873ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab7873b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab7873e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ab787b5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ab787b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab787b950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab787bae0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab787bc70"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab787be00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab787a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab787e470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab787e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab787e810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab787e9a0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab787eb30"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab787ecc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab787ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ab787c060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ab787c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ab787c3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ab787c570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ab787c700"/>
        <function-ref name="write" scoped="" ref="0x7f4ab787c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ab7875480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ab7875480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7875800"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7875990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f4ab78722f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f4ab78722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7872670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7872800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4ab78655e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ab78655e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7865960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ab7866d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab7866d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab78650e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7865270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ab786a020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab786a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab786a3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab786a530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab786a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab786a850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab786a9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab786ab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab786ad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab7869020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab78691b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab7869340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab78694d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab7869660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab78697f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab7869a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab7869c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab7869da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab7868020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab78681b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab7868340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab78684d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab7868660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab78687f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab7868980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab7868b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab7868ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab7867220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab78673b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab7867540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab78676d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab7867860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab78679f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab7867b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab7867d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab7866020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab78661b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab7866340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab78664d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab7866660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab78667f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab7866980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ab782ab20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ab782ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7829020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab78291b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7829340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab78294d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7829660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab78297f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7829980"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7829b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7829ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7829e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7828020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab78281b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7828340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab78285d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7828760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ab785d780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ab785d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab785db00"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab785dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4ab7828b20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4ab7828b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7827020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab78271b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7827340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab78274d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7827660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab78277f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7827980"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7827b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7827ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7827e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7826020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab78261b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7826340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab78265d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7826760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4ab7826b20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4ab7826b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7825020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab78251b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7825340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab78254d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7825660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab78257f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7825980"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7825b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7825ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7825e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7824020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab78241b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab7824340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab78245d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7824760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4ab7864c70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ab7864c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab7861020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab78611b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab7861340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab78614d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab7861660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab78617f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab7861980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab7861b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab7861ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab7861e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab7860020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab78601b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab7860340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab78605d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab7860760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab78608f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab7860a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab7860c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab7860da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab785f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab785f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab785f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab785f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab785f660"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab785f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab785fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab785fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab785e020"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab785e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab785e340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab785e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab785e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab785e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab785e980"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab785eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab785eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab785ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab785d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab785d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab785d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f4ab7833d10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4ab7833d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ab785b0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ab785b270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ab785b400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ab785b590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ab785b720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ab785b8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ab785ba40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ab785bbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab785bd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ab7859020"/>
        <function-ref name="getData" scoped="" ref="0x7f4ab78591b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ab7859340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ab78594d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ab7859760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ab78598f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ab7859a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ab7859c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ab7859da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ab7832020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ab78321b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ab7832340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ab78324d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ab7832660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ab78327f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ab7832980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ab7832d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ab7831020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ab78311b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ab7831340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ab78314d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ab7831660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ab78317f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ab7831980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ab7831b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ab7831ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ab7831e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ab7830020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ab78301b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ab7830340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ab78304d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ab7830660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ab78307f0"/>
        <function-ref name="setData" scoped="" ref="0x7f4ab7830980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ab7830b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ab7830ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ab7830e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ab782f020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ab782f1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ab782f340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ab782f8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ab782fa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ab782fbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ab782fd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ab782e020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ab782e1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ab782e340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ab782e4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ab782e660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ab782e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4ab782cb20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4ab782cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab782b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab782b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab782b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab782b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab782b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab782b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab782b980"/>
        <function-ref name="get" scoped="" ref="0x7f4ab782bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab782bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab782be30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab782a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab782a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab782a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab782a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab782a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ab785c150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab785c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab785c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ab782ebb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ab782ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab782d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab782d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab782d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab782d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab782d660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab782d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab782d980"/>
        <function-ref name="get" scoped="" ref="0x7f4ab782db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab782dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab782de30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab782c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab782c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab782c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab782c5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab782c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab6956d90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab6956d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab694e180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab694e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4ab6947020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ab6947020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab69473a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab69405d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab69405d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab6940950"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab6940ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4ab6947630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ab6947630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ab69479b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ab6947b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ab6947cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ab6947e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ab6946020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ab69461b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ab6946340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ab69464d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab6946660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ab69467f0"/>
        <function-ref name="getData" scoped="" ref="0x7f4ab6946980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ab6946b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ab6946ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ab6945020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ab69451b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ab6945340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ab69454d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ab6945660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ab69457f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ab6945980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ab6945b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ab6945ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ab6945e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ab6944020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ab69441b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ab6944540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ab69446d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ab6944860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ab69449f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ab6944b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ab6944d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ab6943020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ab69431b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ab6943340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ab69434d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ab6943660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ab69437f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ab6943980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ab6943b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ab6943ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ab6943e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ab6942020"/>
        <function-ref name="setData" scoped="" ref="0x7f4ab69421b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ab6942340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ab69424d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ab6942660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ab69427f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ab6942980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ab6942b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ab6941420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ab69415b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ab6941740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ab69418d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ab6941a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ab6941bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ab6941d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ab6940020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ab69401b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ab6940340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ab6949760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ab6949760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab6949ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab6949c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab6956140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab6956140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab69564c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab6956650"/>
        <function-ref name="request" scoped="" ref="0x7f4ab69567e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab6956970"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab6956b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ab694ed40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ab694ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab694d0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab694d270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab694d400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab694d590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab694d720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab694d8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab694da40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab694dbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab694dd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab694c020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab694c1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab694c340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab694c4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab694c760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab694c8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab694ca80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab694cc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab694cda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab694b020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab694b1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab694b340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab694b4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab694b660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab694b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab694b980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab694bd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab694a020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab694a1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab694a340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab694a4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab694a660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab694a7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab694a980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab694ab10"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab694aca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab694ae30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab6949020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab69491b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab6949340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab69494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab694e5a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab694e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab694e920"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab694eab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab77832c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab77832c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab7783640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab77837d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab77828a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab77828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab7782c20"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab7782db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ab77874d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ab77874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7787850"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab77879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7785020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7785020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab77853a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7785530"/>
        <function-ref name="request" scoped="" ref="0x7f4ab77856c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7785850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab77859e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ab77863f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab77863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7786770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab7783ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7783ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab7783e50"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab7782020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ab777fe50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab777fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab777e210"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab777e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ab7780060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ab7780060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab7780400"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab7780590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4ab777f840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ab777f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab777fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ab7780990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ab7780990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7780d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4ab777f060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ab777f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ab777f3e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ab777f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab777a850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab777a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab777abf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab777ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab7778570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab7778570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab7778910"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab7778aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ab7779020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab7779020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab77793a0"/>
        <function-ref name="requested" scoped="" ref="0x7f4ab7779530"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab77796c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7779850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab77799e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab777ba80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab777ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab777be20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab777a020"/>
        <function-ref name="request" scoped="" ref="0x7f4ab777a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab777a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab777a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab7779c30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab7779c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab7778020"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab77781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab68db020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab68db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab68db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ab68db630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ab68db630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ab68db9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ab68dbb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ab68dbcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ab68dbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ab68d76c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ab68d76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ab68d7a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab68d7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ab68d5400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ab68d5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ab68d57a0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ab68d5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ab68d5bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ab68d5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ab68d4020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ab68d41b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ab68d4340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ab68d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ab68d7e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ab68d7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab68d61e0"/>
        <function-ref name="requested" scoped="" ref="0x7f4ab68d6370"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab68d6500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab68d6690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ab68d6820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab68d4720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab68d4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab68d4aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab68d4c30"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab68d4dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab68d3020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab68d31b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab68d3340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab68d34d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab68d3b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab68d37f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab68d3660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab68d3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab68d8850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab68d8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab68d8bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab68d8d80"/>
        <function-ref name="request" scoped="" ref="0x7f4ab68d7020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab68d71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab68d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ab68d6a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ab68d6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ab68d6df0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ab68d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4ab68d3de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f4ab68d3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab68d2180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab68d2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4ab7771540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ab7771540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ab77718c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ab7771a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ab7771be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ab7771d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ab776e020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ab776e1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ab776e340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ab776e4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab776e660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ab776e7f0"/>
        <function-ref name="getData" scoped="" ref="0x7f4ab776e980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ab776eb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ab776eca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ab776d020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ab776d1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ab776d340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ab776d4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ab776d660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ab776d7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ab776d980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ab776db10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ab776dca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ab776de30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ab776c020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ab776c1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ab776c540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ab776c6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ab776c860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ab776c9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ab776cb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ab776cd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ab776b020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ab776b1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ab776b340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ab776b4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ab776b660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ab776b7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ab776b980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ab776bb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ab776bca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ab776be30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ab776a020"/>
        <function-ref name="setData" scoped="" ref="0x7f4ab776a1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ab776a340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ab776a4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ab776a660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ab776a7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ab776a980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ab776ab10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ab7769420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ab77695b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ab7769740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ab77698d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ab7769a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ab7769bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ab7769d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ab7768020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ab77681b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ab7768340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f4ab775d250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f4ab775d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ab775d5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ab775d760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ab775d8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ab775da80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ab775dc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ab775dda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ab775c020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ab775c1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ab775c340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ab775c4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ab775c660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ab775c7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ab775c980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ab775cc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ab775cda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ab775b020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ab775b1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ab775b340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ab775b4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ab775b660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ab775b7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ab775b980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ab775bb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ab775bca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab775be30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ab775a220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ab775a3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ab775a540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ab775a6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ab775a860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ab775a9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ab775ab80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ab775ad10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ab7759020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ab77591b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ab7759340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ab77594d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ab7759660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ab77597f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ab7759980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ab7757cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ab7757cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab77560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7756230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab77563c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7756550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab77566e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab7756870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7756a00"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7756b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7756d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7755020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab77551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7755340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab77554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7755760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab77558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f4ab7765430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4ab7765430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ab77657b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ab7765940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ab7765ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ab7765c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ab7765df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ab7764020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ab77641b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ab7764340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab77644d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ab7764660"/>
        <function-ref name="getData" scoped="" ref="0x7f4ab77647f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ab7764980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ab7764b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ab7764da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ab7763020"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ab77631b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ab7763340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ab77634d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ab7763660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ab77637f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ab7763980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ab7763b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ab7763ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ab7763e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ab7762020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ab77623b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ab7762540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ab77626d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ab7762860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ab77629f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ab7762b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ab7762d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ab7761020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ab77611b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ab7761340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ab77614d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ab7761660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ab77617f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ab7761980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ab7761b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ab7761ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ab7761e30"/>
        <function-ref name="setData" scoped="" ref="0x7f4ab7760020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ab77601b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ab7760340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ab77604d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ab7760660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ab77607f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ab7760980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ab775f020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ab775f1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ab775f340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ab775f4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ab775f660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ab775f7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ab775f980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ab775fb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ab775fca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ab775fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ab7759d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ab7759d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab77580e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7758270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7758400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7758590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7758720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab77588b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7758a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7758bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7758d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7757020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab77571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab7757340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab77574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab7757760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab77578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ab7642c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7642c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7640210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ab764cda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ab764cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ab7645b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7645b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7644020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ab763f670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab763f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ab7638e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ab7638e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7637210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ab763fe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ab763fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ab762b2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab762b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762b670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ab762e2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab762e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762e670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ab764a120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab764a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ab7634670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ab7634670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76349f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7634b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ab762f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab762f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762f670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ab7644c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ab7644c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7643020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ab7643c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7643c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7642020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ab7639670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab7639670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76399f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7639b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ab763ce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ab763ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ab763e670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab763e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab764e760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab764e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab764eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab764ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab764ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ab7649aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab7649aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7649e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ab7648120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ab7648120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76485a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ab7632a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7632a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7632df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7631020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ab7648870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab7648870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7648bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ab762fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab762fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762fe50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ab764adc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab764adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7649180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ab7635e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ab7635e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7634210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ab7643480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7643480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7643800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7643990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ab7644480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7644480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7644800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7644990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ab764c750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab764c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ab7636e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab7636e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7635210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ab7637670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7637670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76379f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7637b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ab7635670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7635670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76359f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7635b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ab762dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab762dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762de50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ab762ead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab762ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762ee50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ab763b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ab763b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ab7637e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ab7637e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7636210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ab7630ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7630ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7630e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ab763d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab763d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ab762bad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab762bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab762be50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab762a020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab762a340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab762a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ab764c100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab764c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ab7645370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ab7645370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76456f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7645880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ab7642480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7642480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7642800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7642990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ab7639e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab7639e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7638210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ab763ee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab763ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763d210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ab7638670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab7638670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76389f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7638b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ab7640670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7640670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76409f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7640b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ab764b450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ab764b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ab7640e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7640e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763f210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab764fa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab764fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab764fe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab764e020"/>
        <function-ref name="request" scoped="" ref="0x7f4ab764e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab764e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab764e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ab7646020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab7646020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ab7646cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ab7646cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76450a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ab76302f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ab76302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7630670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7630800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ab7631ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7631ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7631e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7630020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ab7649450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab7649450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76497d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ab76312f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab76312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7631670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7631800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ab762d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ab762d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab762d670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ab763be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab763be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7639210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ab7636670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7636670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76369f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7636b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ab764baa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ab764baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ab764a770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab764a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab764aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ab763de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab763de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ab7646670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ab7646670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76469f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ab763c670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ab763c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab763c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab763cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ab7634e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ab7634e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7632610"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76327a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ab762a7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab762a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab762ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab762acb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab762ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab7629020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab76291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ab7615c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7615c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7614210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ab7620da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ab7620da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ab7619b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7619b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7617020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ab7613670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7613670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76139f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7613b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ab760ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ab760ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ab7613e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ab7613e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7612210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ab75ff2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab75ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75ff670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75ff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ab76012f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab76012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7601670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7601800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ab761d120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab761d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ab7607670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ab7607670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76079f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7607b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ab76022f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab76022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7602670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7602800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ab7617c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ab7617c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7616020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ab7616c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7616c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7615020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ab760d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab760d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ab760fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ab760fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ab7612670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7612670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76129f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7612b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab7621760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7621760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab7621ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab7621c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab7621e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ab761caa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab761caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ab761b120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ab761b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ab7606a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7606a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7606df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7605020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ab761b870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab761b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ab7602ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7602ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7602e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7601020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ab761ddc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab761ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ab7608e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ab7608e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7607210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ab7616480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7616480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7616800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7616990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ab7617480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7617480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7617800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7617990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ab7620750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab7620750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7620ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ab7609e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab7609e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7608210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ab760b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ab760b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ab7608670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7608670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76089f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7608b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ab7600ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab7600ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7600e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ab7601ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab7601ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7601e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7600020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ab760e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ab760e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ab760be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ab760be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7609210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ab7604ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7604ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7604e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7602020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ab7610670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab7610670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76109f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7610b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ab75ffad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab75ffad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab75ffe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab75fe020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75fe1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab75fe340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab75fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ab7620100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab7620100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7620480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ab7619370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ab7619370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76196f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7619880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ab7615480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7615480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7615800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7615990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ab760de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab760de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ab7612e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7612e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7610210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ab760c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab760c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ab7614670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7614670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76149f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7614b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ab761f450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ab761f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ab7614e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7614e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7613210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab76229e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab76229e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7622d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7621020"/>
        <function-ref name="request" scoped="" ref="0x7f4ab76211b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7621340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab76214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ab761a020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab761a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ab761acc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ab761acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab76190a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ab76042f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ab76042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7604670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7604800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ab7605ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7605ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7605e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7604020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ab761c450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab761c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ab76052f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab76052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7605670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7605800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ab76002f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ab76002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7600670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7600800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ab760ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab760ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760d210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ab7609670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7609670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab76099f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7609b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ab761faa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ab761faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ab761d770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab761d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ab7610e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab7610e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760f210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ab761a670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ab761a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab761a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ab760f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ab760f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab760f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab760fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ab7607e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ab7607e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7606610"/>
        <function-ref name="write" scoped="" ref="0x7f4ab76067a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ab75fe7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab75fe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab75feb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab75fecb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75fee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab75fd020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab75fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f4ab75f6b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab75f6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ab75f3020"/>
        <function-ref name="changed" scoped="" ref="0x7f4ab75f31b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ab75f3340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ab75f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4ab75f5d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab75f5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ab75de0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4ab75da310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ab75da310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ab75da690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f4ab75d7880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75d7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75d7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4ab75cc020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f4ab75c3bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4ab75c3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75c6020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f4ab75c6530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f4ab75c6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab75c68b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab75c6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4ab75c7140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4ab75c7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75c74c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f4ab75cbc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4ab75cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75b2020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4ab75b2540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4ab75b2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab75b28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab75b2a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab75b2be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab75b2d70"/>
        <function-ref name="get" scoped="" ref="0x7f4ab75b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab75b11b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab75b1340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab75b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4ab75a9950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4ab75a9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4ab75ac780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f4ab75ae150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4ab75ae150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75ae4d0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab75ae660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4ab75ae9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4ab75ae9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab75aed70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab75ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab75ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab75ad340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab75ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab75ad660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab75ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab75ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4ab75b0ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4ab75b0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4ab7588ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4ab7586a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4ab7586a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4ab75778d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ab7576020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab7576020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab7576e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7575800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7575340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab7575cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f4ab7570530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4ab7570530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab756f3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab756fd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab756f890"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab756e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ab7569020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ab7569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab75693a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ab7569530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ab75696c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7569850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ab75699e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab7569b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ab7569d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab7568020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab75681b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ab7568340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ab75684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ab756de50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab756de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4ab86f5d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab756bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab756a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab756a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab756ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f4ab75b3590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f4ab75b3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab75b3910"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab75b3aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab75b3c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab75b3dc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7564020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab75641b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7564340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab75644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ab7561c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ab7561c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7560020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab75601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ab7560340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab75604d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7560660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ab75607f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7560980"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7560b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ab7560ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ab7560e30"/>
        <function-ref name="set" scoped="" ref="0x7f4ab755f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ab755f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ab755f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ab755f5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab755f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ab75639e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ab75639e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7563d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7561020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab75611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7561340"/>
        <function-ref name="get" scoped="" ref="0x7f4ab75614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7561660"/>
        <function-ref name="set" scoped="" ref="0x7f4ab75617f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7561980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab7565a20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab7565a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7565da0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab755a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ab754bcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab754bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab754a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab754a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab754a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab754a550"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab754a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab754a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4ab7547990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ab7547990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ab7547d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f4ab754b020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ab754b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab754b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab754b530"/>
        <function-ref name="modify" scoped="" ref="0x7f4ab754b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab754b850"/>
        <function-ref name="resend" scoped="" ref="0x7f4ab754b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab754e6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab754e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab754ea40"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab754ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4ab7549150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ab7549150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ab75494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ab753a970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab753a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab753acf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab753ae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab7539030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab75391c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab7539350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab75394e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4ab7532950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ab7532950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab7530020"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab7530750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab7531780"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7530e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4ab751b020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab751b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751b3a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab751b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4ab751b890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab751b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751bc10"/>
        <function-ref name="write" scoped="" ref="0x7f4ab751bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4ab7539900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ab7539900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ab7539c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f4ab751e530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab751e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab751e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f4ab752d880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ab752d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ab752dc00"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab752dd90"/>
        <function-ref name="captured" scoped="" ref="0x7f4ab752c020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ab752c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f4ab7538ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f4ab7538ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab7535390"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7536360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ab7536ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab7536820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ab7535850"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7537970"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7537e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ab7535d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7535d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab75330a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab7533230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab75333c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab7533550"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab75336e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab7533870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f4ab7520550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab7520550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab75208d0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7520a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4ab7520e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7520e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751f1c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab751f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f4ab7514d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab7514d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab75180e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ab7518270"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ab7518400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab753cbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab753cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab753a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab753a1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f4ab753a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab753a4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f4ab753a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f4ab7522d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab7522d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab75210e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab7521270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab7521400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f4ab751ec60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab751ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab751d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ab7525820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ab7525820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7525ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab7525d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7524020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab75241b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7524340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab75244d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7524660"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab75247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab753dc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab753dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab753c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab7533bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab7533bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7532020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab75321b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab7532340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f4ab7527be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab7527be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab752d020"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ab752d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab752d340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab752d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4ab751d3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab751d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751d960"/>
        <function-ref name="write" scoped="" ref="0x7f4ab751daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ab7522020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ab7522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab75223a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7522530"/>
        <function-ref name="request" scoped="" ref="0x7f4ab75226c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7522850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab75229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f4ab752c500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4ab752c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab752c980"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab752cb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab752cca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab752ce30"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7525020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab75251b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7525340"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab75254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4ab751a130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab751a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751a4b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab751a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f4ab751a9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab751a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751ad40"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7519020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4ab751f6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab751f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab751fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f4ab7524b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4ab7524b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab7523020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab75231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab7523340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab75234d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7523660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab75237f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7523980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7523b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab75186c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab75186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab7518a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab7518bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab7518d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab7517020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab75171b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7517340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab75174d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab7517b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7517660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab75177f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7517980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4ab751c5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab751c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab751c960"/>
        <function-ref name="write" scoped="" ref="0x7f4ab751caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab753c320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab753c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab753c6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab753c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f4ab7521780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab7521780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab7521b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab7521c90"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7521e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab7520020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab75201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f4ab751fde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ab751fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab751e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f4ab751de80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ab751de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab751c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4ab75380f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ab75380f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ab7538470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ab747ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab747ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7479210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ab7484020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ab7484020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ab747ec70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab747ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747c020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ab7478670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7478670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74789f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7478b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ab7471e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ab7471e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7470210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ab7478e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ab7478e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7477210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ab74642f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab74642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7464670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7464800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ab74662f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab74662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7466670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7466800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ab7482370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab7482370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74826f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ab746c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ab746c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ab74672f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab74672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7467670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7467800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ab747cc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ab747cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747b020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ab747bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab747bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747a020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ab7472670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab7472670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74729f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7472b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ab7474e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ab7474e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7473210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ab7477670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7477670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74779f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7477b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab74868f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab74868f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab7486c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab7486e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab7485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ab7481d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab7481d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74800a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ab7480370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ab7480370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ab746ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab746ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746bdf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ab7480ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab7480ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7480e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ab7467ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7467ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7467e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7466020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ab7481060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab7481060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74813e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ab746de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ab746de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ab747b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab747b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747b800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ab747c480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab747c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747c800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ab7485940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab7485940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7485cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ab746ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab746ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746d210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ab7470670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7470670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74709f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7470b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ab746d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab746d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ab7465ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab7465ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7465e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7464020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ab7466ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab7466ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7466e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7465020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ab7473670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ab7473670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74739f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7473b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ab7470e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ab7470e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ab7469ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7469ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7469e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7467020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ab7475670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab7475670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74759f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7475b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ab7464ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab7464ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab7464e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab7463020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74631b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab7463340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab74634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ab74852f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab74852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7485670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ab747e490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ab747e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747e810"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ab747a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab747a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab747a800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab747a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ab7472e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab7472e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7471210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ab7477e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7477e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7475210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ab7471670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab7471670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74719f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7471b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ab7479670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7479670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74799f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7479b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ab7484670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ab7484670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74849f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ab7479e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7479e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7478210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7487c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7487c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7486020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab74861b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7486340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab74864d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7486660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ab747f160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab747f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab747f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ab747fe00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ab747fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab747e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ab74692f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ab74692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7469670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7469800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ab746aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab746aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746ae50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7469020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ab74816b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab74816b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7481a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ab746a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab746a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746a670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ab74652f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ab74652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7465670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7465800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ab7473e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab7473e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7472210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ab746e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ab746e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ab7484cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ab7484cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab74820a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ab74829c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab74829c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7482d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ab7475e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab7475e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7474210"/>
        <function-ref name="write" scoped="" ref="0x7f4ab74743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ab747f7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ab747f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab747fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ab7474670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ab7474670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74749f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7474b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ab746ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ab746ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab746b610"/>
        <function-ref name="write" scoped="" ref="0x7f4ab746b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ab74637a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab74637a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab7463b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab7463cb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7463e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab7462020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab74621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4ab7457df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab7457df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab74541c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ab7454350"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ab74544e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab74547c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab74547c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7454b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4ab7452020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ab7452020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ab74523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab74575c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab74575c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab7457940"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7457ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f4ab744b380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4ab744b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab744b700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab744b890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab744ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab744bbb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ab744bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab744a020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab744a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab744a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4ab7444b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab7444b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ab7443020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ab74431b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ab7443340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ab74434d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ab7443660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ab74437f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ab7443980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ab7443b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ab7443ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ab7443e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ab7442020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ab74421b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ab7442340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ab74425d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ab7442760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f4ab742b9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f4ab742b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab742bd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7429020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4ab7442d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ab7442d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab743d330"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab743da60"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab743fba0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab743c210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f4ab744a6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4ab744a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab744aa30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab744abc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab744ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab7449020"/>
        <function-ref name="get" scoped="" ref="0x7f4ab74491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab7449340"/>
        <function-ref name="set" scoped="" ref="0x7f4ab74494d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab7449660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4ab743bcb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab743bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab743a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab743a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4ab743a590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab743a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab743a910"/>
        <function-ref name="write" scoped="" ref="0x7f4ab743aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f4ab74386d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab74386d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7438a50"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7438be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ab7445330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab7445330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab74456b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab7445840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab74459d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab7445b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab7445cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab7445e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4ab744e550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ab744e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab744e8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ab744ea60"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ab744ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f4ab74463a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ab74463a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7446720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ab744c020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ab744c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ab744c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ab744c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ab744c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ab744c850"/>
        <function-ref name="get" scoped="" ref="0x7f4ab744c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ab744cb70"/>
        <function-ref name="set" scoped="" ref="0x7f4ab744cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ab744b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f4ab7437020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7437020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74373a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7437530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab744f620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab744f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab744f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab74441e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab74441e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7444560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab74446f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab7444880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab744d020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab744d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab744d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ab74486e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ab74486e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7448a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7448bf0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7448d80"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7447020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab74471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4ab743ae00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab743ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab74381c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7438350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f4ab7447530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab7447530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab74478b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab7447a40"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7447bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab7447d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab7446020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4ab74378b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab74378b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7437e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4ab744d7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ab744d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ab744db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab7436150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab7436150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab74364d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab7436660"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab74367f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab7436980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab7436b10"/>
        <function-ref name="get" scoped="" ref="0x7f4ab7436ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab7436e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab74354d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab7435020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab74351b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab7435340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4ab743b3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab743b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab743b760"/>
        <function-ref name="write" scoped="" ref="0x7f4ab743b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f4ab743cb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab743cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab743b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f4ab7449a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ab7449a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ab7449dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ab7448020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ab74481b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ab7448340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f4ab7446ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab7446ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ab744fca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ab744fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ab744e0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab744e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ab73caa70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab73caa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ab73cadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ab73ce670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab73ce9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab73ceb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab73ced10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab73cb020"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab73cb1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab73cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ab73c9550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73c9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab73c8b00"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab73c62a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab73c83d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab73c69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4ab73ca0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73ca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab73ca440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab73ca5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab73ca760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4ab73c1480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab73c1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab73c1800"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ab73c1990"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab73c1b20"/>
        <function-ref name="set" scoped="" ref="0x7f4ab73c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ab73c5660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab73c5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab73c4ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab73c2460"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab73c45b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab73c2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ab73cb6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ab73cb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab73cba60"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab73cbbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab73cbd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ab73bb020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ab73bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ab73bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ab73c0d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab73c0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab73bd0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab73bd270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab73bd400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab73bd590"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab73bd720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab73bd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ab73b24a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab73b24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab73b2820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab73b29b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab73b2b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab73b2cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab73b2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ab73bba80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ab73bba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab73b8020"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab73b8750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab73b98d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab73b8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4ab73bc640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab73bc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab73bc9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab73bcb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab73bcce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4ab73b38b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ab73b38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab73b3c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ab73b3dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab73b2020"/>
        <function-ref name="set" scoped="" ref="0x7f4ab73b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f4ab73b03b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4ab73b03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab73af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f4ab73af6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4ab73af6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab73ae3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ab73b7af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ab73b7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ab73b40d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ab73b4800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ab73b5970"/>
        <function-ref name="set" scoped="" ref="0x7f4ab73b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ab73bdc50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ab73bdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab73bc020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab73bc1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab73bc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ab7360cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ab7360cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab735e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ab735d020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ab735d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f5270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ab86f55e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ab735de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ab735c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ab735c340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ab735ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ab73590b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ab73590b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ab86f6680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ab86f6df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ab7355630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ab7357b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ab7356920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ab73564a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ab7354020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ab7355ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ab7356020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ab7359ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ab7355020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ab73571b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7357680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ab7343620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ab7343620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7343ba0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7343d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ab734e940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ab734e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ab7347620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ab7347620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73479a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7347b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ab7341060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ab7341060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73413e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7341570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ab733a840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ab733a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733abc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ab7341840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ab7341840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7341bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7341d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ab732ec60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ab732ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab732d020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ab7331c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ab7331c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab732f020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ab734dcc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ab734dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ab7335060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ab7335060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73353e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7335570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ab7332c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ab7332c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7331020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab73311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ab7346620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ab7346620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73469a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7346b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ab7345620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ab7345620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73459a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7345b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ab733b060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ab733b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ab733e840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ab733e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733ebc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ab7340060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ab7340060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73403e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7340570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ab734f2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ab734f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ab734f630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ab734f7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ab734f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ab734b6b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ab734b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ab734bd00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ab734bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab73491c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ab7334480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ab7334480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7334800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7334990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ab7349490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ab7349490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7349810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ab7331480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ab7331480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7331800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7331990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ab734c9c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ab734c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ab7337840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ab7337840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7337bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7337d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ab7346e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ab7346e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73451c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7345350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ab7347e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ab7347e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73461c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7346350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ab734e2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ab734e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ab7338840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ab7338840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7338bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7338d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ab7339060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ab7339060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73393e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7339570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ab7337060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ab7337060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73373e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7337570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ab732e480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ab732e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab732e800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ab732f480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ab732f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab732f800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ab733c060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ab733c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733c3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ab7339840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ab7339840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7339bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7339d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ab7332480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ab7332480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7332800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7332990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ab733f060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ab733f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733f3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ab732d480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ab732d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab732d800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab732d990"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732db20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab732dcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab732de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ab734fc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ab734fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ab7348e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ab7348e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73471c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7347350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ab7345e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ab7345e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73431c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7343350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ab733b840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ab733b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ab7340840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ab7340840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7340bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7340d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ab733a060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ab733a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ab7342060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ab7342060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73423e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7342570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ab734d020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ab734d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ab7342840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ab7342840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7342bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7342d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7350520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7350520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab73508a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7350a30"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7350bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7350d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab734f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ab7349ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ab7349ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7349e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ab73487b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ab73487b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab7348b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ab7333c60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ab7333c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7332020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab73321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ab7333480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ab7333480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7333800"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7333990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ab734b060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ab734b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ab7334c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ab7334c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7333020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab73331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ab732fc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ab732fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab732e020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ab733c840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ab733c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ab7338060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ab7338060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab73383e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab7338570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ab734d670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ab734d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ab734c370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ab734c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab734c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ab733f840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ab733f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733fbc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ab7348160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ab7348160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ab73484e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ab733e060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ab733e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab733e3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ab733e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ab7335840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ab7335840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ab7334020"/>
        <function-ref name="write" scoped="" ref="0x7f4ab73341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ab732c160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ab732c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ab732c4e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ab732c670"/>
        <function-ref name="write" scoped="" ref="0x7f4ab732c800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ab732c990"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ab732cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4ab7302a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ab7302a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ab7302da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ab7301020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4ab7300920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4ab7300920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7302560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7306990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7306990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7306d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4ab72f8a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ab72f8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ab72f8da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ab72f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4ab72f9940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4ab72f9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab72f8560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab72f9080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab72f9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab72f9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ab7304aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab7304aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab7304e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab72ea020"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab72ea1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab72ea340"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab72ea4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab72ea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab72e0020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab72e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72e03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72e0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72e06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab72e0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72e09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab72e1220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab72e1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72e15a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72e1730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72e18c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab72e1a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72e1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab72dce60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab72dce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72db210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72db3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72db530"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab72db6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72db850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab72dfa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab72dfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72dfd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72dc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72dc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab72dc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ab72da8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ab72da8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ab72dac70"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ab72dae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab72dc750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab72dc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab72dcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab72d9170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab72d9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72d94f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab72d9680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab72d9810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f4ab72dbae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab72dbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab72dbe60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab72da020"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab72da1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab72da340"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab72da4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab72da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ab72dd690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab72dd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab72dda10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab72ddba0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab72ddd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab72c8020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab72c81b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab72c8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ab72c2950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ab72c2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72c2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab72c5aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab72c5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72c5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4ab72c2200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ab72c2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72c2580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ab72bc3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ab72bc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72bc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab72bdb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab72bdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab72bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab72c0e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab72c0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72bd1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab72bca70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab72bca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72bcdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab72bb020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab72bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4ab72bd570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ab72bd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ab728e020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ab728e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab728e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab728e6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab728e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab728ea30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab728ebc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab728ed50"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab728d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab728d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab72928e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab72928e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7292c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7292df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7291020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab72911b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7291340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ab7291c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7291c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72900a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7290230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72903c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7290550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72906e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab72915e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab72915e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7291960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab7293be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab7293be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7292020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab72921b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7292340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab72924d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab7292660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ab7290a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7290a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7290dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ab728f170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ab728f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab728f4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab728f680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab728f810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab728f9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab728fb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab7284d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab7284d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7283180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7283310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72834a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7283630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72837c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ab7283b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ab7283b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7282020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f4ab7255db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f4ab7255db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab7253180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab7253310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ab72822f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab72822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab7282670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab7282800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab7282990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab7282b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab7282cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab7282e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ab7286a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ab7286a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7286da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7285020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72851b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7285340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ab7281b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ab7281b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ab7280020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ab72801b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ab7280340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ab72804d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab7281170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab7281170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72814f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab7281680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab7281810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ab7286370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ab7286370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab72866f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ab72897b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ab72897b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab7289b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab7289cc0"/>
        <function-ref name="request" scoped="" ref="0x7f4ab7289e50"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab7287020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab72871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ab72874d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ab72874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7287850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72879e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7287b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7287d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ab7285840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ab7285840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7285bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ab7284020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ab7284020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab72843a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab7284530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab72846c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7284850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab72849e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ab7235dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ab7235dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ab7234180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ab7234410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ab7234410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ab7234790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ab7234920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ab7234ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ab7234c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ab7228b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ab7228b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7227020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab72271b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ab7227340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab72274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab7226860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab7226860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7226be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7226d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7225020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab72251b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7225340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ab7225690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ab7225690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7225a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab722cce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab722cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72290a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7229230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72293c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7229550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72296e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ab7228080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab7228080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ab7228400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ab7228590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ab7228720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ab72288b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f4ab7227800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f4ab7227800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab7227b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab7227d10"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab7226020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab72261b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab7226340"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab72264d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4ab7225d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4ab7225d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ab7224180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ab7224310"/>
        <function-ref name="start" scoped="" ref="0x7f4ab72244a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ab7224630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab7229980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab7229980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab7229d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ab72212d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ab72212d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ab7221650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ab72217e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ab7221970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ab7221b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ab7223580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ab7223580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ab7223900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ab7223a90"/>
        <function-ref name="isState" scoped="" ref="0x7f4ab7223c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ab7223db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ab7222020"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ab72221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab7213d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab7213d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7212180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7212310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72124a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7212630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab72127c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab7217350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab7217350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab72176d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7217860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab72179f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab7217b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7217d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ab7213020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ab72133a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ab7213530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ab72136c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ab7213850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ab72139e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f4ab720d1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ab720d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab720d540"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab720d6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab720d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ab7210410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ab7210410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ab7210790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ab7210920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ab7210ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ab7210c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ab7210dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ab71ee690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ab71ee690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab71eea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ab71ef860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ab71ef860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab71efbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab71efd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab71ee020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab71ee1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab71ee340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4ab71ec610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ab71ec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ab71ec990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ab71ecb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ab71eccb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ab71ece40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ab71eb020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ab71eb1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ab71eb340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ab71eb4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ab71eb660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ab71eb7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ab71eb980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ab71ebb10"/>
        <function-ref name="sync" scoped="" ref="0x7f4ab71ebca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ab71ea020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ab71ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ab71f08b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ab71f08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab71f0c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab71f0dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab71ef020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab71ef1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab71ef340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab71ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4ab71f1ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f4ab71f1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4ab71f00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4ab71e81f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4ab71e81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ab71e8570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ab71e8700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ab71e8890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ab71e8a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ab71e8bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ab71e8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ab71f2a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab71f2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab71f2e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab71f1020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab71f11b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab71f1340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab71f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ab71f6020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab71f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab71f63a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab71f6530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab71f66c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab71f6850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab71f69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4ab71f5df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4ab71f5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab71f31c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ab71eece0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ab71eece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ab71ed0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ab71ed230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ab71ed3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ab71ed550"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ab71ed6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ab71ed870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4ab71ea4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ab71ea4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ab71ea950"/>
        <function-ref name="changed" scoped="" ref="0x7f4ab71eaae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ab71eac70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ab71eae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ab71edb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ab71edb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab71ec020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ab71ec1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ab71ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab71f5210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab71f5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab71f5590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ab71e7d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ab71e7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ab71e60e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ab71e6270"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ab71e6400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ab71e6590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ab71e6720"/>
        <function-ref name="get" scoped="" ref="0x7f4ab71e68b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ab71e6a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ab71e51b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ab71e6bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ab71e6d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ab71e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ab71f3470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab71f3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab71f37f0"/>
        <function-ref name="source" scoped="" ref="0x7f4ab71f3980"/>
        <function-ref name="address" scoped="" ref="0x7f4ab71f3b10"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab71f3ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab71f3e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab71f2020"/>
        <function-ref name="type" scoped="" ref="0x7f4ab71f21b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab71f2340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab71f24d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab71f2660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab71f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f4ab71e70f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f4ab71e70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ab71e7470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ab71e7600"/>
        <function-ref name="request" scoped="" ref="0x7f4ab71e7790"/>
        <function-ref name="granted" scoped="" ref="0x7f4ab71e7920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ab71e7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ab70d5020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab70d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab70d53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab70d5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab70d56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab70d5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab70d59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ab70d5c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab70d5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab70d4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab70d41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab70d4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab70d44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab70d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ab70d48b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70d48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab70d4c30"/>
        <function-ref name="source" scoped="" ref="0x7f4ab70d4dc0"/>
        <function-ref name="address" scoped="" ref="0x7f4ab70d3020"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab70d31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab70d3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab70d34d0"/>
        <function-ref name="type" scoped="" ref="0x7f4ab70d3660"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab70d37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab70d3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab70d3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab70d3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ab70d2020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ab70d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab70d23a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab70d2530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab70d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ab6751b60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab6751b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab6750020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab67501b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab6750340"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab67504d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab6750660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ab67508b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab67508b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab6750c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab6750dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab674e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab674e1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab674e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ab674e590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab674e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab674e910"/>
        <function-ref name="source" scoped="" ref="0x7f4ab674eaa0"/>
        <function-ref name="address" scoped="" ref="0x7f4ab674ec30"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab674edc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab674d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab674d1b0"/>
        <function-ref name="type" scoped="" ref="0x7f4ab674d340"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab674d4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab674d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab674d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab674d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ab674dc10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ab674dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ab674c020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ab674c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ab674c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ab6743640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab6743640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab67439c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab6743b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab6743ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab6743e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab6742030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f4ab67422e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab67422e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab6742660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab67427f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab6742980"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab6742b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab6742ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ab6741020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab6741020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab67413a0"/>
        <function-ref name="source" scoped="" ref="0x7f4ab6741530"/>
        <function-ref name="address" scoped="" ref="0x7f4ab67416c0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab6741850"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab67419e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab6741b70"/>
        <function-ref name="type" scoped="" ref="0x7f4ab6741d00"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab6740020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab67401b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab6740340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab67404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab7139930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab7139930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab7139cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab7139e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab7134020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab71341b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab7134340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ab70ea400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ab70ea400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab70ea7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab70ea930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab70eaac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab70eac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab70eade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ab70eb4b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ab70eb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ab70eb850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab70eb9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab70ebb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ab70ebd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ab70ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ab70e8720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab70e8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab70e8aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab70e8c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab70e8dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab70e7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab70e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f4ab70e7480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f4ab70e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab70e7800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab70e7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f4ab70e7c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f4ab70e7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ab70e6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ab70e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ab70e9060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70e9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab70e93e0"/>
        <function-ref name="source" scoped="" ref="0x7f4ab70e9570"/>
        <function-ref name="address" scoped="" ref="0x7f4ab70e9700"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab70e9890"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab70e9a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab70e9bb0"/>
        <function-ref name="type" scoped="" ref="0x7f4ab70e9d40"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab70e8020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab70e81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab70e8340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab70e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ab70c9020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ab70c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ab70c93a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ab70c9530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ab70c96c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ab70c9850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ab70c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ab70cf910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ab70cf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ab70cfc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ab70c9c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ab70c9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ab70c7020"/>
        <function-ref name="source" scoped="" ref="0x7f4ab70c71b0"/>
        <function-ref name="address" scoped="" ref="0x7f4ab70c7340"/>
        <function-ref name="destination" scoped="" ref="0x7f4ab70c74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ab70c7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ab70c77f0"/>
        <function-ref name="type" scoped="" ref="0x7f4ab70c7980"/>
        <function-ref name="setType" scoped="" ref="0x7f4ab70c7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ab70c7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ab70c7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ab70c6020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4ab8648c80" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ab8648a00" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4ab86462a0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ab8646020" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4ab8648020" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ab8647520" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f4ab86e0190" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f4ab866de80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab866dc00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f4ab866a020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab866bc90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ab8666490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab8668e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab86661c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ab8668560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f4ab86695e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab8669020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab8669350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ab8651020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ab86535e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4ab8653960" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab8653c90" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ab864d660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab864d060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab864d390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ab864c790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ab8650390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab8650110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ab864f8b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab864f2d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ab864f620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4ab86c5cb0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab86c5cb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f4ab86c1e10" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4ab86c15f0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f4ab86c0840" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab86c5cb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4ab86c05c0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab86c5cb0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4ab8644670" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
              <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab8654cc0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ab8644060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab8644390" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f4ab86cd7b0" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f4ab86cb020" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f4ab86cb800" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f4ab86ca7d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f4ab86c8020" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ab86c8830" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f4ab86ca020" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ab86c63f0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4ab86c6170" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f4ab86cd020" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f4ab86c9020" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f4ab86c97b0" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4ab86d1690" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab86d1690"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ab86c3020" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab86d1690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f4ab8658d30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab8658ab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f4ab8661a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab8661790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f4ab86bee50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4ab8663950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab86636d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4ab865e3a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab865fd70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4ab865e110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4ab8660e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab8660870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4ab8660bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f4ab865c810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab865c590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f4ab8659b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab86595e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f4ab8659900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ab8680210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4ab865d600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab865d380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f4ab86562f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ab8657cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4ab8656060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f4ab8655190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab86df350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab86df350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4ab86d71f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ab86dca60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f4ab86da820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ab86da250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4ab86da590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f4ab86dba60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f4ab86d6270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f4ab86d7980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4ab86db270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f4ab86dd020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ab86dfc40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f4ab86d8820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ab86d8250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4ab86d8590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f4ab86ddae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ab86dd860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ab86dc350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4ab862a8c0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f4ab85fb910" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f4ab85fdb70" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f4ab85fb1f0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f4ab85fd490" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f4ab85fc350" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f4ab85fe650" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f4ab85fed30" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f4ab85fca70" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f4ab8809020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4ab8acec00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f4ab85a9500" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4ab85a9280" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f4ab85b69c0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ab85f25a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ab85f1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4ab85a9d70" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f4ab85a8c80" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f4ab85aab00" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4ab85a84f0" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4ab85ab190" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f4ab85ab920" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f4ab85aa390" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ab85f25a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ab85f1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ab85aa110" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ab85f25a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ab85f1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4ab859a560" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f4ab8598ca0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f4ab8598a20" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4ab85979d0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ab8597750" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ab8598270" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ab8599940" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f4ab8599020" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4ab859ac90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4ab85a4890" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f4ab85a02a0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ab85a0020" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f4ab85a0c80" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4ab85a0a00" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f4ab859f6a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4ab859f420" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ab859fd90" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ab85b1120" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4ab85b0a10" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f4ab85b0790" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4ab85b1850" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ab85b5350" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4ab85b0020" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ab85b4270" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4ab85b39e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ab85b5ae0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4ab85b4980" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f4ab85b32e0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ab85b3060" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f4ab85af450" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f4ab85af1d0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ab85711f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f4ab872ca80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f4ab872b1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f4ab872c2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f4ab8945810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4ab8b87020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f4ab8b86020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4ab8b87790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4ab8b7b270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f4ab8b7bac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4ab8448e30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4ab84475c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4ab8448020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4ab8446480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ab8448720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4ab8447ce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ab844a120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4ab844a7f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4ab841c020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4ab841c770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f4ab84172e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ab8417060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4ab841f770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4ab841b780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f4ab8417bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4ab841b020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ab841d820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f4ab8418020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f4ab841d020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ab84228b0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f4ab841a020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f4ab84187c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f4ab841a7e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4ab841f020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab81cec40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab81cec40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ab81ca5a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab81c55d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab81c55d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ab81c5810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4ab81c0390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ab81c23b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4ab81c19d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ab81c1400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f4ab81c1740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4ab81c2b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4ab81c0b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4ab81c4390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ab81c4110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab81c5810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ab81c4bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab81534f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab81534f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ab8153730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab8153730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ab8152070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab8153730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ab8151190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ab81528f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4ab81518f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4ab8030020" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ab8030830" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f4ab8025390" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f4ab8025110" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ab802b2a0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4ab802b020" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f4ab802bae0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f4ab80299a0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4ab80293b0" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f4ab8029710" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f4ab8027840" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ab8017050" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ab801aa60" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab801ada0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f4ab8015cc0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4ab8015a40" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f4ab8012ae0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ab8012510" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab8012850" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f4ab8014930" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f4ab800f3b0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ab8010a60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab8010da0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ab800f110" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f4ab8015270" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ab8016950" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ab8016020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab8016360" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ab80166b0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4ab7fbcae0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4ab7fb54e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4ab7fb2890" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ab7fdae70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ab7fd82b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4ab7fb9350" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f4ab7fba350" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4ab7fbd980" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4ab7fbab40" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4ab7fb9db0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4ab7faa020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4ab7fab750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f4ab7fa2d70" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7fa2af0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f4ab7fa2350" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f4ab7f7b390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f4ab7f87020" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f4ab7f97de0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8009190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ab80099d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ab7f97b60" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8009190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ab80099d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f4ab7f890e0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f4ab7f912a0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8004110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ab8004950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ab7f91020" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8004110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ab8004950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f4ab7f80750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f4ab7f7ecf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f4ab7f92830" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8006080"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ab8006810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f4ab7f91a90" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8004110"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ab8004950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f4ab7f8d830" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f4ab7f8d5b0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f4ab7f8ee40" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f4ab7f80020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f4ab7f92040" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8006080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ab8006810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ab7f93da0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8006080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ab8006810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f4ab7f90c80" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f4ab7f80e80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f4ab7f8e690" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f4ab7f8e410" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f4ab7f8b190" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f4ab7f8b910" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f4ab7f82070" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f4ab7f84020" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f4ab7f88070" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f4ab7f827b0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f4ab7f87800" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f4ab7f7f5c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4ab7f8c070" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ab800c120"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f4ab800b810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f4ab7f7fd60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f4ab7f7dbd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f4ab7f904d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f4ab7f90250" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f4ab7f7bd30" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7f7bab0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f4ab7f93600" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ab8009190"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ab80099d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f4ab7f89850" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4ab7f86020" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f4ab7f83800" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ab7fdae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ab7fd82b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ab7f83580" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ab7fdae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ab7fd82b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f4ab7f84af0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ab7fec020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ab7fec440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ab7f84870" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ab7fec020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ab7fec440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f4ab7f7a730" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f4ab7f7e570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f4ab7f8c880" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f4ab7f7d480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f4ab7f86790" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f4ab7f88850" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4ab7f03420" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ab7f03c70" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f4ab7e5e020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f4ab7e5e880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ab7e47420" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4ab7e2e270" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f4ab7e2c350" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4ab7e319c0" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4ab7e2eae0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4ab7e2cc80" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f4ab7e214c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ab7e2a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ab7e21240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ab7e2a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f4ab7e243b0" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f4ab7e22020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ab7e2a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ab7e24c30" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ab7e2a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4ab7e22930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ab7e2a3f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f4ab7db4470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ab7d5f020" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ab7d607e0" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f4ab7d60070" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f4ab7d61790" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ab7d597b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ab7d572b0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ab7d59020" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f4ab7d58a60" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f4ab7d587e0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4ab7d5b6f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4ab7d58020" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab7c0d1e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab7c0d1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ab7c0d420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab7c0d420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f4ab7c082a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab7c0d420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c08020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f4ab7c07430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c071b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f4ab7c09020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c0dd60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ab7c06740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab7c0d420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c06150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4ab7c064b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab7c0d420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f4ab7bfa990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bfa370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f4ab7bfa700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f4ab7bf7b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bf78b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f4ab7bfbae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f4ab7bfb120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f4ab7bfee80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f4ab7c105f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c10370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f4ab7c0f7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c0f550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f4ab7c0c940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7c0c6c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f4ab7bd2980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bd2700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f4ab7bd5c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bd59b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f4ab7bd6350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4ab7bd60d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f4ab7bd8800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4ab7bd8580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f4ab7bd6d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f4ab7bd6b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f4ab7bd3b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bd3890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f4ab7bc52b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4ab7bd0c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4ab7bc5020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f4ab7be1810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7be1230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f4ab7be1580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f4ab7bdde20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7bdd820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f4ab7bddb90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f4ab7be0350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f4ab95d1110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7be00d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f4ab7bded30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7bdeab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f4ab7be29c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7be2740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f4ab7be0e80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7be0c00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f4ab7bc9b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bc98b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f4ab7bcebc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bce5a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f4ab7bce930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f4ab7bcdad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bcd850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f4ab7bcd020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bcc9c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f4ab7bccd50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f4ab7bc8b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bc88f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f4ab7bd9780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bd9500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ab7bbfdc0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bbf800" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab7bbfb30" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ab7bb7620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bb7020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab7bb7350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ab7bb6660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ab7bba2a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bba020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ab7bb9750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7bb9170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ab7bb94c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ab7b98ca0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7b986e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f4ab7b98a10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ab7b96020" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f4ab7b93930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ab7b94ab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4ab7b93360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab7b93690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ab7b942b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ab7b96bb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ab7b94020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f4ab7b97780" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f4ab7b97500" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f4ab7b90b50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f4ab7b90350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f4ab7b89020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7b8ac90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f4ab7b8a490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f4ab86bbc00"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f4ab86b85a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7b8a190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f4ab7b88360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f4ab86b70c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f4ab86b6970"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7b88060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f4ab7b9e6e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f4ab7b9c840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f4ab7b9c070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f4ab7ba2e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f4ab7b9fe80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f4ab7b9d020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f4ab7b9d840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f4ab7b9f6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f4ab7b83a70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f4ab7b84020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f4ab7b832a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f4ab7b83020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f4ab7b84790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f4ab7b8cca0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4ab7b8ca20" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f4ab7b857a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4ab7b85520" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f4ab7b27640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f4ab7b27060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f4ab7b273b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f4ab7b28020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f4ab7b2a690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f4ab7b2a020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f4ab7b2a400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f4ab7b30a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ab7b307c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f4ab7b288a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f4ab7b2c540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4ab7b2c2c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4ab7b2fb90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4ab7b2f910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f4ab7b268a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f4ab7b2b6b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4ab7b2b430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f4ab7b26070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f4ab7b2e350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ab7bfde10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4ab7bf55a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f4ab7b2eb40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f4ab7b30020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4ab7b2f1f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f4ab7b2cce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4ab7b222b0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab7b222b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4ab7b22b70" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4ab7b218f0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab7b222b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4ab7b21340" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4ab7b21660" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ab7b222b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ab7b06ce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7b06a60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ab7aff7f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7aff570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f4ab7b16c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ab7bfde10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4ab7bf55a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f4ab7b09860" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4ab7b087d0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f4ab7b08070" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f4ab7b09020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f4ab7b0c980" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ab86805f0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4ab7b0ccd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ab86809d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f4ab7afce40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ab7b04020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ab7b05110" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4ab7b05980" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab7b05cd0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ab7b03780" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ab7b048f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4ab7b03190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab7b034e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f4ab79eebb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ab79edd70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4ab79ed5c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ab79ed340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f4ab79ee350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f4ab79bc0e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f4ab79bc930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f4ab79bb1f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f4ab7995b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7995580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab79958d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f4ab7990dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7990490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab79907e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ab7990b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ab79916b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab79910d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab7991420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f4ab7996730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ab86c2dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7996150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab79964a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4ab79922c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab7994930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ab7994c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ab7992020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ab7976df0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4ab7976480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4ab7976810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab7976b50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ab79733c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4ab79726a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4ab7972a30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab7972d70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ab7973110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4ab797ac90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f4ab797aa10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4ab78de120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ab7fec020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ab7fec440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f4ab78e6d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab78e6ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f4ab78e22a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab78e2020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f4ab78e3610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ab78e2d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab78e2ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f4ab783c9d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f4ab784e420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f4ab7842620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ab78423a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f4ab7857af0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f4ab7840c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f4ab78475e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f4ab784f540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f4ab784c2d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4ab7850500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f4ab7850280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f4ab7853a10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f4ab784a070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f4ab7841550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f4ab783c270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f4ab7843c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f4ab7837350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f4ab78339d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f4ab7855980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f4ab784b8b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f4ab78491f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f4ab7850dc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f4ab78588c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f4ab7843460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ab78431e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f4ab7858190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f4ab78404d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f4ab783b190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f4ab7836b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f4ab7833270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f4ab783eb90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f4ab783b8c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f4ab7842db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f4ab7838390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f4ab78540e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f4ab78467e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f4ab78397b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f4ab783dac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f4ab7849de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f4ab7849b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f4ab78342d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f4ab7845a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f4ab783e420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f4ab7857390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ab7fc7b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4ab7fc5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ab7857110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ab7fc7b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4ab7fc5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f4ab784b190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f4ab78532a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ab7853020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f4ab784a9d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ab784a750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f4ab7838b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f4ab7851b50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f4ab7854850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f4ab78452a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f4ab7845020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ab95d0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f4ab7855270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f4ab7839020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f4ab783d350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f4ab7841cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f4ab7846020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f4ab7847d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f4ab784c9f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f4ab784fc80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f4ab7834a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f4ab78513c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ab7851140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f4ab7837b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f4ab784eb50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f4ab7836350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ab75d75e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ab75d7360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ab75c4b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f4ab75c41c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4ab75c4530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab75c4860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ab75c3880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ab75c32c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ab75c35f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ab75aa530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ab75aa530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ab75aa770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab75aa770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f4ab75a92e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab75aa770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ab75a9060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ab75aa770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f4ab7547580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4ab75149e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f4ab7514020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f4ab7514750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f4ab75157f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f4ab7515020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ab7519d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ab95d0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f4ab752a3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ab95d0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab752a150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f4ab752b3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ab8b8b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab752b150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ab7527350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab75270d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ab7529390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ab7529110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ab8671e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ab866d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f4ab73035e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ab73035e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f4ab73002a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ab8b82c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ab73035e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f4ab7300020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ab73035e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
