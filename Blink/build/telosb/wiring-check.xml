<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:ChungTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f73dee94bc0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f73dee42890"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f73dee42890"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f73dec80590"/></to>
    </wire>
    <wire loc="10:ChungTestAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f73dee90670"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f73dee40aa0"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f73dee40aa0"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f73de900340"/></to>
    </wire>
    <wire loc="11:ChungTestAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f73dee91110"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f73dec68cd0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f73dec68cd0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f73de8ff640"/></to>
    </wire>
    <wire loc="16:ChungTestAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f73dee77100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de743370"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73de743370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:ChungTestAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f73dee72630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de73dc90"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73de73dc90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:ChungTestAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f73dee6dba0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de7366d0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73de7366d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:ChungTestAppC.nc">
      <from><interface-ref name="MoodTimer" scoped="" ref="0x7f73dee80810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de72fb00"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73de72fb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:ChungTestAppC.nc">
      <from><interface-ref name="MoodTimer2" scoped="" ref="0x7f73dee7dca0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de7284e0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73de7284e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:ChungTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73dee5b9a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73de71f080"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73de71f080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73de71ba10"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73dee3fd70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73de8de8b0"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f73dec80c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f73df3293a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f73df3293a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f73deed4140"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f73dec736c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73dee3ec90"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73dee3ec90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73dee38020"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73dec73dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f73dee3fd70"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f73dee38730"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f73dee39390"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f73dee39390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73dee17280"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f73dee38e10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73dee311a0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f73dee37520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73de6f7600"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73dee17280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73dee00020"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f73dee10850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f73dee006d0"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73defac4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73dedff9a0"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f73dedbca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73decf96d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f73dedaa410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73decf1b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f73dedb3d10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decfe160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f73ded96020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decd8cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f73dedb8020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decff480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f73ded9d570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decd8020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f73ded93020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decc0cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f73deda5a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73decd1220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f73dedc3020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73ded4f9d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f73ded98020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73dece62f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f73deda0890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73dece8610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f73deda98c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73dece9220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f73dedb2c70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decf67a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f73ded95020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73deccf2f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f73deda7020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73dece16d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f73dedb8da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decf7ac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f73dedc47b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded5d540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f73ded9c3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decd0610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f73dedc25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73ded00020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f73deda3020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73decca6d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f73dedaddc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73ded06a90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f73ded97020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decdf7a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f73dedb9140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73ded07de0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f73ded9e700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73dece0ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f73ded94020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decc87a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f73deda65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73decdab30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f73ded9b1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decc9ac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f73ded99020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73decefcb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f73ded9a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decc0020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f73deda1a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73decef020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f73deda25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f73decc2b30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f73ded5b450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded5cd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f73ded5baa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f73decbba90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f73ded5a120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f73decb8260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73ded05930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded5d540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73ded03020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded5cd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decfd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded5d540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decfc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded5cd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decf5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded5d540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decf4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded5cd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f73ded532f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f73ded53940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f73decb89f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f73ded52020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f73decb7240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73deceeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73dece5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73dece47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decde610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decddc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decd6b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decd42f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decce160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73deccd7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decc6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decc5c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73decbfb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f73decbd2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f73df398410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73deed2040"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f73deece490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f73df2c03b0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f73de9068f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f73dec57690"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f73dec57690"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f73de931490"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f73de908660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f73dec5ce00"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f73dec5ce00"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f73de947250"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f73de8fd370"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f73de90bb10"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f73de8fb690"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f73de90aca0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de936480"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f73dec2d020"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f73dec2d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb43740"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f73de924020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f73dea2d020"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f73dea2d020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f73dea1abc0"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f73dec43020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb77100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f73dec2f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb48d10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f73debe5560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb3ad10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f73debc0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaae100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f73debe3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb35740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f73dec2b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb3e100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f73dec16200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb0fe00"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f73dec02200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deade740"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f73debf1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deab8d10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f73debdd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb2bd10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f73debcd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deacb100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f73debb8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaaad10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f73dec3d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb69100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f73debdb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb26740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f73dec39020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb60740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f73dec24020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb2f100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f73dec10200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb00d10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f73debfc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73dead0740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f73debeb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaaad10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f73dec47020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb82d10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f73dec33020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb51860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f73dec1e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb21100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f73debe7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb3ad10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f73debc6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deabc100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f73debba570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaaad10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f73debd3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deae3d10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f73dec1a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb18a60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f73dec06200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deae8100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f73debf5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deac1740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f73debc4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deab8d10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f73debd9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaf2d10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f73dec41020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb73d10"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f73debfa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deacb100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f73dec29020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb3ad10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f73dec14200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb09740"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f73dec00200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73dead9100"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f73debef200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deab3740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f73debd5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deae8100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f73dec54020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb8b6d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f73dec37020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb5b100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f73dec22020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb2bd10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f73dec0e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deafb740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f73debd1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb21100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f73debcb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deac7d10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f73debbe570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaaad10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f73dec0a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaf2d10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f73debcf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb1dd10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f73dec45020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb7d740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f73dec31020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb4c270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f73dec1c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb1dd10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f73debd7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaed740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f73debc2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deab3740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f73dec18200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb13460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f73dec04200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deae3d10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f73debf3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deabc100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f73dec3f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb6e740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f73debf7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deac7d10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f73dec3b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb65d10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f73dec26020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb35740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f73dec12200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb04100"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f73debfe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73dead5d10"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f73debed200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaae100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f73dec49020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb86100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f73dec35020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb57d10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f73dec20020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb26740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f73dec0c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaf6100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f73debdf560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb2f100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f73debc9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deac1740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f73debe1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb2f100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f73dec08200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaed740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f73debbc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deaae100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f73debb6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73dead0740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f73debe91f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73deb3e100"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f73dea39020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f73dea26bc0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f73dea2e020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f73dea1bbc0"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f73dea35020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f73dea23bc0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f73dea33020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f73dea21bc0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f73dea3b020"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f73dea28c40"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f73dea30020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f73dea1ebc0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f73dea38020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f73dea25bc0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f73dea410c0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f73dea2cd30"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f73dea32020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f73dea20bc0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f73dea3a020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f73dea27bc0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f73dea2f060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f73dea1dc40"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f73dea37020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f73dea24bc0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f73dea34020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f73dea22bc0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f73dea40020"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f73dea29c80"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f73dea31020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f73dea1fbc0"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f73de905480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73df398410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8db670"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8db670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de764150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73de8de8b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73de7df020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f73de8d41a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f73de755790"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73de7df020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73de206490"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f73de75e640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73de7b32f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73de7ae850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73de7df870"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73de7df870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73de1ff140"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73de754a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73de858b50"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73de858b50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73de83bcf0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73de206490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73de1eae60"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f73de1f9b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73de206ce0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73de206ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73de1e9720"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73de1fb690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73de858b50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de1e5910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de1f0c50"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de1f0c50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de1e3020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de1ed2b0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de1ed2b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de1e2440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de1ec5d0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de1ec5d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f73dedaa410"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f73deda1a20"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f73deda7020"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f73ded9e700"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f73deda65a0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f73ded9d570"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f73deda5a50"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f73ded9c3e0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f73deda3020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f73ded9b1f0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f73deda25a0"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f73ded9a020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f73de81e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f73de856b70"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f73de856b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73de850b80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de841c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f73de7aa9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73df398410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f73de759a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73df398410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73de6f7600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73de71b410"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f73de719210"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f73de71cd80"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f73de71cd80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f73de6f6df0"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f73de7184d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f73de6f9020"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f73de6f9020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f73de6f1b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f73de7177f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f73de6f8380"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f73de6f8380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f73de6eb710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de6f4020"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f73dec02200"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de6efde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f73dec00200"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de6ea930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f73debfe200"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ChungTestC" loc="4:ChungTestC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChungTestAppC.Timer0" loc="44(ChungTestAppC.Timer0):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChungTestAppC.Timer1" loc="44(ChungTestAppC.Timer1):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChungTestAppC.Timer2" loc="44(ChungTestAppC.Timer2):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChungTestAppC.MoodTimerC" loc="44(ChungTestAppC.MoodTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChungTestAppC.MoodTimer2C" loc="44(ChungTestAppC.MoodTimer2C):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f73ded8f890" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f73ded8fc30" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f73ded8e020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f73ded8e3a0" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f73ded8e720" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f73ded8ea90" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f73ded8ee20" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f73ded8d200" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f73ded8d5d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f73ded51e70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f73ded4d270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f73debb19f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f73debb1da0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f73debb01a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f73debb0550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f73debb08c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f73de88f3b0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f73de88f3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f73de851c70" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f73de851c70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f73de83a570" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f73de83a570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f73de83ad40" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f73de83ad40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f73de839160" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f73de839160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f73de839940" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f73de839940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f73de839d10" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f73de838540" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f73de838540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f73de85d6d0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f73de85d6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f73de816020" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f73de816020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f73de816410" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f73de816410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f73de816bf0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f73de816bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f73de815020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73de7dbcc0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73de7dbcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73de7a5230" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73de7a5230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f73de7a5560" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73de757dd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73de757dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer0" ref="0x7f73dee77100" loc="11:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f73dee77100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73dee73630"/>
        <function-ref name="fired" scoped="" ref="0x7f73dee76b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73dee75920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73dee754a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73dee72020"/>
        <function-ref name="gett0" scoped="" ref="0x7f73dee73ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73dee75020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73dee77cf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73dee73020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73dee76220"/>
        <function-ref name="stop" scoped="" ref="0x7f73dee766f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoodTimer2" ref="0x7f73dee7dca0" loc="10:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoodTimer2" scoped="" ref="0x7f73dee7dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73dee78170"/>
        <function-ref name="fired" scoped="" ref="0x7f73dee7b720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73dee7a510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73dee7a090"/>
        <function-ref name="getdt" scoped="" ref="0x7f73dee78a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f73dee785f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73dee7bba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73dee7c8c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73dee7ab20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73dee7cd90"/>
        <function-ref name="stop" scoped="" ref="0x7f73dee7b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f73dee94bc0" loc="6:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f73dee94bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f73dee93020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f73dee72630" loc="12:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f73dee72630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73dee6ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f73dee701e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73dee6e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73dee70ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73dee6d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73dee6d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73dee70660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73dee71390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73dee6e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73dee71860"/>
        <function-ref name="stop" scoped="" ref="0x7f73dee71d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7f73dee91110" loc="8:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f73dee91110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f73dee96080"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f73dee969a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f73dee8f1e0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dee91d00"/>
        <function-ref name="notify" scoped="" ref="0x7f73dee8f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7f73dee90670" loc="7:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f73dee90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f73dee96080"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f73dee969a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73dee92390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73dee5b9a0" loc="14:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f73dee5b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73dee5bd20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73dee66020"/>
        <function-ref name="led1On" scoped="" ref="0x7f73dee661b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73dee66340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73dee664d0"/>
        <function-ref name="get" scoped="" ref="0x7f73dee66660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73dee667f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73dee66e30"/>
        <function-ref name="set" scoped="" ref="0x7f73dee66980"/>
        <function-ref name="led0On" scoped="" ref="0x7f73dee66b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f73dee66ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f73dee6dba0" loc="13:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f73dee6dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73dee68110"/>
        <function-ref name="fired" scoped="" ref="0x7f73dee6b630"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73dee694a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73dee69020"/>
        <function-ref name="getdt" scoped="" ref="0x7f73dee68a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f73dee68590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73dee6bab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73dee6c7b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73dee69ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73dee6cc80"/>
        <function-ref name="stop" scoped="" ref="0x7f73dee6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoodTimer" ref="0x7f73dee80810" loc="9:ChungTestC.nc">
      <component-ref qname="ChungTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoodTimer" scoped="" ref="0x7f73dee80810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73dee7fcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dee8a300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73dee7f0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73dee8ac00"/>
        <function-ref name="getdt" scoped="" ref="0x7f73dee7d660"/>
        <function-ref name="gett0" scoped="" ref="0x7f73dee7d1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73dee8a780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73dee8b480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73dee7f6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73dee8b950"/>
        <function-ref name="stop" scoped="" ref="0x7f73dee8be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f73dee3fd70" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f73dee3fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee3e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f73dee42890" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f73dee42890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f73dee42c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73dee3ec90" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73dee3ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee3b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f73dee38e10" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f73dee38e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee371c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73dee38020" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73dee38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee383a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f73dee38730" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f73dee38730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee38ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f73dee37520" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f73dee37520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee378a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73dee311a0" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73dee311a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee31520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f73dee39390" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f73dee39390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee39710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f73dee10850" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f73dee10850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f73dee167f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f73dee10d60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f73dee16020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f73dee161b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f73dee10bd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f73dee16340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f73dee164d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f73dee16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73dee17280" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73dee17280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee17600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f73dee006d0" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f73dee006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f73dedff660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f73dee00be0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f73dee00d70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f73dedff020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f73dee00a50"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f73dedff1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f73dedff340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f73dedff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f73dedff9a0" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73dedff9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f73dedffd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73dee00020" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73dee00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dee003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f73dedbca50" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f73dedbca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73dedbcdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73dedbb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dedbb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73dedbb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73dedbb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dedbb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73dedbb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73dedbb980"/>
        <function-ref name="setControl" scoped="" ref="0x7f73dedbbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f73dedaa410" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f73dedaa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73dedaa790"/>
        <function-ref name="getControl" scoped="" ref="0x7f73dedaa920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dedaaab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73dedaac40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73dedaadd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda9020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda91b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda9340"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f73dedb3d10" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f73dedb3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dedb20e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73dedb2270"/>
        <function-ref name="captured" scoped="" ref="0x7f73dedb2400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dedb2590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dedb2720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73dedb28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f73ded96020" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f73ded96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded963a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded96530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded966c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded96850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded969e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded96b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f73dedb8020" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f73dedb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dedb83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73dedb8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73dedb86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73dedb8850"/>
        <function-ref name="fired" scoped="" ref="0x7f73dedb89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f73ded9d570" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f73ded9d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded9d8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73ded9da80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded9dc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded9dda0"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f73ded93020" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f73ded93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded933a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded93530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded936c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded93850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded939e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded93b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f73deda5a50" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f73deda5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deda5dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deda4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deda41b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73deda4340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73deda44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda4660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda47f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda4980"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f73dedc3020" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f73dedc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73dedc33a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73dedc3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dedc36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73dedc3850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73dedc39e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dedc3b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73dedc3d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73dedc2020"/>
        <function-ref name="setControl" scoped="" ref="0x7f73dedc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f73ded98020" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f73ded98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded983a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded98530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded986c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded98850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded989e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded98b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f73deda0890" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f73deda0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73deda0c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73deda0da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded9e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded9e1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded9e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f73deda98c0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f73deda98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deda9d40"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deda8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deda81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73deda8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73deda84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda8980"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f73dedb2c70" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f73dedb2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dedac020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73dedac1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f73dedac340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dedac4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dedac660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73dedac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f73ded95020" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f73ded95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded953a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded95530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded956c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded95850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded959e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded95b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f73deda7020" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f73deda7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deda73a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deda7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deda76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73deda7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73deda79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda6020"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f73dedb8da0" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f73dedb8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dedb4180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73dedb4310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73dedb44a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73dedb4630"/>
        <function-ref name="fired" scoped="" ref="0x7f73dedb47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f73dedc47b0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f73dedc47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dedc4b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73dedc4cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dedc4e50"/>
        <function-ref name="get" scoped="" ref="0x7f73dedcd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dedcd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dedcd340"/>
        <function-ref name="getMode" scoped="" ref="0x7f73dedcd4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dedcd660"/>
        <function-ref name="overflow" scoped="" ref="0x7f73dedcd7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73dedcd980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73dedcdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f73ded9c3e0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f73ded9c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded9c760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73ded9c8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded9ca80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded9cc10"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded9cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f73dedc25a0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f73dedc25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73dedc2920"/>
        <function-ref name="getControl" scoped="" ref="0x7f73dedc2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dedc2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73dedc2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73dedbc020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dedbc1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73dedbc340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73dedbc4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73dedbc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f73deda3020" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f73deda3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deda33a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deda3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deda36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73deda3850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73deda39e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda3b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda3d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda2020"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f73dedaddc0" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f73dedaddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dedb3180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73dedb3310"/>
        <function-ref name="captured" scoped="" ref="0x7f73dedb34a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dedb3630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dedb37c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73dedb3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f73ded97020" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f73ded97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded973a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded97530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded976c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded97850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded979e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded97b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f73dedb9140" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f73dedb9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dedb94c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73dedb9650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73dedb97e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73dedb9970"/>
        <function-ref name="fired" scoped="" ref="0x7f73dedb9b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f73ded9e700" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f73ded9e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded9ea80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73ded9ec10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded9eda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded9d020"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f73ded94020" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f73ded94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded943a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded94530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded946c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded94850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded949e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded94b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f73deda65a0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f73deda65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deda6920"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deda6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deda6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73deda6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73deda5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f73dedacb70" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f73dedacb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dedab020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73dedab1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dedab340"/>
        <function-ref name="get" scoped="" ref="0x7f73dedab4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dedab660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dedab7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73dedab980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dedabb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73dedabca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73dedabe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73dedaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f73ded9b1f0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f73ded9b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded9b570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73ded9b700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded9b890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded9ba20"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded9bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f73ded99020" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f73ded99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded993a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded99530"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded996c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded99850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded999e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded99b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f73ded9a020" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f73ded9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded9a5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73ded9a730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded9a8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded9aa50"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded9abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f73deda1a20" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f73deda1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73deda1da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73deda0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73deda01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73deda0340"/>
        <function-ref name="fired" scoped="" ref="0x7f73deda04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f73deda25a0" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f73deda25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deda2920"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deda2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deda2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73deda2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73deda1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deda11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73deda1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73deda14d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73deda1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f73ded5baa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f73ded5baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded5be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f73ded5b450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f73ded5b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded5b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f73ded5a120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f73ded5a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded5a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f73ded5cd80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73ded5cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded5b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73ded5d540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73ded5d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73ded5d8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73ded5da50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73ded5dbe0"/>
        <function-ref name="get" scoped="" ref="0x7f73ded5dd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73ded5c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded5c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73ded5c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded5c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73ded5c660"/>
        <function-ref name="setMode" scoped="" ref="0x7f73ded5c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73ded5c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f73ded53940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f73ded53940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded53cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f73ded532f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f73ded532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded53670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f73ded52020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f73ded52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f73ded55bf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73ded55bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73ded563e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73ded563e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73ded56760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73ded568f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73ded56a80"/>
        <function-ref name="get" scoped="" ref="0x7f73ded56c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73ded56da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded55020"/>
        <function-ref name="getMode" scoped="" ref="0x7f73ded551b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded55340"/>
        <function-ref name="overflow" scoped="" ref="0x7f73ded554d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73ded55660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73ded557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73ded06a90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73ded06a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded06e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73ded05020"/>
        <function-ref name="captured" scoped="" ref="0x7f73ded051b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded05340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded054d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73ded05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73ded4f9d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73ded4f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73ded4fd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f73ded07020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73ded071b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73ded07340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73ded074d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73ded07660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73ded077f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73ded07980"/>
        <function-ref name="setControl" scoped="" ref="0x7f73ded07b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73ded03020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73ded03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73ded033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73ded07de0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73ded07de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73ded06180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73ded06310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73ded064a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73ded06630"/>
        <function-ref name="fired" scoped="" ref="0x7f73ded067c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73ded05930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73ded05930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73ded05cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73ded05e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73ded04020"/>
        <function-ref name="get" scoped="" ref="0x7f73ded041b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73ded04340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73ded044d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73ded04660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73ded047f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73ded04980"/>
        <function-ref name="setMode" scoped="" ref="0x7f73ded04b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73ded04ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decfe160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decfe160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decfe4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decfe670"/>
        <function-ref name="captured" scoped="" ref="0x7f73decfe800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decfe990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decfeb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decfecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73ded00020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73ded00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73ded003a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73ded00530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73ded006c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73ded00850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73ded009e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73ded00b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73ded00d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decff020"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decfc7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decfc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decfcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decff480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decff800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decff990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decffb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decffcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f73decffe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decfd020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decfd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decfd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decfd6c0"/>
        <function-ref name="get" scoped="" ref="0x7f73decfd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decfd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decfdb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f73decfdd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decfc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decfc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decfc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decf67a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decf67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decf6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decf6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f73decf6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decf5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decf51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decf5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73decf96d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73decf96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73decf9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f73decf9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decf9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73decf7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73decf71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decf7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73decf74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decf7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decf77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decf4c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decf4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decf7ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decf7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decf7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decf6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decf61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decf6340"/>
        <function-ref name="fired" scoped="" ref="0x7f73decf64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decf5610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decf5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decf5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decf5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decf5cb0"/>
        <function-ref name="get" scoped="" ref="0x7f73decf5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decf4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decf41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73decf4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decf44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decf4660"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decf47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decf4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decefcb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decefcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decee0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decee230"/>
        <function-ref name="captured" scoped="" ref="0x7f73decee3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decee550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decee6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decee870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73decf1b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73decf1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73decf0020"/>
        <function-ref name="getControl" scoped="" ref="0x7f73decf01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decf0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73decf04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73decf0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decf07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73decf0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decf0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decf0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decec2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decef020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decef3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decef530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decef6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decef850"/>
        <function-ref name="fired" scoped="" ref="0x7f73decef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73deceeb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73deceeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73deced020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73deced1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deced340"/>
        <function-ref name="get" scoped="" ref="0x7f73deced4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73deced660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73deced7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73deced980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decedb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decedca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decede30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73dece62f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73dece62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dece6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73dece6800"/>
        <function-ref name="captured" scoped="" ref="0x7f73dece6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dece6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dece6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73dece6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73dece9220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73dece9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73dece95a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73dece9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dece98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73dece9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73dece9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dece9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73dece8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73dece81b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73dece8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73dece47a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73dece47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73dece4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73dece8610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73dece8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dece8990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73dece8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73dece8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73dece8e40"/>
        <function-ref name="fired" scoped="" ref="0x7f73dece6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73dece5160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73dece5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dece54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73dece5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dece5800"/>
        <function-ref name="get" scoped="" ref="0x7f73dece5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dece5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73dece5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73dece5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73dece4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73dece41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73dece4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73dece44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decdf7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decdf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decdfb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decdfcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f73decdfe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decde020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decde1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decde340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73dece16d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73dece16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73dece1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f73dece1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73dece1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73dece0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73dece01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73dece0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73dece04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73dece0660"/>
        <function-ref name="setControl" scoped="" ref="0x7f73dece07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decddc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decddc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73dece0ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73dece0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73dece0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decdf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decdf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decdf340"/>
        <function-ref name="fired" scoped="" ref="0x7f73decdf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decde610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decde610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decde990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decdeb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decdecb0"/>
        <function-ref name="get" scoped="" ref="0x7f73decdee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decdd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decdd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73decdd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decdd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decdd660"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decdd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decdd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decd8cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decd8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decd60a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decd6230"/>
        <function-ref name="captured" scoped="" ref="0x7f73decd63c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decd6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decd66e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decd6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73decdab30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73decdab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73decd9020"/>
        <function-ref name="getControl" scoped="" ref="0x7f73decd91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decd9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73decd94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73decd9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decd97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73decd9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decd9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decd9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decd42f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decd42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decd4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decd8020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decd83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decd8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decd86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decd8850"/>
        <function-ref name="fired" scoped="" ref="0x7f73decd89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decd6b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decd6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decd5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decd51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decd5340"/>
        <function-ref name="get" scoped="" ref="0x7f73decd54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decd5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decd57f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73decd5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decd5b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decd5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decd5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73deccf2f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73deccf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73deccf670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73deccf800"/>
        <function-ref name="captured" scoped="" ref="0x7f73deccf990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73deccfb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73deccfcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73deccfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73decd1220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73decd1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73decd15a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73decd1730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decd18c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73decd1a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73decd1be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decd1d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73decd0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decd01b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decd0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73deccd7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73deccd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73deccdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decd0610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decd0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decd0990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decd0b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decd0cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decd0e40"/>
        <function-ref name="fired" scoped="" ref="0x7f73deccf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decce160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decce4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decce670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decce800"/>
        <function-ref name="get" scoped="" ref="0x7f73decce990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decceb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73deccecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73deccee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73deccd020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73deccd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73deccd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73deccd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decc87a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decc87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decc8b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decc8cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f73decc8e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decc6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decc61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73decca6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73decca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73deccaa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f73deccabe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73deccad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73decc9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73decc91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decc9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73decc94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decc9660"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decc97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decc5c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decc5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decc9ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decc9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decc9e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decc8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decc81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decc8340"/>
        <function-ref name="fired" scoped="" ref="0x7f73decc84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decc6610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decc6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decc6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decc6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decc6cb0"/>
        <function-ref name="get" scoped="" ref="0x7f73decc6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decc5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decc51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73decc5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decc54d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decc5660"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decc57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decc5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73decc0cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f73decc0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decbf0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f73decbf230"/>
        <function-ref name="captured" scoped="" ref="0x7f73decbf3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decbf550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decbf6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f73decbf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f73decc2b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f73decc2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73decc1020"/>
        <function-ref name="getControl" scoped="" ref="0x7f73decc11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decc1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73decc14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73decc1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decc17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73decc1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73decc1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f73decc1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f73decbd2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f73decbd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decbd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73decc0020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f73decc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73decc03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73decc0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73decc06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73decc0850"/>
        <function-ref name="fired" scoped="" ref="0x7f73decc09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73decbfb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73decbfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73decbe020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73decbe1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73decbe340"/>
        <function-ref name="get" scoped="" ref="0x7f73decbe4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73decbe660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73decbe7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73decbe980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73decbeb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73decbeca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73decbee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73decbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f73decb7240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f73decb7240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decb75c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f73decbba90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f73decbba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decbbe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f73decb8260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f73decb8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decb85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f73decb89f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f73decb89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73decb8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f73defac4c0" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73defac4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f73defac840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f73df2c03b0" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f73df2c03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f73df2c0730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f73df2c08c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f73df2c0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f73df0e8bc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f73df0e8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f73df224020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f73dee18b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f73dee18b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f73dec7fb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f73dec7f1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f73dec7f340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f73dec7f4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f73dec7f020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f73dec7f660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f73dec7f7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f73dec7f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f73dec73dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f73dec73dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dec72180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f73dec80590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f73dec80590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f73dec80910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f73dec736c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f73dec736c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dec73a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f73dec80c00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f73dec80c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73dec73020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f73dec731b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f73dec73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f73df398410" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f73df398410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73df398790"/>
        <function-ref name="runTask" scoped="" ref="0x7f73df398920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f73df3293a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f73df3293a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73df329720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f73df3298b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f73df329a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f73deed2040" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f73deed2040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73deed23c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73deed2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f73deece490" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f73deece490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f73deece810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f73deece9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f73deeceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f73deed4140" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f73deed4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73deed44c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f73deed4650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f73deed47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f73dec68cd0" loc="49:../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f73dec68cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f73dee96080"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f73dee969a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f73dec66dc0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dec66940"/>
        <function-ref name="notify" scoped="" ref="0x7f73dec652a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f73dee40aa0" loc="48:../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f73dee40aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f73dee96080"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f73dee969a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73dec686b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f73dec57690" loc="41:../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f73dec57690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73dec57a10"/>
        <function-ref name="disable" scoped="" ref="0x7f73dec57ba0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73dec57d30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73dec5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f73dec5ce00" loc="40:../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f73dec5ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec611c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec61350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec614e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec61670"/>
        <function-ref name="get" scoped="" ref="0x7f73dec61800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec61990"/>
        <function-ref name="set" scoped="" ref="0x7f73dec61b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec61cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f73dec43020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f73dec43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec43530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec436c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec43850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec43b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec43d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec42020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec42340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec42660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec42a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec42c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f73dec2f020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f73dec2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec2f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec2f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec2f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec2f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec2f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec2fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec2fd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec2e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec2e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec2e340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec2e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec2e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec2e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec2ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec2ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f73debe5560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f73debe5560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debe58e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debe5a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debe5c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debe5d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debe4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debe41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debe4340"/>
        <function-ref name="get" scoped="" ref="0x7f73debe44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debe4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debe47f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debe4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debe4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debe4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debe3020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debe31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f73debc0570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f73debc0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debc08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debc0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debc0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debc0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debbf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debbf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debbf340"/>
        <function-ref name="get" scoped="" ref="0x7f73debbf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debbf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debbf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debbf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debbfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debbfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debbe020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f73debe3580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f73debe3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debe3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debe3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debe3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debe3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debe2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debe21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debe2340"/>
        <function-ref name="get" scoped="" ref="0x7f73debe24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debe2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debe27f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debe2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debe2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debe2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debe1020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debe11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f73dec2b020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f73dec2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec2b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec2b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec2b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec2b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec2b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec2bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec2bd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec2a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec2a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec2a340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec2a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec2a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec2a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec2aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec2ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f73dec16200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f73dec16200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec16580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec16710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec16a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec16bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec16d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec15020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec15340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec154d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec15660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec15980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec15c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec15da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f73dec02200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f73dec02200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec02580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec02710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec02a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec02bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec02d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec01020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec01340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec014d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec01660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec01980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec01c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec01da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f73debf1200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f73debf1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debf1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debf1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debf18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debf1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debf1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debf1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debf0020"/>
        <function-ref name="get" scoped="" ref="0x7f73debf01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debf0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debf04d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debf0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debf07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debf0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debf0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debf0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f73debdd580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f73debdd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debdd900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debdda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debddc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debdddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debdc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debdc340"/>
        <function-ref name="get" scoped="" ref="0x7f73debdc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debdc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debdc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debdc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debdcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debdcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debdb020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f73debcd570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f73debcd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debcd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debcda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debcdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debcdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debcc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debcc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debcc340"/>
        <function-ref name="get" scoped="" ref="0x7f73debcc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debcc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debcc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debcc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debcb020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f73debb8580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f73debb8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debb8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debb8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debb8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debb8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debb7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debb7340"/>
        <function-ref name="get" scoped="" ref="0x7f73debb74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debb7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debb77f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debb7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debb7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debb7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debb6020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f73dec3d020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f73dec3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec3d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec3d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec3d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec3d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec3d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec3db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec3dd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec3c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec3c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec3c340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec3c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec3c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec3c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec3ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec3cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f73debdb580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f73debdb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debdb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debdba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debdbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debdbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debda020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debda1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debda340"/>
        <function-ref name="get" scoped="" ref="0x7f73debda4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debda660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debda7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debda980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debdab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debdaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debd9020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f73dec39020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f73dec39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec39530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec39850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec39b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec39d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec38020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec38340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec38660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec38a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec38c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f73dec24020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f73dec24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec24530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec246c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec24850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec249e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec24b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec24d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec23020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec23340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec23660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec23a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec23c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f73dec10200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f73dec10200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec10580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec10710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec108a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec10a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec10bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec10d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec0f020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec0f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec0f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec0f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec0f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec0f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec0f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec0fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec0fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f73debfc200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f73debfc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debfc580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debfc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debfc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debfca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debfcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debfcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debfb020"/>
        <function-ref name="get" scoped="" ref="0x7f73debfb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debfb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debfb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debfb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debfb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debfb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debfbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debfbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f73debeb200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f73debeb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debeb580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debeb710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debeb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debeba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debebbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debebd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debea020"/>
        <function-ref name="get" scoped="" ref="0x7f73debea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debea340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debea4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debea660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debea980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debeac10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debeada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f73dec47020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f73dec47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec47530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec47850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec47b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec47d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec46340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec46a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f73dec33020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f73dec33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec334a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec33630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec337c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec33950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec33ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec33c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec33e00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec32020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec32340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec32660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec32a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec32c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f73dec1e020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f73dec1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec1e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec1e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec1e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec1e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec1e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec1eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec1ed00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec1d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec1d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec1d340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec1d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec1d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec1d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec1da80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec1dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f73debe7580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f73debe7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debe7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debe7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debe7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debe7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debe6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debe61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debe6340"/>
        <function-ref name="get" scoped="" ref="0x7f73debe64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debe6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debe67f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debe6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debe6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debe6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debe5020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debe51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f73debc6570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f73debc6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debc68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debc6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debc6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debc6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debc5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debc51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debc5340"/>
        <function-ref name="get" scoped="" ref="0x7f73debc54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debc5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debc57f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debc5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debc5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debc5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debc4020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debc41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f73debba570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f73debba570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debba8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debbaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debbac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debbada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debb9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debb91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debb9340"/>
        <function-ref name="get" scoped="" ref="0x7f73debb94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debb9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debb97f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debb9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debb9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debb9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debb8020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f73debd3580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f73debd3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debd3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debd3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debd3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debd3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debd21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debd2340"/>
        <function-ref name="get" scoped="" ref="0x7f73debd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debd2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debd27f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debd2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debd2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debd2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debd1020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f73dec1a020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f73dec1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec1a5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec1a730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec1a8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec1aa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec1abe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec1ad70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec19020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec19340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec194d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec19660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec19980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec19c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec19da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f73dec06200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f73dec06200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec06580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec06710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec06a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec06bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec06d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec05020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec05340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec054d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec05660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec05980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec05c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec05da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f73debf5200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f73debf5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debf5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debf5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debf58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debf5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debf5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debf5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debf4020"/>
        <function-ref name="get" scoped="" ref="0x7f73debf41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debf4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debf44d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debf4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debf47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debf4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debf4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debf4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f73debc4570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f73debc4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debc48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debc4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debc4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debc4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debc3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debc31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debc3340"/>
        <function-ref name="get" scoped="" ref="0x7f73debc34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debc3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debc37f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debc3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debc3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debc3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debc2020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f73debd9570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f73debd9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debd98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debd9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debd9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debd9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debd8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debd81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debd8340"/>
        <function-ref name="get" scoped="" ref="0x7f73debd84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debd8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debd87f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debd8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debd8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debd8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debd7020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f73dec41020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f73dec41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec41530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec416c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec41850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec419e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec41b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec41d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec40020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec40340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec40660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec40a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec40c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f73dec2d020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f73dec2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec2d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec2d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec2d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec2d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec2d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec2db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec2dd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec2c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec2c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec2c340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec2c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec2c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec2c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec2ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec2cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f73debfa200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f73debfa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debfa580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debfa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debfa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debfaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debfabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debfad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debf9020"/>
        <function-ref name="get" scoped="" ref="0x7f73debf91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debf9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debf94d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debf9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debf97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debf9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debf9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debf9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f73dec29020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f73dec29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec29530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec296c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec29850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec29b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec29d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec28020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec28340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec28660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec28a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec28c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f73dec14200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f73dec14200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec14580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec14710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec14a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec14bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec14d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec13020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec13340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec134d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec13660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec13980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec13c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec13da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f73dec00200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f73dec00200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec00580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec00710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec008a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec00a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec00bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec00d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debff020"/>
        <function-ref name="get" scoped="" ref="0x7f73debff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debff4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debff660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debff7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debff980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debffc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f73debef200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f73debef200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debef580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debef710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debef8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debefa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debefbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debefd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debee020"/>
        <function-ref name="get" scoped="" ref="0x7f73debee1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debee340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debee4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debee660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debee7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debee980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debeec10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debeeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f73debd5580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f73debd5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debd5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debd5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debd4340"/>
        <function-ref name="get" scoped="" ref="0x7f73debd44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debd4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debd47f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debd4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debd4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debd4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debd3020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f73dec54020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f73dec54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec54530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec546c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec54850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec54b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec54d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec53020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec53340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec53660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec53a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec53c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f73dec37020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f73dec37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec37530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec37850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec37b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec37d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec36020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec36340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec36660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec36a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec36c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f73dec22020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f73dec22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec22530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec226c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec22850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec229e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec22b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec22d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec21340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec21660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec21a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec21c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f73dec0e200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f73dec0e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec0e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec0e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec0e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec0ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec0ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec0ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec0d020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec0d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec0d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec0d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec0d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec0d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec0d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec0dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec0dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f73debd1580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f73debd1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debd1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debd1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debd1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debd1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debd0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debd01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debd0340"/>
        <function-ref name="get" scoped="" ref="0x7f73debd04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debd0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debd07f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debd0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debd0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debd0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debcf020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f73debcb570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f73debcb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debcb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debcba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debcbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debcbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debca340"/>
        <function-ref name="get" scoped="" ref="0x7f73debca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debca7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debcab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debcaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debc9020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f73debbe570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f73debbe570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debbe8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debbea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debbec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debbeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debbd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debbd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debbd340"/>
        <function-ref name="get" scoped="" ref="0x7f73debbd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debbd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debbd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debbd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debbdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debbdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debbc020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f73dec0a200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f73dec0a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec0a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec0a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec0a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec0aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec0abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec0ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec09020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec09340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec094d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec09660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec09980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec09c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec09da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f73debcf580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f73debcf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debcf900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debcfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debcfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debcfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debce340"/>
        <function-ref name="get" scoped="" ref="0x7f73debce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debce7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debcd020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f73dec45020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f73dec45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec45530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec456c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec45850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec45b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec45d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec44020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec44340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec44660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec44a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec44c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f73dec31020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f73dec31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec31530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec31850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec31b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec31d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec30340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec30660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec30a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec30c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f73dec1c020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f73dec1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec1c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec1c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec1c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec1c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec1c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec1cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec1cd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec1b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec1b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec1b340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec1b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec1b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec1b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec1ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec1bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f73debd7580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f73debd7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debd7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debd7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debd7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debd7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debd6340"/>
        <function-ref name="get" scoped="" ref="0x7f73debd64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debd6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debd67f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debd6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debd6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debd6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f73debc2570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f73debc2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debc28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debc2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debc2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debc2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debc1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debc11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debc1340"/>
        <function-ref name="get" scoped="" ref="0x7f73debc14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debc1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debc17f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debc1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debc1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debc1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debc0020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f73dec18200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f73dec18200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec18580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec18710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec18a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec18bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec18d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec17020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec17340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec174d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec17660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec17980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec17c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec17da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f73dec04200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f73dec04200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec04580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec04710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec04a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec04bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec04d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec03020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec03340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec034d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec03660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec03980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec03c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec03da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f73debf3200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f73debf3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debf3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debf3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debf38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debf3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debf3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debf3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debf2020"/>
        <function-ref name="get" scoped="" ref="0x7f73debf21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debf2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debf24d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debf2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debf27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debf2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debf2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debf2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f73dec3f020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f73dec3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec3f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec3f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec3f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec3f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec3f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec3fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec3fd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec3e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec3e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec3e340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec3e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec3e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec3e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec3ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec3ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f73debf7200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f73debf7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debf7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debf7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debf78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debf7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debf7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debf7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debf6020"/>
        <function-ref name="get" scoped="" ref="0x7f73debf61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debf6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debf64d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debf6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debf67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debf6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debf6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debf6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f73dec3b020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f73dec3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec3b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec3b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec3b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec3b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec3b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec3bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec3bd00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec3a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec3a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec3a340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec3a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec3a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec3a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec3aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec3ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f73dec26020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f73dec26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec263a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec26530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec266c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec26850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec269e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec26b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec26d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec25020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec251b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec25340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec254d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec25660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec257f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec25a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec25c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f73dec12200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f73dec12200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec12580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec12710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec12a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec12bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec12d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec11020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec11340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec114d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec11660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec11980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec11c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec11da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f73debfe200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f73debfe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debfe580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debfe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debfe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debfea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debfebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debfed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debfd020"/>
        <function-ref name="get" scoped="" ref="0x7f73debfd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debfd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debfd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debfd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debfd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debfd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debfdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debfdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f73debed200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f73debed200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debed580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debed710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debed8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debeda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debedbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debedd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debec020"/>
        <function-ref name="get" scoped="" ref="0x7f73debec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debec4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73debec660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debec7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debec980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debecc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73debecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f73dec49020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f73dec49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec49530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec49850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec49b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec49d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec48020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec48340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec48660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec48a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec48c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f73dec35020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f73dec35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec35530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec35850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec35b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec35d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec34020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec34340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec34660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec34a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec34c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f73dec20020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f73dec20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec20530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec206c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec20850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec209e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec20b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec20d00"/>
        <function-ref name="get" scoped="" ref="0x7f73dec1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec1f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec1f340"/>
        <function-ref name="set" scoped="" ref="0x7f73dec1f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec1f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec1f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec1fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f73dec0c200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f73dec0c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec0c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec0c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec0c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec0ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec0cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec0cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec0b020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec0b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec0b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec0b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec0b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec0b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec0b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec0bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec0bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f73debdf560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f73debdf560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debdf8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debdfa70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debdfc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debdfd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debde020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debde1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debde340"/>
        <function-ref name="get" scoped="" ref="0x7f73debde4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debde660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debde7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debde980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debdeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debdeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debdd020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f73debc9570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f73debc9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debc98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debc9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debc9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debc9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debc7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debc71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debc7340"/>
        <function-ref name="get" scoped="" ref="0x7f73debc74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debc7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debc77f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debc7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debc7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debc7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debc6020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f73debe1580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f73debe1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debe1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debe1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debe1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debe1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debe0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debe01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debe0340"/>
        <function-ref name="get" scoped="" ref="0x7f73debe04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debe0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debe07f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debe0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debe0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debe0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debdf020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f73dec08200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f73dec08200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dec08580"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dec08710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dec088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dec08a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dec08bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dec08d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dec07020"/>
        <function-ref name="get" scoped="" ref="0x7f73dec071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dec07340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dec074d0"/>
        <function-ref name="set" scoped="" ref="0x7f73dec07660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dec077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dec07980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dec07c10"/>
        <function-ref name="clr" scoped="" ref="0x7f73dec07da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f73debbc570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f73debbc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debbc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debbca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debbcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debbcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debbb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debbb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debbb340"/>
        <function-ref name="get" scoped="" ref="0x7f73debbb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debbb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debbb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debbb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debbbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debbbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debba020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f73debb6580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f73debb6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debb6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debb6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debb6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debb6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debb5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debb51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debb5340"/>
        <function-ref name="get" scoped="" ref="0x7f73debb54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debb5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debb57f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debb5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debb5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debb5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debb4020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f73debe91f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f73debe91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73debe9970"/>
        <function-ref name="isInput" scoped="" ref="0x7f73debe9b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73debe9c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f73debe9e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73debe8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73debe81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73debe8340"/>
        <function-ref name="get" scoped="" ref="0x7f73debe84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73debe8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73debe87f0"/>
        <function-ref name="set" scoped="" ref="0x7f73debe8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73debe8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73debe8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73debe7020"/>
        <function-ref name="clr" scoped="" ref="0x7f73debe71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb8b6d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb8b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb8ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb8bbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb8bd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb8a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb8a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb8a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb8a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb8a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb8a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb8a980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb8ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb8aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb8ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb89120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb86100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb86100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb86480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb86610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb867a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb86930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb86ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb86c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb86de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb85020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb85340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb85660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb85a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb85c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb82d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb82d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb810e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb81270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb81400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb81590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb81720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb818b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb81a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb81bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb81d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb80020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb80340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb80760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb7d740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb7d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb7dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb7dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb7dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb7b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb7b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb7b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb7b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb7b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb7b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb7b980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb7bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb7bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb7be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb7a120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb7a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb77100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb77100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb77480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb77610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb777a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb77930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb77ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb77c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb77de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb76020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb76340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb76660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb76a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb76c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb73d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb73d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb720e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb72270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb72400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb72590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb72720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb728b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb72a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb72bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb72d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb71020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb71340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb71760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb6e740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb6e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb6eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb6ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb6ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb6d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb6d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb6d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb6d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb6d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb6d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb6d980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb6db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb6dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb6de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb6c120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb6c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb69100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb69100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb69480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb69610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb697a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb69930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb69ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb69c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb69de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb68020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb68340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb68660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb68a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb68c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb65d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb65d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb64270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb64400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb64590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb64720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb648b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb64a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb64bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb64d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb63020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb63340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb63760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb60740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb60740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb60ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb60c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb60de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb5f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb5f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb5f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb5f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb5f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb5f980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb5fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb5fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb5fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb5e120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb5b100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb5b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb5b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb5b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb5b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb5b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb5bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb5bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb5bde0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb5a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb5a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb5a340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb5a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb5a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb5a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb5aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb57d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb57d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb55270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb55400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb55590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb55720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb55a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb55bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb55d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb54020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb54340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb54760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb51860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb51860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb51be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb51d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb50020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb50340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb50660"/>
        <function-ref name="get" scoped="" ref="0x7f73deb507f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb50980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb50b10"/>
        <function-ref name="set" scoped="" ref="0x7f73deb50ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb50e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb4f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb4f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb4f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb4c270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb4c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb4c5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb4c780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb4c910"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb4caa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb4cc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb4cdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb4b020"/>
        <function-ref name="get" scoped="" ref="0x7f73deb4b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb4b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb4b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73deb4b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb4b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb4b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb4bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb48d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb48d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb470e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb47270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb47400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb47590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb47720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb478b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb47a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb47bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb47d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb46020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb46340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb46760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb43740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb43740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb43ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb43c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb43de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb42020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb42340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb424d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb42660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb42980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb42b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb42ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb42e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb41120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb3e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb3e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb3e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb3e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb3e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb3e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb3eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb3ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb3ede0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb3d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb3d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb3d340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb3d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb3d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb3d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb3da80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb3dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb3ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb3ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb39270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb39400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb39590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb39720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb398b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb39a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb39bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb39d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb38020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb38340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb38760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb35740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb35740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb35ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb35c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb35de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb34020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb34340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb344d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb34660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb34980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb34b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb34ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb34e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb33120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb2f100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb2f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb2f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb2f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb2f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb2f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb2fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb2fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb2fde0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb2e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb2e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb2e340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb2e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb2e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb2e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb2ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb2ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb2bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb2bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb2a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb2a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb2a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb2a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb2a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb2a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb2aa40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb2abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb2ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb29020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb29340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb29760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb26740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb26740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb26ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb26c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb26de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb25020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb251b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb25340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb254d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb25660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb257f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb25980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb25b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb25ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb25e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb24120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb21100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb21100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb21480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb21610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb217a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb21930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb21ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb21c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb21de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb20020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb20340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb20660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb20a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb20c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb1dd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb1dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb1c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb1c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb1c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb1c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb1c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb1c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb1ca40"/>
        <function-ref name="get" scoped="" ref="0x7f73deb1cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb1cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb1b020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb1b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb1b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb1b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb1b760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb18a60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb18a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb18de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb17020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb171b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb17340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb17660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb177f0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb17980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb17b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb17ca0"/>
        <function-ref name="set" scoped="" ref="0x7f73deb17e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb16020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb161b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb16440"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb13460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb13460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb137e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb13970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb13b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb13c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb13e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb121b0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb12340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb124d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb12660"/>
        <function-ref name="set" scoped="" ref="0x7f73deb127f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb12980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb12b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb12da0"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb0fe00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb0fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb0d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb0d350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb0d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb0d670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb0d800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb0d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb0db20"/>
        <function-ref name="get" scoped="" ref="0x7f73deb0dcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb0de40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb0c020"/>
        <function-ref name="set" scoped="" ref="0x7f73deb0c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb0c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb0c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb0c760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb0c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb09740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb09740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb09ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb09c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb09de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb08020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb08340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb084d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb08660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb08980"/>
        <function-ref name="set" scoped="" ref="0x7f73deb08b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb08ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb08e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb07120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb04100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb04100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deb04480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deb04610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deb047a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deb04930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deb04ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deb04c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deb04de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deb03020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deb031b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deb03340"/>
        <function-ref name="set" scoped="" ref="0x7f73deb034d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deb03660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deb037f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deb03a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deb03c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deb00d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deb00d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deaff0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deaff270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deaff400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deaff590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deaff720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deaff8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deaffa40"/>
        <function-ref name="get" scoped="" ref="0x7f73deaffbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaffd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deafe020"/>
        <function-ref name="set" scoped="" ref="0x7f73deafe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deafe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deafe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deafe760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deafe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deafb740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deafb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deafbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deafbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deafbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deafa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deafa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deafa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deafa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deafa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deafa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deafa980"/>
        <function-ref name="set" scoped="" ref="0x7f73deafab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deafaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deafae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deaf9120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deaf92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deaf6100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deaf6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deaf6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deaf6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deaf67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deaf6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deaf6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deaf6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deaf6de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deaf5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaf51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deaf5340"/>
        <function-ref name="set" scoped="" ref="0x7f73deaf54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaf5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deaf57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deaf5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deaf5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deaf2d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deaf2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deaf10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deaf1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deaf1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deaf1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deaf1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deaf18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deaf1a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deaf1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaf1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deaf0020"/>
        <function-ref name="set" scoped="" ref="0x7f73deaf01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaf0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deaf04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deaf0760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deaf08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deaed740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deaed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deaedac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deaedc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deaedde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deaec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deaec1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deaec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deaec4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deaec660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deaec980"/>
        <function-ref name="set" scoped="" ref="0x7f73deaecb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaecca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deaece30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deaeb120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deaeb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deae8100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deae8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deae8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deae8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deae87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deae8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deae8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deae8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deae8de0"/>
        <function-ref name="get" scoped="" ref="0x7f73deae6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deae61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deae6340"/>
        <function-ref name="set" scoped="" ref="0x7f73deae64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deae6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deae67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deae6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deae6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deae3d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deae3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deae20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deae2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deae2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deae2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deae2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deae28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deae2a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deae2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deae2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deae1020"/>
        <function-ref name="set" scoped="" ref="0x7f73deae11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deae1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deae14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deae1760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deae18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deade740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deade740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deadeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deadec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deadede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deadd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deadd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deadd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deadd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deadd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deadd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deadd980"/>
        <function-ref name="set" scoped="" ref="0x7f73deaddb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaddca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deadde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deadc120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deadc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73dead9100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73dead9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dead9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dead9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dead97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dead9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dead9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dead9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dead9de0"/>
        <function-ref name="get" scoped="" ref="0x7f73dead8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dead81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dead8340"/>
        <function-ref name="set" scoped="" ref="0x7f73dead84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dead8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dead87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dead8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73dead8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73dead5d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73dead5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dead40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dead4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dead4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73dead4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73dead4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73dead48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73dead4a40"/>
        <function-ref name="get" scoped="" ref="0x7f73dead4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73dead4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73dead3020"/>
        <function-ref name="set" scoped="" ref="0x7f73dead31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73dead3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73dead34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73dead3760"/>
        <function-ref name="clr" scoped="" ref="0x7f73dead38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73dead0740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73dead0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73dead0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73dead0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73dead0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deacf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deacf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deacf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deacf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deacf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deacf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deacf980"/>
        <function-ref name="set" scoped="" ref="0x7f73deacfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deacfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deacfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deace120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deace2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deacb100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deacb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deacb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deacb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deacb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deacb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deacbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deacbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deacbde0"/>
        <function-ref name="get" scoped="" ref="0x7f73deaca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deaca340"/>
        <function-ref name="set" scoped="" ref="0x7f73deaca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deaca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deacaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deacac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deac7d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deac7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deac60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deac6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deac6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deac6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deac6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deac68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deac6a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deac6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deac6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deac5020"/>
        <function-ref name="set" scoped="" ref="0x7f73deac51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deac5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deac54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deac5760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deac58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deac1740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deac1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deac1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deac1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deac1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deac0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deac01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deac0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deac04d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deac0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deac07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deac0980"/>
        <function-ref name="set" scoped="" ref="0x7f73deac0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deac0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deac0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deabf120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deabf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deabc100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deabc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deabc480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deabc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deabc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deabc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deabcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deabcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deabcde0"/>
        <function-ref name="get" scoped="" ref="0x7f73deabb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deabb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deabb340"/>
        <function-ref name="set" scoped="" ref="0x7f73deabb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deabb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deabb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deabba80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deabbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deab8d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deab8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deab70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deab7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deab7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deab7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deab7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deab78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deab7a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deab7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deab7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deab6020"/>
        <function-ref name="set" scoped="" ref="0x7f73deab61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deab6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deab64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deab6760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deab68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deab3740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deab3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deab3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deab3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deab3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deab2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deab21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deab2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deab24d0"/>
        <function-ref name="get" scoped="" ref="0x7f73deab2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deab27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deab2980"/>
        <function-ref name="set" scoped="" ref="0x7f73deab2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deab2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deab2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deab1120"/>
        <function-ref name="clr" scoped="" ref="0x7f73deab12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deaae100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deaae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deaae480"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deaae610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deaae7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deaae930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deaaeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deaaec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deaaede0"/>
        <function-ref name="get" scoped="" ref="0x7f73deaad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaad1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deaad340"/>
        <function-ref name="set" scoped="" ref="0x7f73deaad4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaad660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deaad7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deaada80"/>
        <function-ref name="clr" scoped="" ref="0x7f73deaadc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73deaaad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f73deaaad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73deaa90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73deaa9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73deaa9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f73deaa9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73deaa9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73deaa98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73deaa9a40"/>
        <function-ref name="get" scoped="" ref="0x7f73deaa9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73deaa9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73deaa8020"/>
        <function-ref name="set" scoped="" ref="0x7f73deaa81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73deaa8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73deaa84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73deaa8760"/>
        <function-ref name="clr" scoped="" ref="0x7f73deaa88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f73dea39020" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f73dea39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea393a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea39530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea396c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea39850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea399e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea39b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f73dea2e020" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f73dea2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea2e3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea2e530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea2e6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea2e850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea2e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea2eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f73dea35020" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f73dea35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea353a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea35530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea356c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea35850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea359e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea35b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f73dea33020" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f73dea33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea333a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea33530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea336c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea33850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea339e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea33b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f73dea3b020" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f73dea3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea3b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea3b530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea3b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea3b850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea3b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea3bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f73dea30020" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f73dea30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea304a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea30630"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea307c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea30950"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea30ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea30c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f73dea38020" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f73dea38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea383a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea38530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea386c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea38850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea389e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea38b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f73dea2d020" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f73dea2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea2d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea2d530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea2d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea2d850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea2d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea2db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f73dea410c0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f73dea410c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea41440"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea415d0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea41760"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea418f0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea41a80"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea41c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f73dea32020" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f73dea32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea323a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea32530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea326c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea32850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea329e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea32b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f73dea3a020" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f73dea3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea3a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea3a530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea3a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea3a850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea3a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea3ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f73dea2f060" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f73dea2f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea2f3e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea2f570"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea2f700"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea2f890"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea2fa20"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea2fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f73dea37020" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f73dea37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea373a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea37530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea376c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea37850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea379e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea37b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f73dea34020" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f73dea34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea343a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea34530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea346c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea34850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea349e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea34b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f73dea40020" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f73dea40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea403a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea40530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea406c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea40850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea409e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea40b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f73dea31020" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f73dea31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea313a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea31530"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea316c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea31850"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea319e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea31b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f73dea26bc0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f73dea26bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea25020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea251b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea25340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea254d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea25660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f73dea1bbc0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f73dea1bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea1a020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea1a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea1a340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea1a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea1a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea1a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f73dea23bc0" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f73dea23bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea22020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea221b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea22340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea224d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea22660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f73dea21bc0" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f73dea21bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea20020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea201b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea20340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea204d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea20660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f73dea28c40" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f73dea28c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea27020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea271b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea27340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea274d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea27660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f73dea1ebc0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f73dea1ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea1d0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea1d230"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea1d3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea1d550"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea1d6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea1d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f73dea25bc0" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f73dea25bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea24020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea241b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea24340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea244d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea24660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f73dea1abc0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f73dea1abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea19020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea191b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea19340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea194d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea19660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f73dea2cd30" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f73dea2cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea290e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea29270"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea29400"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea29590"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea29720"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea298b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f73dea20bc0" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f73dea20bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea1f020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea1f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea1f340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea1f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea1f660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea1f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f73dea27bc0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f73dea27bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea26020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea261b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea26340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea264d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea26660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f73dea1dc40" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f73dea1dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea1b020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea1b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea1b340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea1b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea1b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea1b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f73dea24bc0" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f73dea24bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea23020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea231b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea23340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea234d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea23660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f73dea22bc0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f73dea22bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea21020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea211b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea21340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea214d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea21660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f73dea29c80" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f73dea29c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea280a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea28230"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea283c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea28550"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea286e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea28870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f73dea1fbc0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f73dea1fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73dea1e020"/>
        <function-ref name="fired" scoped="" ref="0x7f73dea1e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73dea1e340"/>
        <function-ref name="edge" scoped="" ref="0x7f73dea1e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73dea1e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73dea1e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f73de936480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de936480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de936800"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de936990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73de936b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de936cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de936e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73de935020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de9351b0"/>
        <function-ref name="get" scoped="" ref="0x7f73de935340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73de9354d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73de935660"/>
        <function-ref name="set" scoped="" ref="0x7f73de9357f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73de935980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73de935b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73de935da0"/>
        <function-ref name="clr" scoped="" ref="0x7f73de934020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f73de947250" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f73de947250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de9475d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de947760"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de9478f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de947a80"/>
        <function-ref name="get" scoped="" ref="0x7f73de947c10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de947da0"/>
        <function-ref name="set" scoped="" ref="0x7f73de936020"/>
        <function-ref name="clr" scoped="" ref="0x7f73de9361b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f73de924020" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f73de924020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73de9243a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73de924530"/>
        <function-ref name="disable" scoped="" ref="0x7f73de9246c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73de924850"/>
        <function-ref name="enable" scoped="" ref="0x7f73de9249e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73de924b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f73de931490" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f73de931490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73de931810"/>
        <function-ref name="disable" scoped="" ref="0x7f73de9319a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73de931b30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73de931cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f73de905480" loc="51:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f73de905480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73de905800"/>
        <function-ref name="runTask" scoped="" ref="0x7f73de905990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f73de9068f0" loc="46:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f73de9068f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73de906c70"/>
        <function-ref name="disable" scoped="" ref="0x7f73de906e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73de905020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73de9051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f73de90aca0" loc="43:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f73de90aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f73de909d40"/>
        <function-ref name="enable" scoped="" ref="0x7f73de9098c0"/>
        <function-ref name="notify" scoped="" ref="0x7f73de9081e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f73de90bb10" loc="42:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f73de90bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de90a750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f73de908660" loc="45:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f73de908660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de9089e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de908b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de908d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de906020"/>
        <function-ref name="get" scoped="" ref="0x7f73de9061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de906340"/>
        <function-ref name="set" scoped="" ref="0x7f73de9064d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73de906660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f73de8fd370" loc="45:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7f73de8fd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de8fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f73de8ff640" loc="43:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f73de8ff640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f73dee96080"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f73dee969a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f73de8fe810"/>
        <function-ref name="enable" scoped="" ref="0x7f73de8fe390"/>
        <function-ref name="notify" scoped="" ref="0x7f73de8fec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f73de8fb690" loc="46:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f73de8fb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f73de8fa810"/>
        <function-ref name="enable" scoped="" ref="0x7f73de8fa390"/>
        <function-ref name="notify" scoped="" ref="0x7f73de8fac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f73de900340" loc="42:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f73de900340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f73dee96080"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f73dee969a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de8ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de743370" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="ChungTestAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de743370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de740870"/>
        <function-ref name="fired" scoped="" ref="0x7f73de742e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de741c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de741780"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de73e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de740cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de741300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de742020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de740260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de7424f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de7429c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f73de8e7c50" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8e7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de8e0110"/>
        <function-ref name="fired" scoped="" ref="0x7f73de8e26a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de8e14a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de8e1020"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de8e0a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de8e0590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de8e2b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de8e4860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de8e1ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de8e4d30"/>
        <function-ref name="stop" scoped="" ref="0x7f73de8e2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f73de8db670" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f73de8db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de8d7c40"/>
        <function-ref name="fired" scoped="" ref="0x7f73de8d91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de8d7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de8d9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de8d6590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de8d6110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de8d9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de8da390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de8d7630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de8da860"/>
        <function-ref name="stop" scoped="" ref="0x7f73de8dad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73de8d41a0" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f73de8d41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de8d4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73de8de8b0" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73de8de8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73de8dec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73de7df870" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f73de7df870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de7dc090"/>
        <function-ref name="fired" scoped="" ref="0x7f73de7dd090"/>
        <function-ref name="startAt" scoped="" ref="0x7f73de7dda10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de7dd550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73de7dc550"/>
        <function-ref name="start" scoped="" ref="0x7f73de7de6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de7debb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73de7df020" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73de7df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73de7df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73de206ce0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f73de206ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de202670"/>
        <function-ref name="fired" scoped="" ref="0x7f73de203550"/>
        <function-ref name="startAt" scoped="" ref="0x7f73de202020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de203a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73de202b30"/>
        <function-ref name="start" scoped="" ref="0x7f73de204b60"/>
        <function-ref name="stop" scoped="" ref="0x7f73de203090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73de206490" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73de206490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73de206810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f73de1ec5d0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de1ec5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73de1ec950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73de1ecae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73de1ecc70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73de1ece00"/>
        <function-ref name="fired" scoped="" ref="0x7f73de1eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f73de1f0c50" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de1f0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73de1ee020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73de1ee1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de1ee340"/>
        <function-ref name="get" scoped="" ref="0x7f73de1ee4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de1ee660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de1ee7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73de1ee980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de1eeb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de1eeca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73de1eee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73de1ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f73de1ed2b0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de1ed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73de1ed630"/>
        <function-ref name="getControl" scoped="" ref="0x7f73de1ed7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de1ed950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73de1edae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73de1edc70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de1ede00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73de1ec020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73de1ec1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73de1ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f73de8ae210" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de8ae210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73de8ae590"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73de8ae720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73de8ae8b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73de8aea40"/>
        <function-ref name="fired" scoped="" ref="0x7f73de8aebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f73de8b6bf0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de8b6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73de8b2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73de8b21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de8b2340"/>
        <function-ref name="get" scoped="" ref="0x7f73de8b24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de8b2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de8b27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73de8b2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de8b2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de8b2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73de8b2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73de8b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f73de8b18b0" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de8b18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73de8b1c30"/>
        <function-ref name="getControl" scoped="" ref="0x7f73de8b1dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de8b0020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73de8b01b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73de8b0340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de8b04d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73de8b0660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73de8b07f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f73de8b0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f73de1e2440" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f73de1e2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f73de1e27c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f73de1e2950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f73de1e2ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f73de1e2c70"/>
        <function-ref name="fired" scoped="" ref="0x7f73de1e2e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f73de1e5910" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de1e5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73de1e5c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73de1e5e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de1e4020"/>
        <function-ref name="get" scoped="" ref="0x7f73de1e41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de1e4340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de1e44d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73de1e4660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de1e47f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de1e4980"/>
        <function-ref name="setMode" scoped="" ref="0x7f73de1e4b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73de1e4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73de1e9720" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f73de1e9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de1e5020"/>
        <function-ref name="fired" scoped="" ref="0x7f73de1e7020"/>
        <function-ref name="startAt" scoped="" ref="0x7f73de1e79a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de1e74e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73de1e54e0"/>
        <function-ref name="start" scoped="" ref="0x7f73de1e85b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de1e8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73de1eae60" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73de1eae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73de1e9210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f73de1e3020" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f73de1e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f73de1e33a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f73de1e3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de1e36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f73de1e3850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f73de1e39e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de1e3b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73de1e3d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f73de1e2020"/>
        <function-ref name="setControl" scoped="" ref="0x7f73de1e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73de858b50" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f73de858b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de85c9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de85b360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de85ce70"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de85b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f73de856b70" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f73de856b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de8539b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de852360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de853e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de852820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f73de841c50" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f73de841c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73de840020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f73de8401b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f73de840340"/>
        <function-ref name="get" scoped="" ref="0x7f73de8404d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f73de840660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de8407f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f73de840980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de840b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de840ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f73de840e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f73de83f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73de850b80" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f73de850b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de84f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de841360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de84fe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de841820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f73de81e0f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f73de81e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de81c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de81c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de81c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de81ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73de83bcf0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f73de83bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de820b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de81f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de81f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de81fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73de1ff140" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f73de1ff140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de1fdb30"/>
        <function-ref name="fired" scoped="" ref="0x7f73de1fe9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73de1fd4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de1fd020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73de1fb020"/>
        <function-ref name="start" scoped="" ref="0x7f73de1fe020"/>
        <function-ref name="stop" scoped="" ref="0x7f73de1fe530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f73de1f9b90" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f73de1f9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee98270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f73dee985e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de1f54e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73de1f74e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73de1f7e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de1f79a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73de1f59a0"/>
        <function-ref name="start" scoped="" ref="0x7f73de1f89d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de1f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f73de1fb690" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f73de1fb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de1fa5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de1f9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de1faa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de1f94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f73de7aa9c0" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f73de7aa9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73de7aad40"/>
        <function-ref name="runTask" scoped="" ref="0x7f73de7a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f73de7ae850" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f73de7ae850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de7aa090"/>
        <function-ref name="fired" scoped="" ref="0x7f73de7ab090"/>
        <function-ref name="startAt" scoped="" ref="0x7f73de7aba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de7ab550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73de7aa550"/>
        <function-ref name="start" scoped="" ref="0x7f73de7ad6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de7adbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de7b32f0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de7b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de7af870"/>
        <function-ref name="fired" scoped="" ref="0x7f73de7b2e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de7b0c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de7b0780"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de7ae1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de7afcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de7b0300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de7b2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de7af260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de7b24f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de7b29c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f73de759a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f73de759a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73de759d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f73de758020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f73de75e640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f73de75e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de75ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f73de75b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de75a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de75bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de759590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de759110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de75b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de75d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de75a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de75d860"/>
        <function-ref name="stop" scoped="" ref="0x7f73de75dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de764150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de764150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de760700"/>
        <function-ref name="fired" scoped="" ref="0x7f73de763c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de761a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de7615b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de75e090"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de760ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de761110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de764d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de7600d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de7632a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de763790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73de755790" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f73de755790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de7543f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f73de754a60" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f73de754a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73de74a890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73de749260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73de74ad50"/>
        <function-ref name="overflow" scoped="" ref="0x7f73de749720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de73dc90" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="ChungTestAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de73dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de738170"/>
        <function-ref name="fired" scoped="" ref="0x7f73de73b720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de73a510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de73a090"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de738a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de7385f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de73bba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de73c8a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de73ab20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de73cd70"/>
        <function-ref name="stop" scoped="" ref="0x7f73de73b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de7366d0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="ChungTestAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de7366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de732c40"/>
        <function-ref name="fired" scoped="" ref="0x7f73de7341e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de732020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de734ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de731590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de731110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de734660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de735390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de732630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de735860"/>
        <function-ref name="stop" scoped="" ref="0x7f73de735d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de72fb00" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="ChungTestAppC.MoodTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de72fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de72a110"/>
        <function-ref name="fired" scoped="" ref="0x7f73de72d5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de72b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de72b020"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de72aa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de72a590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de72da30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de72e750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de72bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de72ec20"/>
        <function-ref name="stop" scoped="" ref="0x7f73de72d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73de7284e0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="ChungTestAppC.MoodTimer2C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f73de7284e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f73dee99680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73dee99df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73de724a20"/>
        <function-ref name="fired" scoped="" ref="0x7f73de726020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73de726da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73de726920"/>
        <function-ref name="getdt" scoped="" ref="0x7f73de7234a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73de723020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73de7264a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73de727110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73de724410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73de7275e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73de727ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f73de71f080" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f73de71f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73de71f400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73de71f590"/>
        <function-ref name="led1On" scoped="" ref="0x7f73de71f720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73de71f8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73de71fa40"/>
        <function-ref name="get" scoped="" ref="0x7f73de71fbd0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73de71fd60"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73de71e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73de71e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f73de71e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f73de71e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f73de719210" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f73de719210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de719590"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de719720"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de7198b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de719a40"/>
        <function-ref name="get" scoped="" ref="0x7f73de719bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de719d60"/>
        <function-ref name="set" scoped="" ref="0x7f73de718020"/>
        <function-ref name="clr" scoped="" ref="0x7f73de7181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73de71b410" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73de71b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73de71b790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f73de7184d0" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f73de7184d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de718850"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de7189e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de718b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de718d00"/>
        <function-ref name="get" scoped="" ref="0x7f73de717020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de7171b0"/>
        <function-ref name="set" scoped="" ref="0x7f73de717340"/>
        <function-ref name="clr" scoped="" ref="0x7f73de7174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f73de71ba10" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f73de71ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73de71bd90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73de71a020"/>
        <function-ref name="led1On" scoped="" ref="0x7f73de71a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73de71a340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73de71a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73de71a660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73de71a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73de71ae30"/>
        <function-ref name="set" scoped="" ref="0x7f73de71a980"/>
        <function-ref name="led0On" scoped="" ref="0x7f73de71ab10"/>
        <function-ref name="led2On" scoped="" ref="0x7f73de71aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f73de7177f0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f73de7177f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de717b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de717d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de716020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de7161b0"/>
        <function-ref name="get" scoped="" ref="0x7f73de716340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de7164d0"/>
        <function-ref name="set" scoped="" ref="0x7f73de716660"/>
        <function-ref name="clr" scoped="" ref="0x7f73de7167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f73de71cd80" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f73de71cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6fa180"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6fa310"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6fa4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6fa630"/>
        <function-ref name="get" scoped="" ref="0x7f73de6fa7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6fa950"/>
        <function-ref name="set" scoped="" ref="0x7f73de6faae0"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6fac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f73de6f9020" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f73de6f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6f9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6f96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6f9850"/>
        <function-ref name="get" scoped="" ref="0x7f73de6f99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6f9b70"/>
        <function-ref name="set" scoped="" ref="0x7f73de6f9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f73de6f7600" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f73de6f7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73de6f7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f73de6f8380" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f73de6f8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6f8700"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6f8890"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6f8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6f8bb0"/>
        <function-ref name="get" scoped="" ref="0x7f73de6f8d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6f7020"/>
        <function-ref name="set" scoped="" ref="0x7f73de6f71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f73de6f4020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de6f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6f43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6f4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73de6f46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6f4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6f49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73de6f4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6f4d00"/>
        <function-ref name="get" scoped="" ref="0x7f73de6f3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73de6f31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73de6f3340"/>
        <function-ref name="set" scoped="" ref="0x7f73de6f34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73de6f3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73de6f37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73de6f3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6f3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f73de6f6df0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f73de6f6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6f51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6f5350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6f54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6f5670"/>
        <function-ref name="get" scoped="" ref="0x7f73de6f5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6f5990"/>
        <function-ref name="set" scoped="" ref="0x7f73de6f5b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6f5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f73de6efde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de6efde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6ee180"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6ee310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73de6ee4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6ee630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6ee7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73de6ee950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6eeae0"/>
        <function-ref name="get" scoped="" ref="0x7f73de6eec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73de6eee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73de6ed020"/>
        <function-ref name="set" scoped="" ref="0x7f73de6ed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73de6ed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73de6ed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73de6ed760"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6ed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f73de6f1b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f73de6f1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6ef020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6ef4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73de6ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6ef7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73de6ef980"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6efb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f73de6ea930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f73de6ea930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6eacb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6eae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f73de6e9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6e91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6e9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f73de6e94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6e9660"/>
        <function-ref name="get" scoped="" ref="0x7f73de6e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f73de6e9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f73de6e9b10"/>
        <function-ref name="set" scoped="" ref="0x7f73de6e9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f73de6e9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f73de6e8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f73de6e82b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6e8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f73de6eb710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f73de6eb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73de6eba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f73de6ebc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73de6ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73de6ea020"/>
        <function-ref name="get" scoped="" ref="0x7f73de6ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73de6ea340"/>
        <function-ref name="set" scoped="" ref="0x7f73de6ea4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73de6ea660"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73dee89350" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73dee89350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f73dee821f0" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73dee86a60" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f73dee84820" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f73dee84250" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f73dee84590" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f73dee85a60" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f73dee80270" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f73dee82980" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f73dee85270" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f73dee88020" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73dee89c40" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f73dee83820" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f73dee83250" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f73dee83590" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f73dee88ae0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73dee88860" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73dee86350" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f73dee947f0" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f73dee8e020" loc="52:../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73dee8e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f73dee8d190" loc="67:../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f73dee8e8f0" loc="59:../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f73dee8dba0" loc="74:../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73dee8e020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f73dee8d920" loc="74:../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73dee8e020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../tos/interfaces/Get.nc">
      <documentation loc="33:../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f73dee938a0" loc="49:../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73dee938a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f73dee90190" loc="55:../../tos/interfaces/Get.nc">
        <documentation loc="50:../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73dee938a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f73dee62a00" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f73dee601f0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f73dee609d0" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f73dee5f940" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f73dee5d120" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73dee5d930" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f73dee5f190" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73dee5b4c0" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f73dee5b240" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f73dee62270" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f73dee5e190" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f73dee5e920" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f73dee3f8c0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f73dee105b0" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f73dee13870" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f73dee11e60" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f73dee13190" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f73dee11020" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f73dee14350" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f73dee14a30" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f73dee11740" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f73defac020" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f73df271c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f73dedbf500" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f73dedbf280" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f73dedcc9c0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73dee08180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f73dee08bd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f73dedbfd70" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f73dedbdc80" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f73dedc0b00" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f73dedbd4f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f73dedc1190" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f73dedc1920" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f73dedc0390" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73dee08180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f73dee08bd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f73dedc0110" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73dee08180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f73dee08bd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f73dedb1520" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f73dedaeca0" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f73dedaea20" loc="84:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f73dedad9d0" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f73dedad750" loc="91:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f73dedae270" loc="73:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f73dedb0940" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f73dedb0020" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f73dedb1c50" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f73dedba880" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f73dedb72a0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f73dedb7020" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f73dedb7c80" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f73dedb7a00" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f73dedb56a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f73dedb5420" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73dedb5d90" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f73dedc7020" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f73dedc6a10" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f73dedc6790" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f73dedc7750" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73dedcb020" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f73dedc6020" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f73dedc9020" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f73dedc87b0" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f73dedcb7b0" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f73dedc9730" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f73dedc80b0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f73dedc9dc0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f73dedc4450" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f73dedc41d0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f73dfd73520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f73ded871f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f73deecfa80" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f73deece1f0" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f73deecf2b0" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f73df0e8810" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f73df32a020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f73df329020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f73df32a790" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f73df31e270" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f73df31eac0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f73dec57350" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f73dec59b50" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f73dec593e0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f73dec60af0" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f73dec5d5a0" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f73dec5dcd0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f73dec5f760" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f73dec5cb60" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73dec5fe60" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f73dec5c420" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73dec62970" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f73dec5f070" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f73dec4f020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f73dec4f770" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f73dec4b2e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73df325c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f73dec4b060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f73dec52770" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f73dec4e780" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f73dec4bbd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f73dec4e020" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73dec51820" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f73dec4c020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f73dec51020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73dfd73160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73dec55870" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f73dec4d020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f73dec4c7c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f73dec4d7e0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f73dec52020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f73dea3d270" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73dea3cd10" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f73dea3fa50" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f73dea3c4f0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f73dea3c270" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f73dea3f2b0" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f73dea3da70" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73de8d2350" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73de8d2350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f73de8d2c70" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f73dfd73920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73de8cfc70" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73de8cfc70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f73de8cc020" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f73de8c8c50" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73de8cbba0" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f73de8c82b0" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f73de8c9bd0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f73de8c8020" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f73de8c93b0" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f73de8c7480" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73de8ccb80" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73de8cc900" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de8cc020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73de8cb3e0" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73de85a100" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73de85a100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f73de85a340" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de85a340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f73de85ac60" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73de85a340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f73de859d70" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f73de859510" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73df32e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f73de858500" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
