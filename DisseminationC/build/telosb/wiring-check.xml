<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:SensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1fea152560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1fea07b2d0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1fea07b2d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1fe9ebe590"/></to>
    </wire>
    <wire loc="12:SensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fea1388d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fe9e9f020"/></to>
    </wire>
    <wire loc="13:SensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fea148770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9c36640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9c36640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SensorAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7f1fea12db70"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f1fe9549310"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f1fe9549310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f1fe7f6a8d0"/></to>
    </wire>
    <wire loc="20:SensorAppC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x7f1fea12c420"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1fe9543750"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1fe9543750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1fe7e7ebd0"/></to>
    </wire>
    <wire loc="21:SensorAppC.nc">
      <from><interface-ref name="HumidityRead" scoped="" ref="0x7f1fea12bd00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f1fe9547240"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f1fe9547240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f1fe7f68790"/></to>
    </wire>
    <wire loc="24:SensorAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f1fea135500"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f1fe913b920"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f1fe913b920"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f1fe9105020"/></to>
    </wire>
    <wire loc="25:SensorAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f1fea132d60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f1fe9138b80"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f1fe9138b80"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f1fe9104270"/></to>
    </wire>
    <wire loc="31:SensorAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fea0cd5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe85b1c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fe85b1c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe7a528b0"/></to>
    </wire>
    <wire loc="32:SensorAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fea0be4e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85b08b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85b08b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe7a51590"/></to>
    </wire>
    <wire loc="33:SensorAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1fea0b35a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1fe85b1020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1fe85b1020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1fe7a53b60"/></to>
    </wire>
    <wire loc="34:SensorAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f1fea0af6f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe90f5c00"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe90f5c00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe90c42f0"/></to>
    </wire>
    <wire loc="35:SensorAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fea0abdf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe85ab910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe85ab910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe90ef020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8710dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8799b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe87bc750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe87d8080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8929620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8a19c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8f527e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7bbd020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8de3020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8ff93c0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe9208150"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7e49060"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe948dc60"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7ed11b0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe97c23a0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7fae020"/></to>
    </wire>
    <wire loc="45:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe9a7c020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe9c25400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1fe9ebec00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1fea5f83a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1fea5f83a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1fea1a3140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1fe9eae6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fea07a640"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fea07a640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fea076ab0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fe9eaedc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1fea073220"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f1fea055020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1fea055020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fea052020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1fea073900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fea075c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f1fea072020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe9e77c40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fea052020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fea03dcb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1fea04b6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1fea03b3d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1fea27b4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1fea03a680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f1fe9ff75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f346d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f1fe9fe4020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f2cb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1fe9fed700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f39160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f1fe9fd1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f13cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1fe9ff5aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f3a480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1fe9fd7020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f13020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1fe9fcea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9efbcb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f1fe9fdf5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f0c220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1fe9ff8b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f899d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f1fe9fd3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f212f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f1fe9fda3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f23610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f1fe9fe35a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f24220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1fe9fec700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f317a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f1fe9fd0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f0a2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f1fe9fe2be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f1c6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f1fe9ff3890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f33ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1fea008060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f98c80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1fe9fd7da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f0b610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1fe9ffe0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f3b020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1fe9fdea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f056d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f1fe9fe76d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f41a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f1fe9fd2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f1a7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1fe9fefcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f42de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f1fe9fd81f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f1bac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f1fe9fcfa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f037a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f1fe9fe00c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9f15b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1fe9fd6b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f04ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f1fe9fd4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe9f2acb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1fe9fd5a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9efb020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1fe9fdb570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1fe9f2a020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1fe9fdc020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1fe9efdb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1fe9f96c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f965b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1fe9f952f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1fe9ef6a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1fe9f95940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1fe9ef3260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f40930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f98c80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f3e020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f965b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f38020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f98c80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f377a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f965b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f30610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f98c80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f2fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f965b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1fe9f8fc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1fe9f8d2f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1fe9ef39f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1fe9f8d940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1fe9ef2240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f29b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f272f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f20160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f1f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f19610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f18c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f11b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f0f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f09160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f087a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9f01610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9f00c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9efab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1fe9ef82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea1a1040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1fea19d490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1fea58f3b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe9e77c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe9ea28d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1fe9e977b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1fe9e7a360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1fe9e7a360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9c5f440"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1fe9e9c980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1fe9e796a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1fe9e796a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9c4a020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1fe9e9bca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1fe9e789c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1fe9e789c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9c46b90"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe9c4e610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f1fe9e1f200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f1fe9e1f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cfc740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe9c492f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f1fe9e1d200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f1fe9e1d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cf6100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe9c44de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f1fe9e1b200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f1fe9e1b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cf2d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1fe9e60020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d95100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1fe9e4c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d65d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f1fe9e02560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d57d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f1fe9dde570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ccb100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f1fe9e00580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d52740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f1fe9e48020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d5b100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f1fe9e33200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d2ce00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1fe9e0f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cd6d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f1fe9dfa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d49d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f1fe9dea570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ce8100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f1fe9dd5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cc7d10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1fe9e5a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d86100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f1fe9df8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d44740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1fe9e56020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d7d740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f1fe9e42020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d4d100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f1fe9e2d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d1dd10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f1fe9e19200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ced740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1fe9e09200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cc7d10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1fe9e64020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d9fd10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1fe9e50020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d6f860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f1fe9e3c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d3e100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f1fe9e04580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d57d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f1fe9de4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cda100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f1fe9dd8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cc7d10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f1fe9df0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d01d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f1fe9e38020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d35a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f1fe9e23200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d05100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1fe9e13200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cdf740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f1fe9de2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cd6d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f1fe9df6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d0fd10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1fe9e5e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d91d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1fe9e4a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d60740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1fe9e17200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ce8100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f1fe9e46020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d57d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f1fe9e31200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d27740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1fe9e0d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cd0740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f1fe9df2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d05100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1fe9e72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9da86d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1fe9e54020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d78100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f1fe9e40020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d49d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f1fe9e2b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d18740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f1fe9dee580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d3e100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f1fe9de8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ce4d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f1fe9ddc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cc7d10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f1fe9e27200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d0fd10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f1fe9dec580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d3ad10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1fe9e62020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d9a740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1fe9e4e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d6a270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f1fe9e3a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d3ad10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f1fe9df4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d0a740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f1fe9de0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cd0740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f1fe9e35200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d30460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f1fe9e21200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d01d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1fe9e11200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cda100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1fe9e5c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d8b740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1fe9e15200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ce4d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1fe9e58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d82d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f1fe9e44020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d52740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f1fe9e2f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d22100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1fe9e0b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ccb100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1fe9e67020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9da3100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1fe9e52020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d74d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f1fe9e3e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d44740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f1fe9e29200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d13100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f1fe9dfc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d4d100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f1fe9de6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9cdf740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f1fe9dfe580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d4d100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f1fe9e25200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d0a740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f1fe9dda570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ccb100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f1fe9dd3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9ced740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f1fe9e061f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1fe9d5b100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c231d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c231d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9aad690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe9c25400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe9b29760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1fe9c1ba80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1fe9a9fcf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe9b29760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe80d0380"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1fe9aa8c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9afdcf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe9af61d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe9b28020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe9b28020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe80c9020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe9a94020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe9ba6020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe9ba6020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe9b6a0f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe80d0380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe80b4a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1fe80c3780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe80d0bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe80d0bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe80b3340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe80c53d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe9ba6020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe80b04c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe80ba7b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe80ba7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe80afa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe80b9da0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe80b9da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe80adda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe80b60c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe80b60c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f1fe9fe4020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1fe9fdb570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f1fe9fe2be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f1fe9fd81f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f1fe9fe00c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1fe9fd7020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f1fe9fdf5a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1fe9fd7da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1fe9fdea50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1fe9fd6b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1fe9fdc020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1fe9fd5a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1fe9b67540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1fe9b9d020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1fe9b9d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe9b980a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9b892c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1fe9af3490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1fe9aa2e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a81c50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a7d810"/></to>
    </wire>
    <wire loc="48:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7f1fe9a83dc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a7f870"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a7f870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe97d3080"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1fe9a78c40"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1fe9a6ae10"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1fe9a6ae10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1fe97d8440"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1fe97c5080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1fe9a756e0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1fe97d8440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1fe99f9d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1fe9a61e10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1fe97d9440"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1fe97d9440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1fe99fc670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe97d7020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe97d38e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe97d2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe97da020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe97da020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe9a04c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe97dac70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe801cc70"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe801cc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe98a2d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe99f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe97d7020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8015d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe99fa8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1fe99f8e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe801c020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe801c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe98a3a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe99f1710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe80155d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe80155d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1fe98a8cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe99fa8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe996ca20"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1fe99f9d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1fe996a570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1fe99fc670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1fe996b3e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe9a04c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe996db10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe9968020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe99f51d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1fe9969230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1fe99f8e50"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe9963290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe99f1710"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1fe9968690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe9953900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe9953900"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1fe994c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe9963c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe98c0110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe98c0110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1fe9b9d020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe9960dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe99503b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1fe9948dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe99530d0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe994f710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1fe99476d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f1fe9df4580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1fe9944670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f1fe9df2580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1fe9942670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f1fe9df0580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1fe9940670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f1fe9dec580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1fe993e670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f1fe9dee580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe801bbe0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe9953900"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe801b440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe98a0590"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe98a0590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe980e400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe989f370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8015d70"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe98a2d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe980f020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe980f020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7faa6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1fe98a8cd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1fe989c0d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe98a3a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe9810210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe9810210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7fab850"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe980e400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7fa9a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1fe988a0a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe99503b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe980ecd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe989f370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9889020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe980e400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe97f39d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe980f7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe980f7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7faae40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe9809b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe99530d0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7fa8400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe980ecd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1fe7fa8bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe7fae630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7fa6de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe7f75470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe9809b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe7f75bd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe97f3400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7f74270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe97f39d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7f74e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe97f2720"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1fe97c2a00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1fe97c5080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1fe9546900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1fe7f68020"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1fe9548aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1fe7f6a160"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f1fe7f67e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe976c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f1fe7f657b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f1fe976b2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f1fe7f66af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe976c020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f1fe7f63c50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f1fe976b2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f1fe976b2c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f1fe96efc90"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe976c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe96dc1d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe96dc1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe959db60"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f1fe96ed2f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f1fe96db020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f1fe96db020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96d7330"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f1fe96ec480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f1fe96da370"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f1fe96da370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96d3d60"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f1fe96eb610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f1fe96d9730"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f1fe96d9730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1fe95ada30"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe96ea240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe955c1e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe955c1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe96e5450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f1fe96e22f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f1fe96e3ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe959db60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7ecf970"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe96d6490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1fe9e5e020"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe96d0020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f1fe9e5c020"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe96ccde0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f1fe9e5a020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7f1fe96bf510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96cdb60"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f1fe96be830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96d7330"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f1fe96bdb40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96d3d60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe96c4080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe96b05a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe96b05a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe95ac610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1fe969e710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1fe969e710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1fe968a710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9595280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe96c53e0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9568020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe959ae80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe959ae80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7eccc30"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe956a2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe959a270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe959a270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7ecc020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1fe96bb700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1fe969f710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1fe968b710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1fe96948a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f1fe96818a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1fe969c710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f1fe9688710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1fe969a710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f1fe9686710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1fe96a5710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f1fe968d710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1fe9696710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1fe9683710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1fe96938a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f1fe96808a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1fe96a1660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1fe968f6b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1fe9699710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f1fe9685710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1fe96a0710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1fe968c710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1fe96958a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f1fe96828a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1fe969d710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f1fe9689710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1fe969b710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f1fe9687710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1fe96a6710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f1fe968e710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1fe9698710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f1fe9684710"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe959c9e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7ece850"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7ecb590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe9599770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1fe7ecbd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe7ed17c0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7ec8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe7e970f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9595280"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe7e97b70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe9595d00"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7e96270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe956a2f0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7e96e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9568020"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1fe7e95680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f1fe7e95e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1fe7e7ebd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1fe9510390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1fe913f020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1fe7e79840"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1fe7e79840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1fe92141d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1fe9543020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1fe914b8b0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e7c4a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe9148300"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e765c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe9148300"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1fe9504020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e7c4a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe9502450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe7e70730"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe7e70730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe94921d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f1fe9508640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7e71af0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe7e71af0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1fe92f9d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e6e9a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e7c4a0"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f1fe94cee40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1fe7e6f720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1fe9491960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1fe7e6e060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1fe948f920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1fe92f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe949fcc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1fe7e5d300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e6e9a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1fe92f4740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1fe7e5e060"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f1fe9491960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1fe94871d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f1fe948e760"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f1fe9485020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1fe948f920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1fe94861d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe94921d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe948a980"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe949fcc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe9315520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe9315520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7e466c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f1fe9485940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9313b20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9313b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7e45cb0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe9477650"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe93a4020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1fe9470140"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f1fe9e17200"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1fe946e200"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f1fe9e15200"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1fe946c200"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f1fe9e13200"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1fe946a200"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f1fe9e11200"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1fe9468200"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f1fe9e0f200"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1fe9466200"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f1fe9e0d200"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1fe9464200"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f1fe9e0b200"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1fe9462200"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f1fe9e09200"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1fe94824f0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1fea008060"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1fe9475d30"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f1fe9ff8b10"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1fe9473160"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f1fe9ffe0c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1fe9472530"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f1fe9fefcf0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1fe94713a0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f1fe9ff5aa0"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe93133a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7e45530"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7e44610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe9312570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1fe7e44dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1fe7e49670"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7e43900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f1fe92f9d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1fe9291ca0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1fe928d030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f1fe92f51d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1fe9289020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f1fe92f4740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1fe928dd80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1fe92ef240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1fe928c9c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1fe92efe00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f1fe92eca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe92584e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe92584e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f1fe92e6020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe9251020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe9251020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f1fe92e16c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1fe924bb40"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe924bb40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe92ee9a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe93a4020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f1fe92877f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e07280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e765c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe92105e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e765c0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe920c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7e0b360"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe7e0b360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1fe92f9d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe920fc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe7e09020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe7e09020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe94921d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1fe92141d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1fe9191cb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe9202b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe92105e0"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe91628f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe920c280"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f1fe9166bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1fe9208e70"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe92031d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe920fc90"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe91ff020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe919a970"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe919a970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7df4020"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f1fe91d6380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f1fe91e4aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f1fe91de100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe919a120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7dfb450"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe7dfb450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7ddfca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1fe7dee780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7dfbca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe7dfbca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7dde5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe7df03d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe9ba6020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7dda710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7de4880"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7de4880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7dd9da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7de2020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7de2020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7dd70c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7de1440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7de1440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1fe7e08020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1fe9491960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1fe7e08910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1fe948f920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1fe92f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe949fcc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1fe7d94120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e07280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1fe92f4740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1fe7d97dc0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1fe910b8f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1fe9131080"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1fe9131080"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1fe912a2e0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe910d660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9135e80"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9135e80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe912f140"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f1fe9103e20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f1fe9110b10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f1fe9100130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f1fe910fca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe912e2f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f1fe9e4a020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe912ade0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f1fe96938a0"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f1fe910a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe90c42f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe909b020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1fe90f2ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1fe90c3320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1fe90c3320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1fe86d1020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1fe90efc00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1fe90c01d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1fe90c01d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1fe86d0df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fe90ee2b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe90be020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fe90be020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe86cea80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe90eb430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe88a4550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe88a4550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe8896a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe90cf430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe90aa170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe90aa170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe9089080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe90ef020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe90c2510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe90c2510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe86d0210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe90e4350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe90bd020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe90bd020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe908a020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90ed020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90c0800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90c0800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe86cf470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe90db660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe88a0660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe88a0660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe8892af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe909b020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe8704b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe90bc2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe86cc8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1fe90a81d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1fe86cdce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe90b50f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe908b020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe908b020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe9089080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe8704080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe908a020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1fe88a66e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1fe90a0430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1fe9089b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1fe9089b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1fe86ef020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe90b0170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe908a9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe908a9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe88a5a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f1fe86c30f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe909a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe86cb860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe9096990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe9096990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe876dc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1fe86c9690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe908e840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe908e840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe876ba50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe86c54d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe8acfb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe86c9ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe889bd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe86c8b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe8897640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe86c7610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe8fffb80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe8fffb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe8ff77e0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1fe86c41f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe9083330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe9083330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe907e7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe86c3d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe8704b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f1fe8701d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe88a5a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe8896020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1fe86ef020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1fe86ed410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe876dc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe8762a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe8704080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe86fc2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1fe9097500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe876d5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe876d5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f1fe8762370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1fe88a66e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1fe8898c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe909a1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe876fbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe876fbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe87647b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1fe908d6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe876e8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe876e8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f1fe87634d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1fe9097bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1fe876a170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1fe876a170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1fe8760020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe876ba50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe8761840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1fe8701d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9085390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9085390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9082e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe87696b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe87c1220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe87c1220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe87bfa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe87c0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe86f2350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe86f2350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1fe86efd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe86efd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe8708ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe8708ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1fe8702860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe8702860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe9085e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe9085e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe907f990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1fe8769020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe8705980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe8705980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1fe8701690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1fe8701690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe87a0aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe87a0aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe879ce30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1fe879d950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe9084b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe9084b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe892d7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1fe892d7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1fe8927020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe907d640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe900f720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe900f720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8ff9a30"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe9075b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe900aa60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe900aa60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe8ff55b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1fe907a020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a286c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1fe907a020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe89305c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1fe89305c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe8929ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a286c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a17320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1fe906cd30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1fe8a25020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1fe8a25020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe8a17bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1fe9073ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe8a25cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe8a25cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe8a16970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe9068020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe9061660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1fe906b020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1fe87dea20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1fe87dea20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1fe87d7a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f1fe905ce40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe87e0aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1fe87e0aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe8de7280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe906b7f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f1fe90579e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f1fe9058a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f1fe9059a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f1fe8ffee60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f1fe8ff49b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f1fe8ff17f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f4f220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f4f220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f49af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1fe8feda40"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1fe8f09e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1fe8f09e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8efbb60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1fe8fecce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f1fe8f056a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1fe8f056a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8eedd70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1fe8fea020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f1fe8f02ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1fe8f02ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ee2710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1fe8fe9400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f1fe8eccd60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1fe8eccd60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1fe8eab8a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1fe8fd51d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8b5be20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8b5be20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1fe8fd42b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f1fe8b577b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1fe8b577b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8fd49c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8b56ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8b56ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8fd6a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8b58ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8b58ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8fd6120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8b55160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8b55160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8fdbbe0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8b4d870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8b4d870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8fdd550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8b4a880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8b4a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8fdde00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8b490a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8b490a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8fdc710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8b51e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8b51e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8fd9020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8b50670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8b50670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1fe8fe65a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f1fe8b3c500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1fe8b3c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8fdec00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8b3dce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8b3dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8fd98e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8b4ee50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8b4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1fe8fd81c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f1fe8b50e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1fe8b50e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8fd8a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8b4fe50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8b4fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f1fe8fd3d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8b2aa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8b2aa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f1fe8fd3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8afc9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8afc9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe8fe3af0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe8acfb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8ff2de0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8aced20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8aced20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8ab4310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f1fe8fc8820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f1fe8fc9940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe8f527e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe8f49260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe8f49260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7d53450"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f49af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d53ca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe7d53450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7d4b3d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d53ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d44020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe7d4b3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe7d30ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1fe7d3e780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d4bc20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d4bc20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d2f5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe7d413d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe8f31080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe8f31080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe8f2dcd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7d2b710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7d359d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7d359d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7d2ada0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7d33120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7d33120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7d280c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7d32440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7d32440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1fe8f290f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1fe9b9d020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1fe8f07090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ef6710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1fe8f06390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ef11d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1fe8f50b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8eff020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1fe8f049b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ee7b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8efe2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1fe9e60020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8efade0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f1fe9e33200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ef5930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1fe9e62020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ef0480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1fe9e72020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8eea020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f1fe9e2b200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ee6de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1fe9e35200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ee1930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f1fe9e2d200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1fe8ecc150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1fe8ec4a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1fe8ecba20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1fe8ea68b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe8eb35d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f1fe9fe35a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f1fe8eb28f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f1fe9fd3a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8eb17a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1fe9e35200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe8ea8480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1fe969f710"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe8ea5480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1fe96a1660"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1fe8b57160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8b4b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8b430a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8b4a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe8b37500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe8b3a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8b56490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1fe8b40880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe8b3b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8b46880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1fe8b470a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8b5aa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e60920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe8b55e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1fe8b54490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8b3ec80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8b54be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8b3bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8b400a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8b4f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8b410a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8b43880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8b41880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe8b39ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe8b3ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1fe8b47880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8b420a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8b3cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe8b49880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8b37ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe8b58480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1fe8b51670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8b4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8b440a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8b44880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8b4b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8b522f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1fe8b51020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8b557b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8b3d500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1fe8b39500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8b460a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8b42880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1fe8b57e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe8b480a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1fe8b52940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8b48880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8b3e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8b369b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e5bbb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e59020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e59db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8e5d810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e58ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f1fe8e53020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe8deb770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1fe8deb770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe8de7280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1fe8e57400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8dc8c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8dc8c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7c3b770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8e54080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8dc78f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8dc78f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1fe7c3abe0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8e4b680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8b80020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8b80020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe7c39d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe8e53df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f1fe8e46120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1fe8de7280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe8de3b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe7c39d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8db2850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1fe7c3abe0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8db3020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe7c3b770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8db6430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7c3a440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7c31d90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7c31d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe8c5f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8db3020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8d57a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe7c392b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe8db36a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe8db36a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe8d55060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe8db0a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe7c385a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7c225d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8db46b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1fe8db1690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7c31140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe7c31140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8c60020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe8daf2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe7c2a760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe7c2a760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8c634d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8db46b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8d57250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8db2850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8d55c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8db6430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8d58470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe8d533e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe8db0a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1fe8d545b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1fe8db1690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe8d4e480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe8daf2a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1fe8d53a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe8d44020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe8d44020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1fe8d3ec70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe8d4ec20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f1fe8d4c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1fe8d3f5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8d35150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe8d40d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8d37780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1fe8d07bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1fe9e04580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1fe8d05b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f1fe9e00580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1fe8d03b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1fe9dfe580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1fe8d01b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f1fe9df8580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1fe8cffb20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f1fe9dfa580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f1fe8d0dd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1fe8c3e430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1fe7c29020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8c613f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1fe7c29630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1fe8c4a540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1fe8c4a540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1fe8c3e430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe7c2fd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe8d44020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7c2f5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c5fad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c5fad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c55c30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8c5e8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7c225d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe8c5f2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe8c56850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe8c56850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7bb96c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8c634d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8c5c060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8c60020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8c57a80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8c57a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe7bba850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8c613f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8c5c990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c55c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7bb8a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8c54570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8c5e8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c5ae50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c55c30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1fe8c5a060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe8d40d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1fe8c5a840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1fe8d3f5e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe8c55020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7bb9e40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7bb7400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8c54570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1fe7bb7bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe7bbd630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7bb5de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f1fe8c37250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1fe8d3ec70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1fe8c33d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1fe9e04580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1fe8c31cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1fe9dfe580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8b1bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1fe8b28da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8b1fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8b19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8b12e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8b19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe8b052f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe8b072f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8b26120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1fe8b0d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe8b082f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1fe8b1dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8b1cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8b13670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1fe8b15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8b18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8b29760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe8b22aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1fe8b21120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8b0ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8b21870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8b08ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8b26dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8b0ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8b1c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8b1d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8b28750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8b0fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8b11670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8b0e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe8b06ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe8b07ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1fe8b14670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8b11e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8b0aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe8b16670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8b05ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe8b28100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1fe8b1f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8b1b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8b13e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8b18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8b12670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8b1a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1fe8b27450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8b1ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8b20020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1fe8b20cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1fe8b0a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8b0bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8b22450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8b0b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1fe8b062f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8b14e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8b0f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1fe8b27aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8b26770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe8b16e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1fe8b20670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8b15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8b0de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8b047a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8aefc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1fe8af9da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8af2b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8aec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8ae5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8aece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe8ad82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe8adb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8af7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1fe8ae1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe8adc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1fe8af1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8af0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8ae6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1fe8ae9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8aeb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8afb760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe8af6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1fe8af5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8adfa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8af5870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8adcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8af7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8ae2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8af0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8af1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8af9750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8ae3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8ae4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8ae2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe8adaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe8adbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1fe8ae8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8ae4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8addad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe8aea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8ad8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe8af9100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1fe8af2370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8aef480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8ae6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8aebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8ae5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8aed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1fe8af8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8aede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8af3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1fe8af3cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1fe8add2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8adead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8af6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8ade2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1fe8ada2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8ae8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8ae3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1fe8af8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8af7770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe8aeae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1fe8af3670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8ae9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8ae1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8ad77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8ab1880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8aa6020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8aa6020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8aa0140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f1fe8a9cbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f1fe8aa5c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f1fe8aa5c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f1fe8a88150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f1fe8a9f530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a3ea20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f1fe8a8c540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f1fe8a8d590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f1fe8a8d590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8a3c9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a82950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a8aca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a8aca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a60a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f1fe8a889f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f1fe8a8c540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe8a4f020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1fe8a4a530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1fe8a4a530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe8a46e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe8a42020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1fea008060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8a3bc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1fe9e50020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1fe8a21990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1fe8a15900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f1fe8a23150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f1fe8a140f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f1fe8a14ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f4f220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1fe8a08500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f1fe8f50b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1fe8a01820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1fe8f09e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1fe8a00b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f1fe8f049b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1fe8a09880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f1fe8ecc150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1fe89fe020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8961c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe8961c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe89fed10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe89608f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe89608f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe89fb6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1fe895e2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe895e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1fe89fbde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f1fe895dcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1fe895dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe89fa530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe895c370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe895c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe89fac60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe895bd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe895bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe89fce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8955c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8955c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe89fd780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe893c7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe893c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe89fc550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe89412f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe89412f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe89f93e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8956480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8956480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe89f75e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8952e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8952e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe89f6020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8951670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8951670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1fe89f9e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f1fe89587b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1fe89587b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe89f59c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe893fad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe893fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe89f6890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1fe89402f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe89402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe89f5130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1fe8940ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe8940ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe89eed40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe8930df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe8930df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe8928550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe8a10d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe8a0fbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1fe8a0e950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe88a4550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe8a03be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe889c480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe889c480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe888e8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe89f16c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8954c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1fe895d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8957c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1fe894ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8951e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe893d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1fe8946670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1fe8956c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe894b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1fe894ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8950670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1fe895a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8944a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe895aac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8941ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe895b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8947e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8955480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe895e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8948e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8949670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8947670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1fe894d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8949e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8942ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe894f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe893dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1fe8957490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8954480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe894be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8950e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe894a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8952670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1fe895d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8958160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1fe8958e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1fe89422f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8943ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe895b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe89432f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1fe893f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe894de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8948670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe895c9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe894fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1fe894e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8946e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f1fe892c020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f1fe89277c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1fe8912150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1fe8926020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1fe8f09e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1fe8925380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f1fe8f07090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1fe89246b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f1fe8f06390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1fe8923a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1fe8ecba20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1fe89216e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe882c520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1fe882c520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8920530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8809480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8809480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe891fad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8826060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8826060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1fe891f3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f1fe8826d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1fe8826d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe891e330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe891d1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1fe891bd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe88a4550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe891db90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe8fffb80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe89163e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe881e840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe881e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8916cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe881d060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe881d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8917b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8825ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8825ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe89146d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe880ac60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe880ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe8915590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1fe880cc60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1fe880cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe8915e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1fe880b480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1fe880b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8913020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe880c480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe880c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe89138b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1fe882bc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1fe882bc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f1fe89069d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1fe8839020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1fe8f31080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1fe888c3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1fe883bcf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1fe888b6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1fe9c1ba80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1fe88340b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe881f620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1fe882a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8822620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8816840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1fe881d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8829cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1fe8811060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe880dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1fe8821620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8820620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8817060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1fe8819840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe881b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe882b2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe88266b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8810480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8825490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe88279c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8812840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8821e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8822e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe882a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8813840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8814060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8812060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe880a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1fe8818060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8814840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe880d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe881a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1fe8824e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8820e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8817840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe881b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8816060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe881e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1fe8829020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1fe88247b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1fe880fc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe880f480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8810c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1fe880bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8818840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8813060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1fe8829670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8827370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe881a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1fe8824160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8819060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8811840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8808160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f1fe87dc920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f1fe87d8940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1fe87e2990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1fe87d8080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe87bce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1fe87c0020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1fe87bbae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe87bd690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1fe87bd690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe8de7280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1fe87b98f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1fe87dea20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe87b8170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1fe879d200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1fe8799570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1fe87983f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1fe879d950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe8798a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1fe8760d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1fe87696b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1fe875fb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1fe8769020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe875d2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe875c170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1fe875cb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe870f410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f1fe8730db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f1fe8703800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe86fe580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1fe86fe580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1fe8de7280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe86e91c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe908a020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1fe7a53b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1fe7a46640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fe7a528b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe90ee2b0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe7a51590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90ed020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1fe85ae020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1fe7a50c10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1fe7a50c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe90e4350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe7a452e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe8613930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe7a44020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90ed020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1fe8613930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1fe85c74b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1fe85c6400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1fe90f2ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85c4060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90ed020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fe85c3720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe90ee2b0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1fe85c2480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1fe85c2c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1fe85a4020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1fe90ee2b0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85a4c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90ed020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SensorC" loc="8:SensorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.TimerMilliC" loc="44(SensorAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:../../../tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:../../../tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.TempSensor" loc="45(SensorAppC.TempSensor):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.TempSensor.SensirionSht11ReaderP" loc="45(SensorAppC.TempSensor.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor" loc="40(SensorAppC.LightSensor):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC" loc="47(SensorAppC.LightSensor.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC" loc="47(SensorAppC.LightSensor.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.AMSenderC" loc="47(SensorAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC" loc="47(SensorAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SensorAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.AMReceiverC" loc="43(SensorAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1fe9fc9230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1fe9fc95d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1fe9fc9980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1fe9fc9d00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1fe9fc80d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1fe9fc8440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1fe9fc87d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1fe9fc8b60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1fe9fc7020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1fe9f8b950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1fe9f8bd20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1fe9dce9f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1fe9dceda0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1fe9dcd1a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1fe9dcd550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1fe9dcd8c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1fe9bdb9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1fe9bdb9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1fe9b97120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1fe9b97120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1fe9b86a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1fe9b86a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1fe9b83290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1fe9b83290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1fe9b83680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1fe9b83680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1fe9b83e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1fe9b83e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1fe9b81260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1fe9b81a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1fe9b81a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1fe9ba7ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1fe9ba7ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1fe9b602d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1fe9b602d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1fe9b606c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1fe9b606c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1fe9b5f020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1fe9b5f020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1fe9b5f3f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe9b214f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe9b214f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe9af0d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe9af0d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1fe9aed0d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe9a9d1f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe9a9d1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1fe98879b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1fe987a910" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1fe985ed80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1fe936d850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f1fe93653b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f1fe9194660" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f1fe91949b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe91949b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe8a5e020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe8a5e020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1fe8a5e7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe8a5e7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1fe8639660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1fe8630360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1fe86290d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1fe860fc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1fe85aa330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7f1fea0af6f0" loc="31:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f1fea0af6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fea0afa70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fea0afc00"/>
        <function-ref name="start" scoped="" ref="0x7f1fea0afd90"/>
        <function-ref name="stop" scoped="" ref="0x7f1fea0bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1fea152560" loc="12:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1fea152560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1fea1528e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1fea0cd5f0" loc="28:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fea0cd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fea0cd970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fea0cdb00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fea0cdc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fea0cde20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fea127020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1fea0b35a0" loc="30:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fea0b35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fea0b3920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fea0b3ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fea0b3c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fea0b3dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fea0da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumidityRead" ref="0x7f1fea12bd00" loc="24:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityRead" scoped="" ref="0x7f1fea12bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fea12a940"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fea12adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f1fea0abdf0" loc="32:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fea0abdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fea0b4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7f1fea132d60" loc="19:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f1fea132d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fea157770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f1fea1560d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f1fea136e00"/>
        <function-ref name="enable" scoped="" ref="0x7f1fea136980"/>
        <function-ref name="notify" scoped="" ref="0x7f1fea134300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7f1fea135500" loc="18:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f1fea135500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fea157770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f1fea1560d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fea137130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fea1388d0" loc="14:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fea1388d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fea138c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fea138de0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fea144020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fea1441b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fea144340"/>
        <function-ref name="get" scoped="" ref="0x7f1fea1444d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fea144660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fea144ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1fea1447f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fea144980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fea144b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7f1fea12db70" loc="22:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x7f1fea12db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fea12f790"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fea12fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1fea0be4e0" loc="29:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fea0be4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fea0be860"/>
        <function-ref name="source" scoped="" ref="0x7f1fea0be9f0"/>
        <function-ref name="address" scoped="" ref="0x7f1fea0beb80"/>
        <function-ref name="destination" scoped="" ref="0x7f1fea0bed10"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fea126020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fea1261b0"/>
        <function-ref name="type" scoped="" ref="0x7f1fea126340"/>
        <function-ref name="setType" scoped="" ref="0x7f1fea1264d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fea126660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fea1267f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fea126980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x7f1fea12c420" loc="23:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightRead" scoped="" ref="0x7f1fea12c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fea12b090"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fea12b510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fea148770" loc="13:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fea148770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fea146c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1fea1531e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fea146020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fea153ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fea145590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fea145110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fea153660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fea154390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fea146630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fea154860"/>
        <function-ref name="stop" scoped="" ref="0x7f1fea154d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1fea078760" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fea078760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea078ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1fea07b2d0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1fea07b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1fea07b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fea07a640" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fea07a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea07a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1fea073900" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1fea073900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea073c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fea076ab0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fea076ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea076e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f1fea073220" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1fea073220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea0735a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f1fea072020" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f1fea072020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea0723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fea075c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fea075c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea06c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f1fea055020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1fea055020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea0553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1fea04b6c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1fea04b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1fea051660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1fea04bbd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1fea04bd60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1fea051020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1fea04ba40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1fea0511b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1fea051340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1fea0514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fea052020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fea052020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea0523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1fea03b3d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1fea03b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1fea03a340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1fea03b8e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1fea03ba70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1fea03bc00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1fea03b750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1fea03bd90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1fea03a020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1fea03a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1fea03a680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1fea03a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1fea03aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fea03dcb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fea03dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea03b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f1fe9ff75a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f1fe9ff75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9ff7920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9ff7ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9ff7c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9ff7dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9ff6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9ff61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9ff6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9ff64d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9ff6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f1fe9fe4020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f1fe9fe4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fe43a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fe4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fe46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fe4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fe49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fe4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fe4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fe3020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fe31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1fe9fed700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1fe9fed700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9feda80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fedc10"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fedda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f1fe9fd1a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f1fe9fd1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fd0020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fd01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fd0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fd04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fd0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f1fe9ff5aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1fe9ff5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9ff5e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9ff3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9ff31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9ff3340"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ff34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1fe9fd7020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1fe9fd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fd7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fd76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fd7850"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fd79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1fe9fcea20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1fe9fcea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fceda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fcd020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fcd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fcd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fcd4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fcd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f1fe9fdf5a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f1fe9fdf5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fdf920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fdfab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fdfc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fdfdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fde020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fde1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fde340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fde4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fde660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1fe9ff8b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1fe9ff8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fff020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fff1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fff340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fff4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fff660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fff7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fff980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fffb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fffca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f1fe9fd3a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f1fe9fd3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fd2020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fd21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fd2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fd24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fd2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f1fe9fda3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f1fe9fda3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fda760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fda8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fdaa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fdac10"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fdada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f1fe9fe35a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f1fe9fe35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fe3a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fe3bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fe3d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fe2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fe21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fe2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fe24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fe2660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fe27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1fe9fec700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1fe9fec700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9feca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fecc10"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fecda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fe6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fe61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fe6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f1fe9fd0a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f1fe9fd0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fcf020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fcf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fcf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fcf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fcf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f1fe9fe2be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f1fe9fe2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fe1020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fe11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fe1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fe14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fe1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fe17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fe1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fe1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fe1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f1fe9ff3890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f1fe9ff3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9ff3c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9ff3da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fee020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fee1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1fea008060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1fea008060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fea0083e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fea008570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fea008700"/>
        <function-ref name="get" scoped="" ref="0x7f1fea008890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fea008a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fea008bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fea008d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fea007020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fea0071b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fea007340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fea0074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1fe9fd7da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1fe9fd7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd6180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fd6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fd64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fd6630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fd67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f1fe9ffe0c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1fe9ffe0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9ffe440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9ffe5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9ffe760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9ffe8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9ffea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9ffec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9ffeda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9ff7020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9ff71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1fe9fdea50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1fe9fdea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fdedd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fdd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fdd1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fdd340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fdd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fdd660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fdd7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fdd980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fddb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f1fe9fe76d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f1fe9fe76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fe7a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fe7be0"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fe7d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fed020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fed1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f1fe9fd2a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f1fe9fd2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fd1020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fd11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fd1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fd14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f1fe9fefcf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1fe9fefcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9ff50a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9ff5230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9ff53c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9ff5550"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ff56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f1fe9fd81f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f1fe9fd81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd8570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fd8700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fd8890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fd8a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fd8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f1fe9fcfa20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f1fe9fcfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fcfda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fce020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fce1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fce4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f1fe9fe00c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f1fe9fe00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fe0440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fe05d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fe0760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fe08f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fe0a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fe0c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fe0da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fdf020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f1fe9fe66c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f1fe9fe66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9fe6a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9fe6bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fe6d60"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9fe5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fe51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fe5340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9fe54d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fe5660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9fe57f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9fe5980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9fe5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1fe9fd6b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1fe9fd6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd5020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fd51b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fd5340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fd54d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fd5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f1fe9fd4a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f1fe9fd4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9fd3020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9fd31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9fd3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9fd34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9fd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1fe9fd5a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1fe9fd5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fd4020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fd41b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fd4340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fd44d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1fe9fdb570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1fe9fdb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9fdb8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9fdba80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9fdbc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9fdbda0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9fda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1fe9fdc020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1fe9fdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9fdc3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9fdc530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9fdc6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9fdc850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9fdc9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9fdcb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9fdcd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9fdb020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9fdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1fe9f952f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1fe9f952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f95670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1fe9f96c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1fe9f96c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1fe9f95940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1fe9f95940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f95cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1fe9f965b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f965b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f96950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe9f98c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f98c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f970a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f97230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f973c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f97550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f976e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f97870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f97a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f97b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f97d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f96020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1fe9f8d2f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1fe9f8d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f8d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1fe9f8fc20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1fe9f8fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f8d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1fe9f8d940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1fe9f8d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f8dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1fe9f8f5b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f8f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe9f91c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f91c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f900a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f90230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f903c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f90550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f906e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f90870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f90a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f90b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f90d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f8f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f41a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f41a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f41e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f40020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f401b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f40340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f404d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f899d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f899d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f89d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f42020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f421b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f42340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f424d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f42660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f427f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f42980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f42b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f3e020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f3e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f42de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f42de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f41180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f41310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f414a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f41630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f417c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f40930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f40930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f40cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f40e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f3f020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f3f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f3f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f3f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f3f660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f3f7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f3f980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f3fb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f3fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f39160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f39160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f394e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f39670"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f39800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f39990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f39b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f39cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f3b020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f3b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f3b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f3b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f3b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f3b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f3bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f3bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f3a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f377a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f37b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f3a480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f3a800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f3a990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f3ab20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f3acb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f3ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f38020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f383a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f38530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f386c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f38850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f389e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f38b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f38d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f37020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f371b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f37340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f317a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f317a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f31b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f31cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f31e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f30020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f301b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f346d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f346d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f34a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f34be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f34d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f33020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f331b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f33340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f334d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f33660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f2fc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f2fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f33ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f33ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f33e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f31020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f311b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f31340"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f314d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f30610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f30610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f30990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f30b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f30cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f30e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f2f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f2f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f2f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f2f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f2f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f2f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f2f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f2acb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f2acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f290a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f29230"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f293c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f29550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f296e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f29870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f2cb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f2cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f2b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f2b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f2b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f2b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f2b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f2b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f2b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f2bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f2bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f272f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f27670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f2a020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f2a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f2a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f2a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f2a850"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f2a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f29b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f29b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f28020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f281b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f28340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f284d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f28660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f287f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f28980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f28b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f28ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f28e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f212f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f21670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f21800"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f21990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f21b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f21cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f21e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f24220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f24220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f245a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f24730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f248c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f24a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f24be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f24d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f23020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f231b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f1f7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f1f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f1fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f23610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f23610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f23990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f23b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f23cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f23e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f20160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f20160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f204e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f20670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f20800"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f20990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f20b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f20cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f20e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f1f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f1f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f1f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f1a7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f1a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f1ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f1acb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f1ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f19020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f191b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f1c6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f1c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f1ca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f1cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f1cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f1b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f1b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f1b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f1b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f1b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f1b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f18c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f1bac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f1bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f1be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f1a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f1a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f1a340"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f19610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f19610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f19990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f19b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f19cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f19e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f18020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f181b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f18340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f184d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f18660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f187f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f18980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f13cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f13cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f110a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f11230"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f113c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f11550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f116e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f11870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f15b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f15b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f14020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f141b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f14340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f144d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f14660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f147f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f14980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f14b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f14ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f0f2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f0f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f0f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f13020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f133a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f13530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f136c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f13850"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f139e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f11b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f11b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f10020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f101b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f10340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f104d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f10660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f107f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f10980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f10b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f10ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f10e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f0a2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f0a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f0a800"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f0a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f0ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f0acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f0ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f0c220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f0c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f0c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f0c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f0c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f0ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f0cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f0cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f0b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f0b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f0b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f087a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f08b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f0b610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f0b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f0b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f0bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f0bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f0be40"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f0a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f09160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f09160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f094e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f09670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f09800"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f09990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f09b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f09cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f09e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f08020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f081b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f08340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9f037a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9f037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f03b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9f03cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9f03e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f01020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f011b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9f01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9f056d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9f056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9f05a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9f05be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f05d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9f04020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9f041b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f04340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9f044d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9f04660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9f047f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9f00c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9f00c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9eff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9f04ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9f04ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9f04e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9f03020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9f031b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9f03340"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9f034d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9f01610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9f01610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9f01990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9f01b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9f01cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9f01e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9f00020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9f001b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9f00340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9f004d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9f00660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9f007f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9f00980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe9efbcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe9efbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9efa0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe9efa230"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe9efa3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9efa550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9efa6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe9efa870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1fe9efdb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1fe9efdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9efc020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9efc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9efc340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9efc4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9efc660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9efc7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9efc980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9efcb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9efcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1fe9ef82f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1fe9ef82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ef8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1fe9efb020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1fe9efb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9efb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9efb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9efb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9efb850"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9efb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe9efab40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9efab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9ef9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9ef91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9ef9340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ef94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9ef9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9ef97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9ef9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9ef9b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9ef9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9ef9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9ef8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f1fe9ef2240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1fe9ef2240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ef25c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1fe9ef6a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1fe9ef6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ef6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f1fe9ef3260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1fe9ef3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ef35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f1fe9ef39f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1fe9ef39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9ef3d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1fea27b4c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1fea27b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1fea27b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1fea58f3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1fea58f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1fea58f730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1fea58f8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1fea58fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1fea3b7bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f1fea3b7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1fea4f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f1fea053b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1fea053b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1fe9ebdb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1fe9ebd1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1fe9ebd340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1fe9ebd4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1fe9ebd020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1fe9ebd660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1fe9ebd7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1fe9ebd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1fe9eaedc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1fe9eaedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9ead180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1fe9ebe590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1fe9ebe590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1fe9ebe910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1fe9eae6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1fe9eae6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9eaea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1fe9ebec00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1fe9ebec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9eae020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1fe9eae1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1fe9eae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1fea667410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea667410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fea667790"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fea667920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1fea5f83a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1fea5f83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea5f8720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1fea5f88b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1fea5f8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1fea1a1040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1fea1a1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fea1a13c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fea1a1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1fea19d490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1fea19d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1fea19d810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1fea19d9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1fea19db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1fea1a3140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1fea1a3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fea1a34c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1fea1a3650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1fea1a37e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1fea07c590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fea07c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fea07c910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fea07caa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fea07cc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fea07cdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe9ea3020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ea31b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe9ea3340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe9ea3980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ea34d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe9ea3660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe9ea37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1fe9e977b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1fe9e977b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e97b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e97cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e97e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e9c020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e9c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e9c340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e9c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e9c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe9ea28d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe9ea28d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9ea2c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1fe9e9c980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1fe9e9c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e9cd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e9b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e9b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e9b340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e9b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e9b660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e9b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e9b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1fe9e9f020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe9e9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe9e9f3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe9e9f530"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe9e9f6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe9e9f850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe9e9f9e0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e9fb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe9e9fd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe9e9e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e9e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe9e9e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe9e9e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1fe9e9bca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1fe9e9bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e95230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e95550"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e95870"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e95a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e95b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1fe9e7a360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1fe9e7a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e7a6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e7a870"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e7aa00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e7ab90"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e7ad20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e79020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1fe9e796a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1fe9e796a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e79a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e79bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e79d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e78020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e78340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e784d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e78660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1fe9e77c40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe9e77c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9e76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1fe9e789c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1fe9e789c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e78d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e77340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e77660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1fe9e60020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1fe9e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e603a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e60530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e606c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e60850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e60b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e60d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e5f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e5f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e5f340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e5f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e5f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e5f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e5fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e5fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1fe9e4c020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1fe9e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e4c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e4c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e4c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e4c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e4cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e4cd00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e4b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e4b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e4b340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e4b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e4b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e4b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e4ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e4bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f1fe9e02560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1fe9e02560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e028e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e02a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e02c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e02d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e01020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e01340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e014d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e01660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e017f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e01980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e01b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e01ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e00020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1fe9dde570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1fe9dde570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dde8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9ddea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9ddec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ddeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ddd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ddd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ddd340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ddd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ddd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ddd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ddd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dddb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dddca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9ddc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9ddc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f1fe9e00580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f1fe9e00580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e00900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e00a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e00c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e00db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dff340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dff660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dff7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dff980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dffb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dffca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dfe020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dfe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1fe9e48020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1fe9e48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e48530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e486c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e48850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e489e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e48b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e48d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e47340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e47660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e47a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e47c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1fe9e33200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1fe9e33200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e33580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e33710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e338a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e33a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e33bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e33d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e32020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e32340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e324d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e32660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e32980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e32c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e32da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1fe9e1f200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1fe9e1f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e1f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e1f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e1f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e1fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e1fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e1fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e1e020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e1e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e1e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e1e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e1e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e1e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e1e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e1ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e1eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1fe9e0f200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1fe9e0f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e0f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e0f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e0f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e0fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e0fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e0fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e0e020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e0e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e0e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e0e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e0e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e0e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e0e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e0ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e0eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f1fe9dfa580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f1fe9dfa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dfa900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9dfaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9dfac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9dfadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9df9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9df91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9df9340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9df94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9df9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9df97f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9df9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9df9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9df9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9df8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9df81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1fe9dea570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1fe9dea570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dea8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9deaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9deac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9deada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9de9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9de91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9de9340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9de94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9de9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9de97f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9de9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9de9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9de9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9de8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9de81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f1fe9dd5580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f1fe9dd5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dd5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9dd5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9dd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9dd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dd4340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dd44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dd4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dd47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dd4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dd4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dd4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dd3020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1fe9e5a020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1fe9e5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e5a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e5a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e5a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e5a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e5a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e5ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e5ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e59020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e59340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e59660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e59a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e59c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f1fe9df8580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f1fe9df8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9df8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9df8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9df8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9df8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9df7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9df71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9df7340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9df74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9df7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9df77f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9df7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9df7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9df7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9df6020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9df61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1fe9e56020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1fe9e56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e56530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e566c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e56850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e56b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e56d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e55340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e55a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1fe9e42020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1fe9e42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e42530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e426c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e42850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e42b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e42d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e41020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e41340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e41660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e41a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e41c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1fe9e2d200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1fe9e2d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e2d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e2d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e2d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e2da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e2dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e2dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e2c020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e2c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e2c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e2c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e2c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e2c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e2c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e2cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e2cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1fe9e19200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1fe9e19200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e19580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e19710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e198a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e19a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e19bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e19d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e18020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e181b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e18340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e184d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e18660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e187f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e18980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e18c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e18da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1fe9e09200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1fe9e09200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e09580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e09710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e098a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e09a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e09bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e09d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e08020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e081b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e08340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e084d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e08660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e087f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e08980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e08c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e08da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1fe9e64020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1fe9e64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e643a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e64530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e646c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e64850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e649e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e64b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e64d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e63340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e63660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e63a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e63c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1fe9e50020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1fe9e50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e504a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e50630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e507c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e50950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e50ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e50c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e50e00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e4f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e4f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e4f340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e4f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e4f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e4f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e4fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e4fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1fe9e3c020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1fe9e3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e3c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e3c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e3c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e3c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e3c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e3cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e3cd00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e3b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e3b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e3b340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e3b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e3b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e3b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e3ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e3bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f1fe9e04580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f1fe9e04580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e04900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e04a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e04c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e04db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e03020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e031b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e03340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e034d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e03660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e037f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e03980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e03b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e03ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e02020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1fe9de4570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1fe9de4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9de48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9de4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9de4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9de4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9de3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9de31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9de3340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9de34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9de3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9de37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9de3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9de3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9de3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9de2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9de21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f1fe9dd8570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f1fe9dd8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dd88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9dd8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9dd8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9dd8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dd6340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dd64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dd6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dd67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dd6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dd6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dd6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f1fe9df0580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f1fe9df0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9df0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9df0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9df0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9df0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9def020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9def1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9def340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9def4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9def660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9def7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9def980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9defb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9defca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dee020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1fe9e38020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1fe9e38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e385a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e38730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e388c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e38a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e38be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e38d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e37020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e37340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e374d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e37660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e377f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e37980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e37c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e37da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1fe9e23200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1fe9e23200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e23580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e23710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e238a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e23a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e23bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e23d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e22020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e221b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e22340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e224d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e22660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e227f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e22980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e22c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e22da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1fe9e13200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1fe9e13200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e13580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e13710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e138a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e13a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e13bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e13d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e12020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e12340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e124d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e12660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e12980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e12c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e12da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1fe9de2570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1fe9de2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9de28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9de2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9de2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9de2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9de1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9de11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9de1340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9de14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9de1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9de17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9de1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9de1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9de1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9de0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9de01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f1fe9df6570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f1fe9df6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9df68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9df6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9df6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9df6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9df5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9df51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9df5340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9df54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9df5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9df57f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9df5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9df5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9df5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9df4020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9df41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1fe9e5e020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1fe9e5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e5e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e5e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e5e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e5e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e5e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e5eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e5ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e5d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e5d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e5d340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e5d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e5d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e5d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e5da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e5dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1fe9e4a020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1fe9e4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e4a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e4a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e4a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e4a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e4a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e4ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e4ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e49020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e49340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e49660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e49a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e49c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1fe9e17200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1fe9e17200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e17580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e17710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e178a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e17a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e17bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e17d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e16020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e161b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e16340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e164d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e16660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e167f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e16980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e16c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e16da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1fe9e46020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1fe9e46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e46530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e466c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e46850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e469e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e46b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e46d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e45340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e45660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e45a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e45c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1fe9e31200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1fe9e31200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e31580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e31710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e318a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e31a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e31bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e31d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e30020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e301b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e30340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e304d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e30660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e307f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e30980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e30c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1fe9e1d200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1fe9e1d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e1d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e1d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e1d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e1da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e1dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e1dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e1c020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e1c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e1c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e1c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e1c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e1c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e1c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e1cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e1cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1fe9e0d200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1fe9e0d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e0d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e0d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e0d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e0da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e0dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e0dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e0c020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e0c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e0c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e0c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e0c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e0c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e0c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e0cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f1fe9df2580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f1fe9df2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9df2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9df2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9df2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9df2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9df1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9df11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9df1340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9df14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9df1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9df17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9df1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9df1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9df1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9df0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9df01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1fe9e72020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1fe9e72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e72530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e726c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e72850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e72d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e71340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1fe9e54020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1fe9e54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e54530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e546c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e54850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e54b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e54d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e53020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e53340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e53660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e53a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e53c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1fe9e40020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1fe9e40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e40530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e406c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e40850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e40b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e40d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e3f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e3f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e3f340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e3f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e3f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e3f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e3fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e3fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1fe9e2b200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1fe9e2b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e2b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e2b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e2b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e2ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e2bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e2bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e2a020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e2a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e2a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e2a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e2a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e2a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e2a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e2ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e2ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f1fe9dee580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f1fe9dee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dee900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9deea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9deec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9deedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ded020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ded1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ded340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ded4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ded660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ded7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ded980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dedb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dedca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dec020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1fe9de8570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1fe9de8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9de88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9de8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9de8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9de8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9de7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9de71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9de7340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9de74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9de7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9de77f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9de7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9de7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9de7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9de6020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9de61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1fe9ddc570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1fe9ddc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9ddc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9ddca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9ddcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ddcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ddb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ddb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ddb340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ddb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ddb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ddb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ddb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9ddbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9ddbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dda020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1fe9e27200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1fe9e27200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e27580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e27710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e278a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e27a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e27bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e27d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e26020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e26340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e264d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e26660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e26980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e26c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e26da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f1fe9dec580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f1fe9dec580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dec900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9deca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9decc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9decdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9deb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9deb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9deb340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9deb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9deb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9deb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9deb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9debb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9debca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dea020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1fe9e62020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1fe9e62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e62530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e626c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e62850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e62b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e62d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e61020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e61340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e61660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e61a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e61c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1fe9e4e020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1fe9e4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e4e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e4e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e4e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e4e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e4e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e4eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e4ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e4d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e4d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e4d340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e4d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e4d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e4d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e4da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e4dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1fe9e3a020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1fe9e3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e3a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e3a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e3a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e3a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e3ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e3ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e39020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e39340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e39660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e39a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e39c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f1fe9df4580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f1fe9df4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9df4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9df4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9df4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9df4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9df3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9df31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9df3340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9df34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9df3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9df37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9df3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9df3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9df3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9df2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9df21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1fe9de0570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1fe9de0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9de08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9de0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9de0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9de0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ddf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ddf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ddf340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ddf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ddf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ddf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ddf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9ddfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9ddfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dde020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1fe9e35200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1fe9e35200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e35580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e35710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e358a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e35a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e35bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e35d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e34020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e341b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e34340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e344d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e34660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e347f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e34980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e34c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e34da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1fe9e21200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1fe9e21200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e21580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e21710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e218a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e21a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e21bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e21d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e20020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e201b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e20340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e204d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e20660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e207f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e20980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e20c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e20da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1fe9e11200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1fe9e11200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e11580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e11710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e118a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e11a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e11bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e11d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e10020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e10340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e104d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e10660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e10980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e10c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e10da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1fe9e5c020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1fe9e5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e5c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e5c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e5c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e5c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e5c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e5cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e5cd00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e5b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e5b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e5b340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e5b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e5b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e5b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e5ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e5bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1fe9e15200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1fe9e15200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e15580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e15710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e158a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e15a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e15bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e15d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e14020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e141b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e14340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e144d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e14660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e147f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e14980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e14c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e14da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1fe9e58020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1fe9e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e58530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e58850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e589e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e58b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e58d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e57020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e57340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e57660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e57a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e57c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1fe9e44020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1fe9e44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e44530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e446c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e44850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e449e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e44b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e44d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e43020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e43340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e43660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e43a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e43c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1fe9e2f200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1fe9e2f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e2f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e2f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e2f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e2fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e2fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e2fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e2e020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e2e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e2e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e2e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e2e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e2e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e2e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e2ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1fe9e1b200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1fe9e1b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e1b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e1b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e1b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e1ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e1bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e1bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e1a020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e1a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e1a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e1a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e1a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e1a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e1a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e1ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e1ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1fe9e0b200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1fe9e0b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e0b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e0b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e0b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e0ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e0bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e0bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e0a020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e0a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e0a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e0a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e0a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e0a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e0a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e0ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e0ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1fe9e67020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1fe9e67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e67530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e67850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e67b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e67d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e66020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e66340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e66660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e66a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e66c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1fe9e52020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1fe9e52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e523a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e52530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e526c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e52850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e529e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e52b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e52d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e51020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e51340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e51660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e51a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e51c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1fe9e3e020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1fe9e3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e3e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e3e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e3e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e3e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e3e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e3eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e3ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e3d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e3d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e3d340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e3d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e3d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e3d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e3da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e3dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1fe9e29200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1fe9e29200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e29580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e29710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e298a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e29a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e29bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e29d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e28020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e28340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e284d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e28660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e28980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e28c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e28da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f1fe9dfc560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1fe9dfc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dfc8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9dfca70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9dfcc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9dfcd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dfb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dfb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dfb340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dfb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dfb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dfb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dfb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dfbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dfbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dfa020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1fe9de6570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1fe9de6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9de68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9de6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9de6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9de6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9de5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9de51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9de5340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9de54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9de5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9de57f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9de5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9de5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9de5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9de4020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9de41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f1fe9dfe580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f1fe9dfe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dfe900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9dfea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9dfec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9dfedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dfd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dfd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dfd340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dfd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dfd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dfd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dfd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dfdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dfdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dfc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dfc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1fe9e25200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1fe9e25200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e25580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e25710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e258a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e25a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e25bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e25d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e24020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e24340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e244d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e24660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e247f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e24980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e24c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e24da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f1fe9dda570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f1fe9dda570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dda8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9ddaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9ddac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ddada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dd9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dd91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dd9340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dd94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dd9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dd97f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dd9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dd9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dd9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dd8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f1fe9dd3580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f1fe9dd3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9dd3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9dd3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9dd3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9dd3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9dd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9dd21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9dd2340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9dd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9dd2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9dd27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9dd2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9dd2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9dd2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9dd1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9dd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f1fe9e061f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f1fe9e061f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9e06970"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9e06b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9e06c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9e06e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9e05020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9e051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9e05340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9e054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9e05660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9e057f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9e05980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9e05b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9e05ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9e04020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9e041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9da86d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9da86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9da8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9da8be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9da8d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9da7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9da71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9da7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9da74d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9da7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9da77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9da7980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9da7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9da7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9da7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9da6120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9da62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9da3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9da3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9da3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9da3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9da37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9da3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9da3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9da3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9da3de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9da2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9da21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9da2340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9da24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9da2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9da27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9da2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9da2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d9fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d9fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d9e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d9e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d9e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d9e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d9e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d9e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d9ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d9ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d9ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d9d020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d9d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d9d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d9d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d9d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d9d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d9a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d9a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d9aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d9ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d9ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d99020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d991b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d99340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d994d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d99660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d99980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d99b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d99ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d99e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d98120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d95100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d95100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d95480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d95610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d957a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d95930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d95ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d95c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d95de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d94020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d94340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d94660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d94a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d94c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d91d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d91d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d90270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d90400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d90590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d90720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d90a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d90bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d90d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d8f020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d8f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d8f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d8f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d8f760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d8f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d8b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d8b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d8bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d8bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d8bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d8a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d8a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d8a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d8a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d8a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d8a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d8a980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d8ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d8aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d8ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d89120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d86100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d86100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d86480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d86610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d867a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d86930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d86ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d86c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d86de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d85020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d85340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d85660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d85a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d85c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d82d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d82d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d810e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d81270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d81400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d81590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d81720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d818b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d81a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d81bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d81d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d80020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d80340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d80760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d7d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d7d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d7dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d7dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d7dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d7c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d7c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d7c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d7c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d7c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d7c980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d7cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d7cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d7ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d7b120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d7b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d78100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d78100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d78480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d78610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d787a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d78930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d78ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d78c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d78de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d77020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d77340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d77660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d77a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d77c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d74d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d74d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d730e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d73270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d73400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d73590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d73720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d738b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d73a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d73bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d73d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d72020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d72340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d72760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d6f860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d6f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d6fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d6fd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d6e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d6e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d6e660"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d6e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d6e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d6eb10"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d6eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d6ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d6d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d6d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d6d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d6a270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d6a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d6a5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d6a780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d6a910"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d6aaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d6ac30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d6adc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d68020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d68340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d684d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d68660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d687f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d68980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d68c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d68da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d65d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d65d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d64270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d64400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d64590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d64720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d648b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d64a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d64bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d64d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d63020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d63340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d63760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d60740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d60740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d60ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d60c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d60de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d5f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d5f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d5f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d5f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d5f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d5f980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d5fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d5fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d5fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d5e120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d5b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d5b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d5b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d5b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d5b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d5b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d5bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d5bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d5bde0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d5a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d5a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d5a340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d5a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d5a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d5a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d5aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d57d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d57d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d560e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d56270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d56400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d56590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d56720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d568b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d56a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d56bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d56d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d55020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d55340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d55760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d52740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d52740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d52ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d52c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d52de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d51020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d51340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d514d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d51660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d517f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d51980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d51b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d51ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d51e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d50120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d4d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d4d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d4d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d4d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d4d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d4d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d4dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d4dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d4dde0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d4c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d4c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d4c340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d4c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d4c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d4c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d4ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d4cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d49d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d49d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d480e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d48270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d48400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d48590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d48720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d488b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d48a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d48bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d48d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d47020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d47340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d47760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d44740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d44740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d44ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d44c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d44de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d42020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d42340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d424d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d42660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d42980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d42b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d42ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d42e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d41120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d3e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d3e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d3e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d3e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d3e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d3e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d3eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d3ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d3ede0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d3d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d3d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d3d340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d3d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d3d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d3d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d3da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d3dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d3ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d3ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d39270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d39400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d39590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d39720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d398b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d39a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d39bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d39d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d38020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d38340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d38760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d35a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d35a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d35de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d34020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d341b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d34340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d344d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d34660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d347f0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d34980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d34b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d34ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d34e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d33020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d331b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d33440"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d335d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d30460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d30460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d307e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d30970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d30b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d30c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d30e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d2f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d2f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d2f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d2f660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d2f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d2f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d2fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d2fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d2ce00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d2ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d2b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d2b350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d2b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d2b670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d2b800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d2b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d2bb20"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d2bcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d2be40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d2a020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d2a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d2a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d2a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d2a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d2a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d27740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d27740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d27ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d27c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d27de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d26020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d26340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d264d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d26660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d26980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d26b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d26ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d26e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d25120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d22100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d22100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d22480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d22610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d227a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d22930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d22ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d22c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d22de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d21340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d21660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d21a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d21c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d1dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d1dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d1c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d1c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d1c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d1c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d1c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d1c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d1ca40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d1cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d1cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d1b020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d1b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d1b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d1b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d1b760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d18740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d18740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d18ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d18c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d18de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d17020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d171b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d17340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d174d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d17660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d177f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d17980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d17b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d17ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d17e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d16120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d13100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d13100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d13480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d13610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d137a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d13930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d13ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d13c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d13de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d12020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d12340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d12660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d12a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d12c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d0fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d0fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d0e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d0e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d0e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d0e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d0e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d0e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d0ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d0ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d0ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d0d020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d0d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d0d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d0d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d0d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d0d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d0a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d0a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d0aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d0ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d0ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d09020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d094d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d09660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d09980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d09b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d09ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d09e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d08120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d05100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d05480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d05610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d057a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d05930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d05ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d05c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d05de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d04020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9d04340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9d044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9d04660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9d047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9d04a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9d04c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9d01d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9d01d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9d000e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9d00270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9d00400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9d00590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9d00720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9d008b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9d00a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9d00bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9d00d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cff020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cff760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cfc740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cfc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cfcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cfcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cfcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cfa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cfa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cfa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cfa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cfa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cfa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cfa980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cfab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cfaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cfae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cf9120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cf92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cf6100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cf6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cf6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cf6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cf67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cf6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cf6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cf6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cf6de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cf5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cf51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cf5340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cf54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cf5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cf57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cf5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cf5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cf2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cf2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cf10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cf1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cf1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cf1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cf1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cf18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cf1a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cf1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cf1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cf0020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cf01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cf0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cf04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cf0760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cf08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9ced740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9ced740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cedac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cedc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cedde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cec1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cec4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cec660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cec980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cecb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cecca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cece30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9ceb120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9ceb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9ce8100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9ce8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9ce8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9ce8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9ce87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ce8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ce8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ce8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ce8de0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ce7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ce71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ce7340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ce74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9ce7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9ce77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9ce7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9ce7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9ce4d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9ce4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9ce30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9ce3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9ce3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ce3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ce3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ce38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ce3a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ce3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ce3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ce2020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ce21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9ce2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9ce24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9ce2760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9ce28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cdf740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cdf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cdfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cdfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cdfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cde020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cde1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cde340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cde4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cde660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cde7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cde980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cdeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cdeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cdee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cdd120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cdd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cda100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cda100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cda480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cda610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cda7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cda930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cdaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cdac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cdade0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cd9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cd91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cd9340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cd94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cd9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cd97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cd9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cd9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cd6d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cd6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cd40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cd4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cd4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cd4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cd4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cd48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cd4a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cd4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cd4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cd3020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cd31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cd3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cd34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cd3760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cd38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cd0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cd0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cd0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cd0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cd0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ccf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ccf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ccf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ccf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9ccf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9ccf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9ccf980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9ccfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9ccfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9ccfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cce120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9ccb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9ccb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9ccb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9ccb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9ccb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9ccb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9ccbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9ccbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9ccbde0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cca340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9ccaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9ccac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1fe9cc7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1fe9cc7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9cc60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9cc6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9cc6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9cc6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9cc6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9cc68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9cc6a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9cc6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9cc6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9cc5020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9cc51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9cc5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9cc54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9cc5760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9cc58f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe9c4e610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe9c4e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9c4e990"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9c4eb20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9c4ecb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9c4ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9c4d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9c4d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9c4d340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9c4d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9c4d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9c4d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9c4d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9c4db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9c4dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9c4c020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9c4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe9c5f440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9c5f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9c5f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9c5f950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9c5fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9c5fc70"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9c5fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9c4e020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9c4e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9c4e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe9c492f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe9c492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9c49670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9c49800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9c49990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9c49b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9c49cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9c49e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9c48020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9c481b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9c48340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9c484d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9c48660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9c487f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9c48980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9c48c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9c48da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe9c4a020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9c4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9c4a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9c4a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9c4a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9c4a850"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9c4a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9c4ab70"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9c4ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9c49020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe9c44de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe9c44de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9c43180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9c43310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9c434a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9c43630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9c437c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9c43950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9c43ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9c43c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9c43e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9c42020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9c421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9c42340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9c424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9c42760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9c428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe9c46b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9c46b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9c44020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9c441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9c44340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9c444d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9c44660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9c447f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9c44980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9c44b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe9c36640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9c36640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9a89c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9a8a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9a89020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9a8aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9a88590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9a88110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9a8a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9a8c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9a89630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9a8c860"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9a8cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1fe9c2d610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9c29c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9c2b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9c29020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9c2bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9c28590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9c28110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9c2b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9c2c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9c29630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9c2c860"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9c2cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1fe9c231d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1fe9c231d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9c20630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9c22c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9c219d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9c21550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9c1e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9c20ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9c210d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9c23dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9c20020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9c222e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9c227b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1fe9c1ba80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1fe9c1ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9c1d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe9c25400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe9c25400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9c25780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe9b28020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe9b28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9b25870"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9b27840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe9b25220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9b27d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe9b25d30"/>
        <function-ref name="start" scoped="" ref="0x7f1fe9b28e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9b27380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe9b29760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe9b29760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9b29ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe80d0bd0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe80d0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe80cc4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe80ce4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe80cee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe80ce9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe80cc9a0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe80cfa80"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe80ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe80d0380" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe80d0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe80d0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1fe80b60c0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe80b60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe80b6440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe80b65d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe80b6760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe80b68f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe80b6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1fe80ba7b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe80ba7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe80bab30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe80bacc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe80bae50"/>
        <function-ref name="get" scoped="" ref="0x7f1fe80b9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe80b91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe80b9340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe80b94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe80b9660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe80b97f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe80b9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe80b9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1fe80b9da0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe80b9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe80b7180"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe80b7310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe80b74a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe80b7630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe80b77c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe80b7950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe80b7ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe80b7c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe80b7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1fe9bf7ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe9bf7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9bf6020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9bf61b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9bf6340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9bf64d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9bf6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1fe9bfb4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9bfb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9bfb850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9bfb9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9bfbb70"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9bfbd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9bfa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9bfa1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9bfa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9bfa4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9bfa660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9bfa7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9bfa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1fe9bf8280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe9bf8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe9bf8600"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9bf8790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9bf8920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9bf8ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9bf8c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9bf8dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9bf7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9bf71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9bf7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1fe80adda0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe80adda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe80ac180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe80ac310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe80ac4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe80ac630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe80ac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1fe80b04c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe80b04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe80b0840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe80b09d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe80b0b60"/>
        <function-ref name="get" scoped="" ref="0x7f1fe80b0cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe80b0e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe80af030"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe80af1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe80af350"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe80af4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe80af670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe80af800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe80b3340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe80b3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe80b1ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe80b2b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe80b1550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe80b1090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe80b0090"/>
        <function-ref name="start" scoped="" ref="0x7f1fe80b21b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe80b26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe80b4a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe80b4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe80b4db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1fe80afa90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe80afa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe80afe10"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe80ad020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe80ad1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe80ad340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe80ad4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe80ad660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe80ad7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe80ad980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe80adb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe9ba6020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe9ba6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9ba6e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9ba5800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9ba5340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9ba5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1fe9b9d020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1fe9b9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9b9de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9b9b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9b9b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9b9bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1fe9b892c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe9b892c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9b89640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9b897d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9b89960"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9b89af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9b89c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9b89e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9b88020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9b881b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9b88340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe9b884d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9b88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe9b980a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe9b980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9b8b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9b8b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9b8b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9b8be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1fe9b67540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1fe9b67540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9b663d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9b66d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9b66890"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9b65260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe9b6a0f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe9b6a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9b69020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9b699a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9b694e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9b69e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe80c9020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe80c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe80c7870"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe80c8840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe80c7220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe80c8d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe80c7d30"/>
        <function-ref name="start" scoped="" ref="0x7f1fe80c9e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe80c8380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1fe80c3780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1fe80c3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe80c0020"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe80c1020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe80c19a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe80c14e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe80c04e0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe80c25d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe80c2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe80c53d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe80c53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe80c4240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe80c4bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe80c4700"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe80c30d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1fe9af3490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f1fe9af3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe9af3810"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe9af39a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1fe9af61d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe9af61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9af4b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9af59f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe9af44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9af4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe9af3020"/>
        <function-ref name="start" scoped="" ref="0x7f1fe9af5020"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9af5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe9afdcf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9afdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9af8220"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9afa7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9af9590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9af9110"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9af8b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9af86a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9afac40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9afb940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9af9ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9afbe10"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9afa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1fe9aa2e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1fe9aa2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe9aa1220"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe9aa13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1fe9aa8c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1fe9aa8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9aa2110"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9aa56a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9aa44a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9aa4020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9aa2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9aa2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9aa5b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9aa6860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9aa4ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9aa6d30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9aa5220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe9aad690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9aad690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9aa9cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9aab260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9aa9090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9aabba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9aa8680"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9aa81e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9aab700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9aac390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9aa96c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9aac880"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9aacd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1fe9a9fcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1fe9a9fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9a9e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe9a94020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe9a94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9a94e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe9a93800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9a93340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9a93cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe9a81c50" loc="38:../../../tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a81c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe9a83020"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9a831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f1fe9a756e0" loc="44:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1fe9a756e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1fe9a75a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7f1fe9a78c40" loc="39:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1fe9a78c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe9a7d020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1fe9a7d1b0"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe9a7d340"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1fe9a7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe9a7c020" loc="43:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe9a7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe9a7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7f1fe9a83dc0" loc="38:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7f1fe9a83dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe9a7e180"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9a7e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe9a7d810" loc="42:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a7d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe9a7db90"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9a7dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1fe9a6ae10" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1fe9a6ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe9a691c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1fe9a69350"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe9a694e0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1fe9a69670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1fe9a61e10" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1fe9a61e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe9a6a1c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1fe9a6a350"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe9a6a4e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1fe9a6a670"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1fe9a6a800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1fe9a6a990"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe9a6ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe9a7f870" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe9a7f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe9a7fbf0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9a7fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe97dac70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe97dac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe97d9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe97d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1fe97d8440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1fe97d8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe97d87c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1fe97d8950"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe97d8ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1fe97d8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1fe97d7020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe97d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe97d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1fe97d9440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1fe97d9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe97d97c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1fe97d9950"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe97d9ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1fe97d9c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1fe97d9e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1fe97d8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe97d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe97da020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe97da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe97da3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe97da530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe97da6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe97da850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe97da9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1fe99fa8e0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe99fa8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe99fac60"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe99fadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1fe99f9d00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1fe99f9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe99f80a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1fe99f8230"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe99f83c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1fe99f8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1fe99f51d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe99f51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe99f5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1fe99fc670" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1fe99fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe99fc9f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1fe99fcb80"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe99fcd10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1fe99f9020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1fe99f91b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1fe99f9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe99f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1fe99f8e50" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1fe99f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe99f7210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe99f73a0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe99f7530"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe99f76c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe99f7850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe9a04c80" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe9a04c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe99ff0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe99ff230"/>
        <function-ref name="request" scoped="" ref="0x7f1fe99ff3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe99ff550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe99ff6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1fe99f1710" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe99f1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe99f1a90"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe99f1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1fe996ca20" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe996ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe996cdc0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe996b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1fe996a570" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1fe996a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe996a910"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1fe996aaa0"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe996ac30"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1fe996adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1fe9968020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe9968020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe99683c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1fe9968690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1fe9968690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe9968a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe9968ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe9968d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe9967020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe99671b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe9967340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe99674d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe9967660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe99677f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe9967980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe9967b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe9967ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe9967e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe9966120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe99662b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe9966440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe99665d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe9966760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe99668f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe9966a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe9966c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe9966da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe9965020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe99651b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9965340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe99656d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe9965860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe99659f0"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe9965b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe9965d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe9964020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe99641b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe9964340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe99644d0"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe9964660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe99647f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe9964980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe9964b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe9964ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe9964e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1fe996b3e0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1fe996b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe996b780"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1fe996b910"/>
        <function-ref name="receive" scoped="" ref="0x7f1fe996baa0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1fe996bc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1fe996bdc0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1fe996a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe996a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe9963c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe9963c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9961ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe99604e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe9960020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe99609a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1fe9969230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1fe9969230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe99695d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9969760"/>
        <function-ref name="request" scoped="" ref="0x7f1fe99698f0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe9969a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9969c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe996db10" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe996db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe996c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe996c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe996c340"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe996c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe996c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1fe9963290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe9963290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe9963630"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe99637c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe9960dd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe9960dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe995f180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe995f310"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe995f4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe995f630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe995f7c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe995f950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe995fae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe995e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe995fe00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe995fc70"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe995e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1fe99503b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe99503b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe9950730"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe99508c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1fe99530d0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe99530d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe9953450"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe99535e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1fe9953900" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe9953900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe9953c80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe9953e10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe9956020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe99561b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe9956340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe99564d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe9956660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe99567f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe9956980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe9956b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe9956ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe9956e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe9955020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe99552b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe9955440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe99555d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe9955760"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe99558f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe9955a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe9955c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe9955da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe9952020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe99521b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe9952340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe99524d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe9952860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe99529f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe9952b80"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe9952d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe9951020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe99511b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe9951340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe99514d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe9951660"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe99517f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe9951980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe9951b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe9951ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe9951e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe9950020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1fe9942670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1fe9942670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe99429f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9942b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9942d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9941020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe99411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9941340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe99414d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9941660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe99417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9941980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9941b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9941ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9941e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9940120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe99402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1fe9948dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1fe9948dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe9947180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe9947310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1fe9940670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1fe9940670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe99409f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9940b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9940d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe993f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe993f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe993f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe993f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe993f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe993f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe993f980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe993fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe993fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe993fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe993e120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe993e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1fe993e670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1fe993e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe993e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe993eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe993ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe993d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe993d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe993d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe993d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe993d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe993d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe993d980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe993db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe993dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe993de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe993c120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe993c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1fe994c020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1fe994c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe994c3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe994c530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe994c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe994c850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe994c9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe994cb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe994cd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe994b020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe994b1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe994b340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe994b4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe994b660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe994b7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe994ba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe994bc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe994bda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe994a020"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe994a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe994a340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe994a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe994a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe994a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe994a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe994ab10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe994aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe9949220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe99493b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe9949540"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe99496d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe9949860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe99499f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe9949b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe9949d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe9948020"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe99481b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe9948340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe99484d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe9948660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe99487f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe9948980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1fe994f710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe994f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe994fa90"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe994fc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1fe9944670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1fe9944670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe99449f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9944b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9944d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9943020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe99431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9943340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe99434d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9943660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe99437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9943980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9943b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9943ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9943e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9942120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe99422b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1fe99476d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1fe99476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9947a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9947be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe9947d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9945020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe99451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9945340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe99454d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9945660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe99457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe9945980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9945b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe9945ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9945e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9944120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe99442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe98c0110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe98c0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe98bf020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe98bf9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe98bf4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe98bfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe801cc70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe801cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe801b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe801b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe8015d70" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8015d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe8014180"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe8014310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1fe80155d0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe80155d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8015950"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8015ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe801c020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe801c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe801c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe801c530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe801c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe801c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe801c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1fe801bbe0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe801bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe8019020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe80191b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe8019340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe80194d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe8019660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe80197f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe8019980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe8019b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe8019ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe8019e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe8018020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe80181b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe8018340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe80185d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe8018760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe80188f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe8018a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe8018c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe8018da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe8017020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe80171b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe8017340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe80174d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe8017660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe80177f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe8017b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe8017d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe8016020"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe80161b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe8016340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe80164d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe8016660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe80167f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe8016980"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe8016b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe8016ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe8016e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe8015020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe80151b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe8015340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe801b440" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe801b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe801b7c0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe801b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe98a2d50" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe98a2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe98a0100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe98a0290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe989f370" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe989f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe989f6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe989f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1fe98a8cd0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1fe98a8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe98a30a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe98a3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe98a3a60" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe98a3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe98a3de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe98a2020"/>
        <function-ref name="request" scoped="" ref="0x7f1fe98a21b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe98a2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe98a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe98a0590" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe98a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe98a0910"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe98a0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1fe9889020" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9889020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe98893a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe9889530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1fe989c0d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1fe989c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe989c470"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe989c600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1fe988a880" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1fe988a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe988ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1fe989ca00" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe989ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe989cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1fe988a0a0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1fe988a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe988a420"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe988a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe980f020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe980f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe980f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe980f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe980ecd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe980ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe980d0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe980d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1fe980f7a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe980f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe980fb20"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe980fcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe980fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe980e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe980e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe9810210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe9810210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe98105b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9810740"/>
        <function-ref name="request" scoped="" ref="0x7f1fe98108d0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe9810a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9810bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe980e400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe980e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe980e780"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe980e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7fae020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7fae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7fae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1fe7fae630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe7fae630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7fae9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7faeb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7faecd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7faee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe7faa6c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7faa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe7faaa60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7faabf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe7fa8400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7fa8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe7fa87a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7fa8930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1fe7fa8bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1fe7fa8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7fa7020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7fa71b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7fa7340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7fa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1fe7faae40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7faae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7fa91e0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe7fa9370"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7fa9500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7fa9690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7fa9820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe7fa7720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe7fa7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe7fa7aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe7fa7c30"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe7fa7dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe7fa6020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe7fa61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7fa6340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe7fa64d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe7fa6b10"/>
        <function-ref name="set" scoped="" ref="0x7f1fe7fa67f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe7fa6660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe7fa6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7fab850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7fab850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7fabbf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7fabd80"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7faa020"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7faa1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7faa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe7fa9a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7fa9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7fa9df0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7fa8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1fe7fa6de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7fa6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe7fa5180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe7fa5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1fe97f3400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe97f3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1fe97f3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1fe97f39d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe97f39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe97f3d50"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe97f2020"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe97f21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe97f2340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe97f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1fe9809b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe9809b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe97f3020"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe97f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1fe97f2720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe97f2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe97f2aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe97f2c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1fe7f75bd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe7f75bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1fe7f74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1fe7f74270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7f74270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7f745f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe7f74780"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7f74910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7f74aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7f74c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1fe7f75470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1fe7f75470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe7f757f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7f75980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1fe7f74e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7f74e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7f73220"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7f733b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f1fe97d38e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1fe97d38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe97d3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1fe97d2020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe97d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe97d23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe97d2530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe97d26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe97d2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe97d29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe97d3080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe97d3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe97d3400"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe97d3590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1fe97c5080" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1fe97c5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1fe97c5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe97c23a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe97c23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe97c2720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1fe97c2a00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1fe97c2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1fe97c2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f1fe9546900" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1fe9546900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1fe9546c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f1fe9547240" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f1fe9547240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe9547e30"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe9546300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f1fe9548aa0" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1fe9548aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1fe9548e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f1fe9549310" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f1fe9549310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe9548020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe95484a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f1fe7f63c50" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7f1fe7f63c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1fe7f62020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1fe7f621b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1fe7f62340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1fe7f624d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1fe7f62660"/>
        <function-ref name="reset" scoped="" ref="0x7f1fe7f627f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1fe7f62980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1fe7f62b10"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1fe7f62ca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1fe7f62e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f1fe7f68020" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1fe7f68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1fe7f683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f1fe7f68790" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f1fe7f68790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe7f673b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe7f67830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f1fe7f6a160" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1fe7f6a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1fe7f6a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f1fe7f67e30" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7f1fe7f67e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7f661e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7f66370"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7f66500"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7f66690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7f66820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f1fe7f657b0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7f1fe7f657b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1fe7f65b30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1fe7f65cc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1fe7f65e50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1fe7f63020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1fe7f631b0"/>
        <function-ref name="reset" scoped="" ref="0x7f1fe7f63340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1fe7f634d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1fe7f63660"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1fe7f637f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1fe7f63980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f1fe7f66af0" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7f1fe7f66af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7f66e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7f65030"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7f651c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7f65350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7f654e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f1fe7f6a8d0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f1fe7f6a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe7f69560"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe7f699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f1fe976b2c0" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f1fe976b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1fe976b640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1fe976b7d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1fe976b960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1fe976baf0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1fe976bc80"/>
        <function-ref name="reset" scoped="" ref="0x7f1fe976be10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1fe976a020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1fe976a1b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1fe976a340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1fe976a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe976c020" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe976c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe976c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe976c530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe976c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe976c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe976c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f1fe96eb610" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f1fe96eb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe96eb990"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe96ebb20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe96ebcb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe96ebe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f1fe96e22f0" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7f1fe96e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe96e2670"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe96e2800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f1fe96e3ac0" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7f1fe96e3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe96e3e40"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe96e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f1fe96ec480" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7f1fe96ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96ec800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96ec990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96ecb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96eccb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96ece40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96eb020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96eb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f1fe96efc90" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f1fe96efc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1fe96ee0a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1fe96ee230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1fe96ee3c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1fe96ee550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1fe96ee6e0"/>
        <function-ref name="reset" scoped="" ref="0x7f1fe96ee870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1fe96eea00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1fe96eeb90"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1fe96eed20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1fe96ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f1fe96ed2f0" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f1fe96ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96ed670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96ed800"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96ed990"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96edb20"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96edcb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96ede40"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96ec020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe96e5450" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe96e5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe96e57d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe96e5960"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe96e5af0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe96e5c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe96e5e10"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96e3020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe96e31b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe96e37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96e34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe96e3340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe96e3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe96ea240" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe96ea240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe96e66e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96e8c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe96e7a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe96e75f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe96e5020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe96e6b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe96e7170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe96eae30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe96e60d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe96e8340"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe96e8810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f1fe96d9730" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f1fe96d9730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe96d9ab0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe96d9c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe96d9dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe96d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f1fe96da370" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f1fe96da370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96da6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96da880"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96daa10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96daba0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96dad30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96d9020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96d91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f1fe96db020" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f1fe96db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96db3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96db530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96db6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96db850"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96db9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96dbb70"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96dbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe96dc1d0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe96dc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe96dc550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe96dc6e0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe96dc870"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe96dca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe96dcb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe96d6490" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe96d6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96d6810"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96d69a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe96d6b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96d6cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96d6e50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe96d5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96d51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96d5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe96d54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe96d5660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96d57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe96d5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe96d5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe96d5da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe96d7330" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96d7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96d76b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96d7840"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96d79d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96d7b60"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96d7cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96d7e80"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96d6030"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96d61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe96d0020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe96d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96d03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96d0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe96d06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96d0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96d09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe96d0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96d0d00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96cf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe96cf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe96cf340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96cf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe96cf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe96cf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe96cfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96cfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe96d3d60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96d3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96d1180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96d1310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96d14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96d1630"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96d17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96d1950"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96d1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96d1c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe96ccde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe96ccde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96cb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96cb310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe96cb4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96cb630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96cb7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe96cb950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96cbae0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96cbc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe96cbe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe96ca020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe96ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe96ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe96ca760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe96cdb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe96cdb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96cc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96cc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96cc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96cc980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96ccb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe96c53e0" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe96c53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe96c5760"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe96c58f0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe96c5a80"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe96c5c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1fe96bb700" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f1fe96bb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe96bba80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe96bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f1fe96bdb40" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f1fe96bdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96bc980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7f1fe96bf510" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7f1fe96bf510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96bf890"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96bfa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96bfbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96bfd40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96be020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96be1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96be340"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f1fe96be830" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f1fe96be830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe96bebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe96bed40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe96bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe96bd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe96bd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe96bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe96bd660"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe96bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1fe96c4080" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe96c4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe96c0630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96c3ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe96c2920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe96c24a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe96bf020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe96c0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe96c2020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe96c4c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe96c0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe96c3170"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe96c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe96b05a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe96b05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe96aca80"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96ae090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe96aee10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe96ae990"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe96ab4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe96ab020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe96ae510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe96af200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe96ac470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe96af6d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe96afba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1fe969f710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1fe969f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe969fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe969fc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe969fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe969e020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe969e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe969e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1fe96948a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1fe96948a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9694c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9694db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9693020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96931b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9693340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1fe969c710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1fe969c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe969ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe969cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe969cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe969b020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe969b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe969b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1fe969a710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1fe969a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe969aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe969ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe969adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9699020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96991b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9699340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1fe96a5710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1fe96a5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe96a5a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96a5c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe96a5db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96a0020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96a01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1fe9696710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1fe9696710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9696b90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9696d20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9695020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96951b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9695340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1fe969e710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1fe969e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe969ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe969ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe969edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe969d020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe969d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe969d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1fe96938a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1fe96938a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9693c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9693db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9692020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96921b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9692340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1fe96a1660" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1fe96a1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe96a19e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96a1b70"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe96a1d00"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96a6020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96a61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1fe9699710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1fe9699710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9699a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9699c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9699db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9698020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96981b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9698340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1fe96a0710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1fe96a0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe96a0a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96a0c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe96a0db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe969f020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe969f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe969f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1fe96958a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1fe96958a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9695c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9695db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9694020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96941b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9694340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1fe969d710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1fe969d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe969da90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe969dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe969ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe969c020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe969c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe969c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1fe969b710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1fe969b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe969ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe969bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe969bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe969a020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe969a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe969a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1fe96a6710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1fe96a6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe96a6a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe96a6c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe96a6db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96a5020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96a51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1fe9698710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1fe9698710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9698a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9698c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9698db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9696020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96961b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9696340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1fe968b710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1fe968b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe968ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe968bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe968bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe968a020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe968a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe968a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1fe96818a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1fe96818a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9681c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9681db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9680020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96801b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9680340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1fe9688710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1fe9688710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9688a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9688c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9688db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9687020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96871b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9687340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1fe9686710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1fe9686710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9686a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9686c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9686db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9685020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96851b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9685340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1fe968d710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1fe968d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe968da90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe968dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe968ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe968c020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe968c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe968c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1fe9683710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1fe9683710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9683b90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9683d20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9682020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96821b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9682340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1fe968a710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1fe968a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe968aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe968ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe968adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9689020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96891b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9689340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1fe96808a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1fe96808a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9680c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9680db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe967f020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe967f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe967f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe967f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1fe968f6b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1fe968f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe968fa30"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe968fbc0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe968fd50"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe968e020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe968e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe968e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1fe9685710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1fe9685710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9685a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9685c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9685db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9684020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96841b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9684340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1fe968c710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1fe968c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe968ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe968cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe968cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe968b020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe968b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe968b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1fe96828a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1fe96828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9682c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9682db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9681020"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe96811b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9681340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe96814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1fe9689710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1fe9689710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9689a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9689c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9689db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9688020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96881b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9688340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1fe9687710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1fe9687710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9687a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9687c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9687db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9686020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96861b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9686340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1fe968e710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1fe968e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe968ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe968ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe968edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe968d020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe968d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe968d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1fe9684710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1fe9684710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9684a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9684c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9684db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9683020"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe96831b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9683340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1fe95ac610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe95ac610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe95ac990"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe95acb20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe95accb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe95ace40"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe959f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe959f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1fe95ada30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1fe95ada30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe95addb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe95ac020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe95ac1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe95ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe959c9e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe959c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe959cd80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe959a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe9599770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe9599770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe9599b10"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe9599ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1fe959a270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe959a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe959a5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe959a780"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe959a910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe959aaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe959ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe959db60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe959db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe959c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe959c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe959c340"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe959c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe959c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe959ae80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe959ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe9599220"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe95993b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7ed11b0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7ed11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7ed1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1fe7ed17c0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe7ed17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7ed1b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7ed1cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7ed1e60"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7ed0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe7ece850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7ece850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe7ecebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7eced80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe7ecb590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7ecb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe7ecb930"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7ecbac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1fe7ecbd50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1fe7ecbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7eca100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7eca290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7eca420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7eca5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1fe7ecc020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7ecc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7ecc3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe7ecc530"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7ecc6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7ecc850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7ecc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe7eca800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe7eca800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe7ecab80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe7ecad10"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe7ec9020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe7ec91b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe7ec9340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7ec94d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe7ec9660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe7ec9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe7ec9980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe7ec97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe7ec9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7ecf970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7ecf970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7ecfd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7ece020"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7ece1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7ece340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7ece4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe7eccc30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7eccc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7ecb020"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7ecb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1fe7ec8020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7ec8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe7ec83a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe7ec8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1fe9595280" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9595280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe9595600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe9595790"/>
        <function-ref name="start" scoped="" ref="0x7f1fe9595920"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9595ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1fe9595d00" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe9595d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1fe956a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1fe956a2f0" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe956a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe956a670"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe956a800"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe956a990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe956ab20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe956acb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1fe9568020" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9568020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe95683a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe9568530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1fe7e970f0" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe7e970f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe7e97470"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe7e97600"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7e97790"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7e97920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1fe7e97b70" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1fe7e97b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1fe7e96020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1fe7e95680" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f1fe7e95680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe7e95a00"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe7e95b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1fe7e96270" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7e96270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7e965f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe7e96780"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7e96910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7e96aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7e96c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f1fe7e95e60" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7f1fe7e95e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe7e94210"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe7e943a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f1fe7e98970" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe7e98970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe7e98cf0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7e98e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1fe7e96e80" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7e96e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7e95220"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7e953b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe955c1e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe955c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9558630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe955bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe955a9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe955a550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9557020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9558ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe955a0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe955cdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9558020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe955b2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe955b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1fe9543750" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1fe9543750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe9141390"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe9141810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1fe913f020" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1fe913f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1fe913eab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1fe913fc10"/>
        <function-ref name="read" scoped="" ref="0x7f1fe913e5e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe913d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f1fe9543020" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1fe9543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1fe95433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1fe7e7ebd0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1fe7e7ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe7e7d860"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe7e7dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1fe7e7c4a0" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e7c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7e7a110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f1fe9507960" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f1fe9507960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe9507ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9507e70"/>
        <function-ref name="request" scoped="" ref="0x7f1fe9505030"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe95051c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9505350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1fe9510390" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1fe9510390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe950f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe950f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1fe950e530" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f1fe950e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe950a1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe950a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f1fe95092c0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f1fe95092c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe9509640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe95097d0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe9509960"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe9509af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9509c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1fe9504020" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1fe9504020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe9504c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f1fe9502450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe9502450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe95027d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe9502960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe9502af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe9502c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe9502e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe9501020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe95011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f1fe9508640" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f1fe9508640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe95089c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9508b50"/>
        <function-ref name="request" scoped="" ref="0x7f1fe9508ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe9508e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9507030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f1fe94cee40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f1fe94cee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe94cc1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe94cc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1fe7e6f720" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1fe7e6f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe7e6faa0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7e6fc30"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1fe7e6fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1fe7e70730" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe7e70730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe7e70ab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe7e70c40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe7e70dd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe7e6f020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe7e6f1b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe7e6f340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe7e6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1fe7e6e060" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1fe7e6e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1fe7e6e3e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1fe7e6e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1fe7e6e9a0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e6e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7e6c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7e71af0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7e71af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7e71e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7e70030"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7e701c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7e70350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7e704e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f1fe9491960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f1fe9491960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe9491ce0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe9491e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1fe948f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f1fe948e760" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f1fe948e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe948eae0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe948ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f1fe948f920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1fe948f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1fe948fca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1fe948fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f1fe94921d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe94921d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe9492550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe94926e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe9492870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe9492a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe9492b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe9492d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe9491020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe949fcc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe949fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe94930a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9493230"/>
        <function-ref name="request" scoped="" ref="0x7f1fe94933c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe9493550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe94936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f1fe94871d0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f1fe94871d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe9487550"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe94876e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1fe9487870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f1fe9477650" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe9477650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f1fe94779d0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f1fe9477b60"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f1fe9477cf0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1fe9477e80"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f1fe9483030"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1fe94831c0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f1fe9483350"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1fe94834e0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1fe9483670"/>
        <function-ref name="getMem" scoped="" ref="0x7f1fe9483800"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f1fe9483990"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f1fe9483b20"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f1fe9483cb0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f1fe9482020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1fe94821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f1fe9468200" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1fe9468200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9468580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9468710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe94688a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9468a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9468bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9468d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9467020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe94671b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9467340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe94674d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9467660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe94677f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9467980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9467c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9467da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f1fe94713a0" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1fe94713a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe9471720"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe94718b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9471a40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9471bd0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9471d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f1fe9475d30" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1fe9475d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe94740e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9474270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9474400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9474590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9474720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe94748b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9474a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9474bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe9474d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f1fe9485020" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f1fe9485020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe94853a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9485530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f1fe946c200" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1fe946c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe946c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe946c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe946c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe946ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe946cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe946cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe946b020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe946b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe946b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe946b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe946b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe946b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe946b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe946bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe946bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f1fe94861d0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1fe94861d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1fe9486550"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1fe94866e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f1fe9462200" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1fe9462200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9462580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9462710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe94628a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9462a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9462bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9462d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9461020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe94611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9461340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe94614d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9461660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe94617f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9461980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9461c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9461da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f1fe9470140" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1fe9470140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe94705c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9470750"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe94708e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9470a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9470c00"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9470d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe946f020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe946f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe946f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe946f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe946f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe946f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe946f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe946fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe946fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe948dc60" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe948dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe948a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f1fe9466200" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1fe9466200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9466580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9466710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe94668a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9466a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9466bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9466d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9465020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe94651b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9465340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe94654d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9465660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe94657f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9465980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9465c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9465da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f1fe94824f0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1fe94824f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9482870"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe9482a00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9482b90"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9482d20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9475020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe94751b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe9475340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe94754d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe9475660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe94757f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe9475980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f1fe9485940" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f1fe9485940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe9485cc0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe9485e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f1fe9473160" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1fe9473160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe94734e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe9473670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe9473800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe9473990"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe9473b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe9473cb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe9473e40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe9472020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe94721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f1fe948a980" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe948a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe948ad00"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe9489020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe94891b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe9489340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe94894d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe9489660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe94897f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f1fe946a200" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1fe946a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe946a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe946a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe946a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe946aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe946abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe946ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9469020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe94691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9469340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe94694d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9469660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe94697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9469980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9469c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9469da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f1fe9472530" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1fe9472530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe94728b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe9472a40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe9472bd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe9472d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9471020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f1fe946e200" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1fe946e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe946e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe946e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe946e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe946ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe946ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe946ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe946d020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe946d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe946d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe946d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe946d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe946d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe946d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe946dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe946dda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f1fe9464200" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1fe9464200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9464580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe9464710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe94648a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9464a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe9464bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe9464d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe9463020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe94631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe9463340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe94634d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9463660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe94637f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe9463980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe9463c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9463da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f1fe93a4020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe93a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f1fe93a43a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f1fe93a4530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f1fe93a46c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1fe93a4850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f1fe93a49e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1fe93a4b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f1fe93a4d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1fe93a3020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1fe93a31b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f1fe93a3340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f1fe93a34d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f1fe93a3660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f1fe93a37f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f1fe93a3a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1fe93a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe93133a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe93133a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe9313740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe93138d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe9312570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe9312570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe9312910"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe9312aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe9315520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe9315520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe93158c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9315a50"/>
        <function-ref name="request" scoped="" ref="0x7f1fe9315be0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe9315d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9313020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe9313b20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe9313b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe9312020"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe93121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7e49060" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7e49060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7e493e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1fe7e49670" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1fe7e49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7e499f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7e49b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7e49d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7e48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe7e45530" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7e45530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe7e458d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7e45a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe7e44610" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7e44610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe7e449b0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7e44b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1fe7e44dd0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1fe7e44dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7e43180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7e43310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7e434a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7e43630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7e466c0" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7e466c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7e46a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7e46bf0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7e46d80"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7e45020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7e451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe7e45cb0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7e45cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7e440a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7e44230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1fe7e43900" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7e43900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe7e43c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe7e43e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1fe92f4740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1fe92f4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe92f33d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f1fe92f51d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f1fe92f51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe92f5550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe92f56e0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe92f5870"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe92f5a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe92f5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f1fe92f9d20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f1fe92f9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe92f60e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe92f6270"/>
        <function-ref name="request" scoped="" ref="0x7f1fe92f6400"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe92f6590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe92f6720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f1fe92ee9a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f1fe92ee9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f1fe92eed20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f1fe92ed020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f1fe92ed1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1fe92ed340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f1fe92ed4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1fe92ed660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f1fe92ed7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1fe92ed980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1fe92edb10"/>
        <function-ref name="getMem" scoped="" ref="0x7f1fe92edca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f1fe92ede30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f1fe92ec020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f1fe92ec1b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f1fe92ec440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1fe92ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f1fe92e6020" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f1fe92e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe92e2630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe92e5a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe92e4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe92e44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe92e1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe92e2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe92e4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe92e6c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe92e2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe92e5110"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe92e55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f1fe92efe00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1fe92efe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe92ee1c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe92ee350"/>
        <function-ref name="start" scoped="" ref="0x7f1fe92ee4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe92ee670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f1fe92e16c0" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f1fe92e16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe92ddc40"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe92df1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe92dd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe92dfae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe92dc590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe92dc110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe92df660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe92e0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe92dd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe92e0860"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe92e0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f1fe92ef240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1fe92ef240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe92ef5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe92ef750"/>
        <function-ref name="start" scoped="" ref="0x7f1fe92ef8e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe92efa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f1fe92eca90" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f1fe92eca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe92e7020"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe92ea510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe92e9300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe92eae10"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe92e7920"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe92e74a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe92ea990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe92eb6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe92e9910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe92ebb80"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe92ea090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1fe9289020" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1fe9289020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe9289c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f1fe928c9c0" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1fe928c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe928cd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe928b020"/>
        <function-ref name="start" scoped="" ref="0x7f1fe928b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe928b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f1fe928d030" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f1fe928d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe928d3b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe928d540"/>
        <function-ref name="request" scoped="" ref="0x7f1fe928d6d0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe928d860"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe928d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f1fe9291ca0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f1fe9291ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe928e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe928e230"/>
        <function-ref name="request" scoped="" ref="0x7f1fe928e3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe928e550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe928e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f1fe92877f0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f1fe92877f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe9287b70"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe9287d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f1fe928dd80" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1fe928dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe928c180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe928c310"/>
        <function-ref name="start" scoped="" ref="0x7f1fe928c4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe928c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe92584e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe92584e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9254a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9256020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe9256da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9256920"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe92534a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9253020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe92564a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9257110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9254410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe92575e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9257ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe9251020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe9251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe924d630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9250a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe924f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe924f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe924c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe924dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe924f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe9251c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe924d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe9250110"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe92505e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe924bb40" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe924bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe9246110"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe92495b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe92474a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe9247020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe9246a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe9246590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9249a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe924a750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe9247ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe924ac20"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9249130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1fe7e5e060" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1fe7e5e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7e5ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1fe7e5d300" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1fe7e5d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7e5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1fe7e765c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e765c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7e74240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1fe7e79840" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1fe7e79840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1fe7e77340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1fe7e78480"/>
        <function-ref name="read" scoped="" ref="0x7f1fe7e78df0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe7e77df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f1fe920fc90" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe920fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe920e0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe920e230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe920e3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe920e550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe920e6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe920e870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe920ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1fe92105e0" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe92105e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe920f240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1fe92141d0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1fe92141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1fe9213c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1fe9214dc0"/>
        <function-ref name="read" scoped="" ref="0x7f1fe9213770"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe9211730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1fe920c280" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe920c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe920c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe920c790"/>
        <function-ref name="request" scoped="" ref="0x7f1fe920c920"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe920cab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe920cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f1fe91d6380" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f1fe91d6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe91d6700"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe91d6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f1fe91e4aa0" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f1fe91e4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe91e4e20"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe91e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f1fe91de100" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f1fe91de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe91de480"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe91de610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1fe91ff020" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe91ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe91fd870"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe91fe840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe91fd220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe91fed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe91fdd30"/>
        <function-ref name="start" scoped="" ref="0x7f1fe91ffe30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe91fe380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe9208150" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe9208150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1fea5fc800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1fea5fc800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe92084d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1fe9202b10" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe9202b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe9200790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f1fe92031d0" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1fe92031d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe9203550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe92036e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe9203870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe9203a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe9203b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe9203d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe9202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1fe9208e70" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1fe9208e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1fe9206910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1fe9207a90"/>
        <function-ref name="read" scoped="" ref="0x7f1fe9206440"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe9204440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe919a970" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe919a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe91971b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe91981b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe9198b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe9198670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe9197670"/>
        <function-ref name="start" scoped="" ref="0x7f1fe91997c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9199cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe919a120" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe919a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe919a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7dfbca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7dfbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7df74e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7df84e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7df8e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7df89a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7df79a0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7df9ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7df8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7dfb450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7dfb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7dfb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1fe7de1440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7de1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe7de17c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe7de1950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe7de1ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe7de1c70"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7de1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1fe7de4880" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7de4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe7de4c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe7de4d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7de3020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7de31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7de3340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe7de34d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe7de3660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe7de37f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe7de3980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe7de3b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe7de3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1fe7de2020" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7de2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe7de23a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe7de2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7de26c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe7de2850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe7de29e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7de2b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe7de2d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe7de1020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe7de11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1fe7dd70c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7dd70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe7dd7440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe7dd75d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe7dd7760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe7dd78f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7dd7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1fe7dda710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7dda710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe7ddaa90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe7ddac20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7ddadb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7dd9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7dd91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe7dd9340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe7dd94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe7dd9660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe7dd97f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe7dd9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe7dd9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7dde5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7dde5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7ddcdf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7ddddf0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7ddc7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7ddc2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7dda2e0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7ddd420"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7ddd930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7ddfca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7ddfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7dde0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1fe7dd9da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7dd9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe7dd8180"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe7dd8310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7dd84a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe7dd8630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe7dd87c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7dd8950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe7dd8ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe7dd8c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe7dd8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7df4020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7df4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7df1870"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7df3840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7df1220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7df3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7df1d30"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7df4e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7df3380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1fe7dee780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1fe7dee780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7dea020"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7deb020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7deb9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7deb4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7dea4e0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7ded5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7dedae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe7df03d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe7df03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe7def240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe7defbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe7def700"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe7dee0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f1fe9166bf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f1fe9166bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1fe9163710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1fe9164860"/>
        <function-ref name="read" scoped="" ref="0x7f1fe9163220"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe9162220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1fe9191cb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1fe9191cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1fe9167850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1fe9169940"/>
        <function-ref name="read" scoped="" ref="0x7f1fe9167360"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe9166360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1fe91628f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe91628f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe9162c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe9162e20"/>
        <function-ref name="request" scoped="" ref="0x7f1fe9160020"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe91601b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe9160340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1fe7e08020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1fe7e08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe7e083a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7e08530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1fe7e086c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1fe7e09020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1fe7e09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1fe7e093a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1fe7e09530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1fe7e096c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1fe7e09850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1fe7e099e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1fe7e09b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1fe7e09d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1fe7e08910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1fe7e08910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1fe7e08c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1fe7e08e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1fe7e07280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe7e07280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7e06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7e0b360" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7e0b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7e0b6e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7e0b870"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7e0ba00"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7e0bb90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7e0bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1fe7d97dc0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1fe7d97dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7d96ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1fe7d94120" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1fe7d94120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe7d94d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f1fe9148300" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1fe9148300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1fe9147020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f1fe914b8b0" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1fe914b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1fe914bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f1fe9138b80" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f1fe9138b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fea157770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f1fea1560d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f1fe9137c10"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9137790"/>
        <function-ref name="notify" scoped="" ref="0x7f1fe91350d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f1fe913b920" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f1fe913b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fea157770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f1fea1560d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9138560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f1fe9131080" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1fe9131080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe9131400"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe9131590"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe9131720"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe91318b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe9135e80" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe9135e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe9132220"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe91323b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe9132540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe91326d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe9132860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe91329f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe9132b80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe9132d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe912e2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe912e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe912e670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe912e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe912e990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe912eb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe912ecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe912ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe912d020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe912d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe912d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe912d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe912d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe912d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe912d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe912dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe912dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe912f140" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe912f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe912f4c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe912f650"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe912f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe912f970"/>
        <function-ref name="get" scoped="" ref="0x7f1fe912fb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe912fc90"/>
        <function-ref name="set" scoped="" ref="0x7f1fe912fe20"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe912e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1fe912ade0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe912ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9129180"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe9129310"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe91294a0"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe9129630"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe91297c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe9129950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1fe912a2e0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1fe912a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe912a660"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe912a7f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe912a980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe912ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f1fe910a480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f1fe910a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe910a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe910a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f1fe910b8f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1fe910b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe910bc70"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe910be00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe910a020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe910a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f1fe910fca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f1fe910fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f1fe910ed40"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe910e8c0"/>
        <function-ref name="notify" scoped="" ref="0x7f1fe910d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f1fe9110b10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f1fe9110b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe910f750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f1fe910d660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe910d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe910d9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe910db70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe910dd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe910b020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe910b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe910b340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe910b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe910b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f1fe9103e20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7f1fe9103e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9101a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f1fe9104270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f1fe9104270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fea157770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f1fea1560d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f1fe9103310"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9104e60"/>
        <function-ref name="notify" scoped="" ref="0x7f1fe9103790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f1fe9100130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f1fe9100130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f1fe90ff1e0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe9100d20"/>
        <function-ref name="notify" scoped="" ref="0x7f1fe90ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f1fe9105020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f1fe9105020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fea157770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f1fea1560d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe9105c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe90f5c00" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe90f5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe90f2020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe90f21b0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe90f2340"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe90f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1fe90f2ca0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe90f2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe90f10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe90f1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe90f13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe90f1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe90f16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1fe90efc00" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1fe90efc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe90ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1fe90ee2b0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe90ee2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe90ee630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe90ee7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe90ee950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe90eeae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe90eec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1fe90eb430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe90eb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe90eab00"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe90dd2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe90ea3d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe90dd9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1fe90cf430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe90cf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1fe90cf7b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1fe90cf940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1fe90cfad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1fe90cfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe90ef020" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe90ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe90ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1fe90e4350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe90e4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe90e46d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe90e4860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe90e49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1fe90ed020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe90ed3a0"/>
        <function-ref name="source" scoped="" ref="0x7f1fe90ed530"/>
        <function-ref name="address" scoped="" ref="0x7f1fe90ed6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe90ed850"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe90ed9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe90edb70"/>
        <function-ref name="type" scoped="" ref="0x7f1fe90edd00"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe90ec020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe90ec1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe90ec340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe90ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1fe90db660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe90db660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe90dace0"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe90d9460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe90da5b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe90d9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe90c42f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe90c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe90c4670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe90c4800"/>
        <function-ref name="start" scoped="" ref="0x7f1fe90c4990"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe90c4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1fe90bc2c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe90bc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe90bc640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe90bc7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe90bc960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe90bcaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe90bcc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe90bce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1fe90a81d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1fe90a81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1fe90a8650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1fe90be020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe90be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe90be3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe90be530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe90be6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe90be850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe90be9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1fe90c3320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe90c3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe90c36a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe90c3830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe90c39c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe90c3b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe90c3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1fe90c01d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1fe90c01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe90c0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1fe90b50f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe90b50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe90b5470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe90b5600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe90b5790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe90b5920"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe90b5ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe90b5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1fe90aa170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe90aa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1fe90aa4f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1fe90aa680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1fe90aa810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1fe90aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe90c2510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe90c2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe90c2890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1fe90bd020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe90bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe90bd3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe90bd530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe90bd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1fe90a0430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1fe90a0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1fe90a07b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1fe90a0940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1fe90a0ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1fe90a0c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1fe90a0df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1fe90c0800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe90c0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe90c0b80"/>
        <function-ref name="source" scoped="" ref="0x7f1fe90c0d10"/>
        <function-ref name="address" scoped="" ref="0x7f1fe90bf020"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe90bf1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe90bf340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe90bf4d0"/>
        <function-ref name="type" scoped="" ref="0x7f1fe90bf660"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe90bf7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe90bf980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe90bfb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe90bfca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1fe90b0170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe90b0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1fe90b04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe909b020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe909b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe909b3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe909b530"/>
        <function-ref name="start" scoped="" ref="0x7f1fe909b6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe909b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1fe908a9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe908a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1fe908ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1fe9089b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1fe9089b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1fe9088020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1fe90881b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1fe9088340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1fe90884d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1fe9088660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1fe908b020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe908b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe908b3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe908b530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe908b6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe908b850"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe908b9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe908bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1fe9096990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe9096990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe9096d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe908e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe908e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe908e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe908e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1fe9089080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe9089080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1fe9089400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1fe9089590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1fe9089720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1fe90898b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1fe9097500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1fe9097500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe9097880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1fe908a020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe908a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe908a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe908a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe908a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe909a1d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe909a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe909a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe909a6e0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe909a870"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe909aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe909ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1fe908d6f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1fe908d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe908da70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe908dc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe908dd90"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe9097020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe90971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1fe9097bc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1fe9097bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe9096020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe90961b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe9096340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe90964d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe9096660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1fe908e840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe908e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe908ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe9085390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9085390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe9085710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe90858a0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe9085a30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe9085bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1fe9083330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe9083330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe90836b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe9083840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe90839d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe9083b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe9083cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe9083e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe9085e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe9085e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe9084220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe90843b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe9084540"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe90846d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe9084860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe9084b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe9084b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe9083020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe9082e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe9082e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe907f220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe907f3b0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe907f540"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe907f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1fe907e7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe907e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe907eb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe907ecf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe907ee80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe907d030"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe907d1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe907d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1fe9073ae0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1fe9073ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe9073e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe9072020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe90721b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe9072340"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe90724d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe9072660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1fe9068020" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe9068020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe90683a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe9068530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe90686c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe9068850"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe90689e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe9068b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f1fe906cd30" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1fe906cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe90730e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe9073270"/>
        <function-ref name="modify" scoped="" ref="0x7f1fe9073400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe9073590"/>
        <function-ref name="resend" scoped="" ref="0x7f1fe9073720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe907f990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe907f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe907fd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe907e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe907e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe907e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe907e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1fe906b020" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1fe906b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1fe906b3a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1fe906b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1fe907a020" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1fe907a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe907a3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe907a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe9061660" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe9061660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe90619e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe9061b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe9061d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f1fe9075b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe9075b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1fe907b020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1fe907b1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1fe907b340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1fe907b4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1fe907b660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1fe907b7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1fe907b980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1fe907bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe906b7f0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe906b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe906bb70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe906bd00"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe906a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe906a1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe906a340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe906a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe906a660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe906aca0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe906a7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe906a980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe906ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1fe907d640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe907d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe907d9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe907db50"/>
        <function-ref name="request" scoped="" ref="0x7f1fe907dce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe907de70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe907c030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f1fe905ce40" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f1fe905ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe9065310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe90654a0"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe9065630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe90657c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe9065950"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe9065ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f1fe90579e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f1fe90579e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe9057d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe9056020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f1fe9058a10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f1fe9058a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe9058d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe9057020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f1fe9059a00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f1fe9059a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe9059d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe9058020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1fe8fffb80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe8fffb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1fe900b020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1fe900b1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1fe900b340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1fe900b4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1fe900b660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1fe900b7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1fe900b980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1fe900bb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1fe900bca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1fe900be30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1fe900a020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1fe900a1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f1fe900a340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1fe900a5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1fe900a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1fe8ffee60" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1fe8ffee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ffda80"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8ffc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1fe900aa60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe900aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1fe900ade0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1fe8ffe020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1fe8ffe1b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1fe8ffe340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1fe8ffe4d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1fe8ffe660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1fe8ffe7f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1fe8ffe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe900f720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe900f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe900faa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe900fc30"/>
        <function-ref name="request" scoped="" ref="0x7f1fe900fdc0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe900c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe900c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1fe8ff77e0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe8ff77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1fe8ff7b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1fe8ff7cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1fe8ff7e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1fe8ff6030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1fe8ff61c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1fe8ff6350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1fe8ff64e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1fe8ff6670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1fe8ff6800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1fe8ff6990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1fe8ff6b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1fe8ff6cb0"/>
        <function-ref name="sync" scoped="" ref="0x7f1fe8ff6e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1fe8ff5120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1fe8ff52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f1fe8fd98e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8fd98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fd9c60"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fd9df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f1fe8ff2de0" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8ff2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1fe8ff1180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f1fe8ff17f0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f1fe8ff17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe8fed090"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8fee090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe8feea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe8fee550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe8fed550"/>
        <function-ref name="start" scoped="" ref="0x7f1fe8ff06a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8ff0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f1fe8fdc710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8fdc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fdca90"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fdcc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f1fe8fecce0" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1fe8fecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8feb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8feb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8feb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8feb550"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8feb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8feb870"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8feba00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8febb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1fe8ff49b0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1fe8ff49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ff35c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8ff3a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f1fe8fc8820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f1fe8fc8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe8fc8ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe8fc8d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f1fe8fd81c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1fe8fd81c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fd8540"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fd86d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1fe8fd8a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8fd8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fd8df0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f1fe8fdd550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8fdd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fdd8d0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fdda60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1fe8fe3af0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe8fe3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1fe8fe3e70"/>
        <function-ref name="changed" scoped="" ref="0x7f1fe8fe7030"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1fe8fe71c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1fe8fe7350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1fe8feda40" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1fe8feda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8feddc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8fec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8fec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8fec340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8fec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8fec660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8fec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8fec980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f1fe8fd6120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8fd6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8fd66a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f1fe8fea020" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1fe8fea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8fea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8fea530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8fea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8fea850"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8fea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8feab70"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8fead00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8fe9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8ff93c0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8ff93c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe8ff9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1fe8fd9020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8fd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fd93a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fd9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f1fe8fd6a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8fd6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8fd6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1fe8fd51d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1fe8fd51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8fd5550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8fd56e0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8fd5870"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8fd5a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8fd5b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f1fe8fd3d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f1fe8fd3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8fd2180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8fd2310"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8fd24a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8fd2630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8fd27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1fe8ff55b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1fe8ff55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1fe8ff5930"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1fe8ff5ac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1fe8ff5c50"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1fe8ff5de0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1fe8ff4020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1fe8ff41b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1fe8ff4340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1fe8ff44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f1fe8fdde00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8fdde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fdc1c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fdc350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f1fe8fdbbe0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8fdbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fdd020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f1fe8fd42b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1fe8fd42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8fd4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe8fd2a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe8fd2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe8fd2e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe8fd1020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe8fd11b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe8fd1340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe8fd14d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8fd1660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe8fd17f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe8fd1e30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8fd1980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe8fd1b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe8fd1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f1fe8fc9940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f1fe8fc9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe8fc9cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe8fc9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8ff9a30" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8ff9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8ff9db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8ff7020"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8ff71b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8ff7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8ff74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f1fe8fe65a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1fe8fe65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fe6920"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fe6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f1fe8fdec00" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8fdec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8fe60a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8fe6230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f1fe8fe9400" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1fe8fe9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8fe9780"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8fe9910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe8fe9aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe8fe9c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f1fe8fd3020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f1fe8fd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8fd33a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8fd3530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8fd36c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8fd3850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8fd39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f1fe8fd49c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8fd49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8fd4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8f527e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8f527e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe8f52b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1fe8f4f220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f4f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe8f4cb30"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8f4da60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe8f4c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe8f4c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe8f4b020"/>
        <function-ref name="start" scoped="" ref="0x7f1fe8f4d090"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8f4d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8f49260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8f49260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe8f495e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1fe8f49af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1fe8f49af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe8f0d390"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8f0e360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe8f0ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe8f0e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe8f0d850"/>
        <function-ref name="start" scoped="" ref="0x7f1fe8f0f970"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8f0fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7d53ca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d53ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7d4f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d504e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7d50e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7d509a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7d4f9a0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7d52ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7d50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7d53450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7d53450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7d537d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7d4bc20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d4bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7d484e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d494e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7d49e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7d499a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7d489a0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7d4aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7d49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7d4b3d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7d4b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7d4b750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1fe7d32440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7d32440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe7d327c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe7d32950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe7d32ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe7d32c70"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d32e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1fe7d359d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7d359d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe7d35d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe7d34020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7d341b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7d34340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7d344d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe7d34660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe7d347f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe7d34980"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe7d34b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe7d34ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe7d34e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1fe7d33120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7d33120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe7d334a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe7d33630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7d337c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe7d33950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe7d33ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7d33c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe7d33e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe7d32020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe7d321b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1fe7d280c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1fe7d280c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe7d28440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1fe7d285d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1fe7d28760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1fe7d288f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d28a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1fe7d2b710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe7d2b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe7d2ba90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe7d2bc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7d2bdb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7d2a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7d2a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe7d2a340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe7d2a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe7d2a660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe7d2a7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe7d2a980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe7d2ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7d2f5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d2f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7d2cdf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d2edf0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7d2c7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7d2c2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7d2b2e0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7d2e420"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7d2e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7d30ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7d30ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7d2f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1fe7d2ada0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe7d2ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe7d29180"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe7d29310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe7d294a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe7d29630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe7d297c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe7d29950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe7d29ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe7d29c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe7d29e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe8f31080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe8f31080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8f30020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8f309a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8f304e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8f30e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1fe8f290f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1fe8f290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8f27020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8f279a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8f274e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8f27e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe8f2dcd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe8f2dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8f2bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8f2a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8f2a090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8f2aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1fe7d44020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1fe7d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7d42870"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d43840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7d42220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7d43d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7d42d30"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7d44e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7d43380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1fe7d3e780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1fe7d3e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe7d3b020"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe7d3c020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe7d3c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe7d3c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe7d3b4e0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe7d3d5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe7d3dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe7d413d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe7d413d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe7d40240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe7d40bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe7d40700"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe7d3e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f1fe8f07090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1fe8f07090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f07410"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f075a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f07730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f078c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f07a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f07be0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f07d70"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f1fe8f06390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1fe8f06390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f06710"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f06a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f06bc0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f06d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f05020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f051b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f1fe8f056a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1fe8f056a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f05a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f05bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f05d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f04020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f04340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f044d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f1fe8f09e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1fe8f09e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f08210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f083a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f08530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f086c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f08850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f089e0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f08b70"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f08d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f1fe8f02ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1fe8f02ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f010a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f01230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f013c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f01550"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f016e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f01870"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f01a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f01b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f1fe8f50b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1fe8f50b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f09020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f091b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f09340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f094d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f09660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f097f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f09980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f09b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f1fe8f049b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1fe8f049b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8f04d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8f02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8f021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8f02340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8f024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8f02660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8f027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8f02980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8efe2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8efe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8efe670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8efe800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8efe990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8efeb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8efecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8efee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8efd020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8efd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8efd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8efd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8efd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8efd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8efd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8efdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8efdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8eff020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8eff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8eff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8eff530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8eff6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8eff850"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8eff9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8effb70"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8effd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8efe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8efade0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8efade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ef9180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ef9310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8ef94a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ef9630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ef97c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8ef9950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ef9ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ef9c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8ef9e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8ef8020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ef81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8ef8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8ef84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8ef8760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ef88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8efbb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8efbb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8efa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8efa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8efa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8efa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8efa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8efa7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8efa980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8efab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8ef5930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ef5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ef5cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ef5e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8ef4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ef41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ef4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8ef44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ef4660"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ef47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8ef4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8ef4b10"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ef4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8ef4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8ef3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8ef32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ef3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8ef6710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ef6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ef6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ef6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ef6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ef5020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ef51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ef5340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ef54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ef5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8ef0480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ef0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ef0800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ef0990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8ef0b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ef0cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ef0e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8eef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8eef1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8eef340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8eef4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8eef660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8eef7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8eef980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8eefb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8eefda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8eee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8ef11d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ef11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ef1550"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ef16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ef1870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ef1a00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ef1b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ef1d20"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ef0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ef01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8eea020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8eea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8eea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8eea530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8eea6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8eea850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8eea9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8eeab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8eead00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ee9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8ee91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8ee9340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ee94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8ee9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8ee97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8ee9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ee9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8eedd70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8eedd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8eeb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8eeb310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8eeb4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8eeb630"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8eeb7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8eeb950"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8eebae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8eebc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8ee6de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ee6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ee5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ee5310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8ee54a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ee5630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ee57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8ee5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ee5ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ee5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8ee5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8ee4020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ee41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8ee4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8ee44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8ee4760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ee48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8ee7b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ee7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ee6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ee61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ee6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ee64d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ee6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ee67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ee6980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ee6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8ee1930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8ee1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ee1cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ee1e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8ee0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ee01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ee0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8ee04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ee0660"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ee07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8ee0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8ee0b10"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ee0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8ee0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8edf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8edf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8edf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8ee2710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8ee2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8ee2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8ee2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8ee2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8ee1020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8ee11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8ee1340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8ee14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8ee1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f1fe8ecc150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1fe8ecc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1fe8ecc4d0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8ecc660"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe8ecc7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1fe8ecc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f1fe8eccd60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1fe8eccd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8ecb180"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8ecb310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe8ecb4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe8ecb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f1fe8ecba20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1fe8ecba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8ecbda0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8ec7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe8ec71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe8ec7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f1fe8eb28f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f1fe8eb28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1fe8eb2c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1fe8eb2e00"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe8eb1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8eb11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8eb1340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1fe8eb14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1fe8ec4a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1fe8ec4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1fe8ec4da0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8eb3020"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe8eb31b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1fe8eb3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1fe8eb35d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1fe8eb35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1fe8eb3950"/>
        <function-ref name="getControl" scoped="" ref="0x7f1fe8eb3ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe8eb3c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1fe8eb3e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1fe8eb2020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe8eb21b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1fe8eb2340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1fe8eb24d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1fe8eb2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f1fe8eb17a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8eb17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8eb1b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8eb1cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8eb1e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8eaf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8eaf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8eaf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8eaf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8eaf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8eaf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8eaf980"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8eafb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8eafca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8eafe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8eae120"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8eae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1fe8ea8480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe8ea8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe8ea8800"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8ea8990"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8ea8b20"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe8ea8cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe8ea8e40"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe8ea7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1fe8eab8a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1fe8eab8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8eabc20"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8eabdb0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe8ea8020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe8ea81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1fe8ea5480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1fe8ea5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe8ea5800"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8ea5990"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8ea5b20"/>
        <function-ref name="edge" scoped="" ref="0x7f1fe8ea5cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f1fe8ea5e40"/>
        <function-ref name="getValue" scoped="" ref="0x7f1fe8ea4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1fe8ea68b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1fe8ea68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8ea6c30"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8ea6dc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe8ea5020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe8ea51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1fe8b4ee50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8b4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4d410"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1fe8b57160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1fe8b57160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b574e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1fe8b51e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8b51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b50210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1fe8b4b880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8b4b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4bc00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1fe8b430a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8b430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b43420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b435b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1fe8b4a0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8b4a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4a420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1fe8b37500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe8b37500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b37880"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b37a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1fe8b3a500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe8b3a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3a880"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1fe8b56490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8b56490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b56810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1fe8b40880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1fe8b40880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b40c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b40d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1fe8b3b500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe8b3b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3b880"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1fe8b50e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1fe8b50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4f210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1fe8b4fe50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8b4fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4e210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1fe8b46880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8b46880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b46c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b46d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1fe8b470a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1fe8b470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b47420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b475b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1fe8b4a880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8b4a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4ac00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe8b5aa90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8b5aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe8b5ae10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe8b58020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe8b581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1fe8b55e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe8b55e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b541c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1fe8b54490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1fe8b54490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b54910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1fe8b3ec80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8b3ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1fe8b54be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8b54be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1fe8b3bce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8b3bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1fe8b55160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8b55160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b554e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1fe8b400a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8b400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b40420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b405b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1fe8b4f670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8b4f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1fe8b50670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8b50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b509f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b50b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1fe8b58ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8b58ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b58e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1fe8b410a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8b410a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b41420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b415b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1fe8b43880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8b43880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b43c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b43d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1fe8b41880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8b41880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b41c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b41d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1fe8b39ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe8b39ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b370a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b37230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1fe8b3ace0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe8b3ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b390a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b39230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1fe8b47880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1fe8b47880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b47c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b47d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1fe8b420a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8b420a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b42420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b425b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1fe8b3cce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8b3cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1fe8b49880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe8b49880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b49c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b49d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1fe8b37ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8b37ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8b360a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8b36230"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b363c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8b36550"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8b366e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1fe8b58480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe8b58480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b58800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1fe8b51670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1fe8b51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b519f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b51b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1fe8b4e670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8b4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1fe8b440a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8b440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b44420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b445b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1fe8b490a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8b490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b49420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b495b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1fe8b44880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8b44880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b44c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b44d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1fe8b4d870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8b4d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4dbf0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1fe8b577b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1fe8b577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b57b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1fe8b4b0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8b4b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b4b420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b4b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8b5be20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8b5be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8b5a1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8b5a350"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8b5a4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8b5a670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8b5a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1fe8b522f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8b522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b52670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1fe8b51020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1fe8b51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1fe8b3c500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1fe8b3c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3c880"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1fe8b3dce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8b3dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1fe8b557b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8b557b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b55b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1fe8b3d500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8b3d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3d880"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1fe8b39500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1fe8b39500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b39880"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b39a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1fe8b460a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8b460a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b46420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b465b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1fe8b42880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8b42880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b42c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b42d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1fe8b57e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1fe8b57e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b561c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1fe8b56ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8b56ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b56e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1fe8b480a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe8b480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b48420"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b485b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1fe8b52940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1fe8b52940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b52cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1fe8b48880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8b48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b48c00"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b48d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1fe8b3e0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8b3e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b3e820"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b3e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1fe8b369b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8b369b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8b36d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8b35020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b351b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8b35340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8b354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1fe8e64630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e64630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8e649b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8e64b40"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8e64cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8e64e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8e63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe8e66670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe8e669f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe8e66b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe8e66d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f1fe8e638c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f1fe8e638c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8e63c40"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8e63dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f1fe8e626f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f1fe8e626f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8e62a70"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8e62c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8e69950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8e69950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8e69cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8e69e60"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8e66020"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8e661b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8e66340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1fe8e61510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e61510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8e61890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f1fe8e4b680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8e4b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8e4ba00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8e4bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1fe8e5bbb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1fe8e5bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8e5a020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8e5a1b0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8e5a340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8e5a4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8e5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe8e60920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8e60920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe8e60ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe8e60e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe8e5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f1fe8e54080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8e54080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1fe8e54400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f1fe8e53020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f1fe8e53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe8e533a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe8e53530"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe8e536c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe8e53850"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe8e539e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe8e53b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1fe8e57400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1fe8e57400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8e57780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8e57910"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8e57aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8e57c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8e57dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f1fe8e59020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f1fe8e59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8e593a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8e59530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f1fe8e59db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f1fe8e59db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8e58180"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8e58310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe8e53df0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe8e53df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe8e521c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe8e52350"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe8e524e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe8e52670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe8e52800"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8e52990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe8e52b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe8e4c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8e52cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe8e52e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe8e4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8e5d810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8e5d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8e5db90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8e5dd20"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8e5b020"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8e5b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8e5b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f1fe8e46120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f1fe8e46120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe8e464a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe8e46630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1fe8e58ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1fe8e58ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8e57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1fe8deb770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe8deb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe8debaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe8debc80"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe8debe10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe8de4020"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe8de41b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe8de4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1fe8de7280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe8de7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe8de7600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe8de7790"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe8de7920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe8de7ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe8de7c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe8de7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8de3020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8de3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe8de33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1fe8de3b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe8de3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe8de2020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe8de21b0"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe8de2340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe8de24d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe8de2660"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe8de27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1fe8b80020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8b80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8b803a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8b80530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1fe8dc78f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8dc78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1fe8dc7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8dc8c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8dc8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8dc7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8dc71b0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8dc7340"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8dc74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8dc7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe7c3a440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7c3a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe7c3a7c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7c3a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1fe7c39d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe7c39d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe7c38180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe7c38310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1fe7c385a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe7c385a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe7c38920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1fe7c3abe0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1fe7c3abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1fe7c39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7c3b770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7c3b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7c3baf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7c3bc80"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7c3be10"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7c3a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7c3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1fe7c392b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe7c392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1fe7c39630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1fe7c397c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1fe7c39950"/>
        <function-ref name="write" scoped="" ref="0x7f1fe7c39ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1fe8db46b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8db46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe8db4a30"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe8db4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1fe8db2850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8db2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8db2bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8db2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1fe8db0a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe8db0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe8db0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1fe8db3020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8db3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1fe8db33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1fe8db1690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1fe8db1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8db1a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8db1ba0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8db1d30"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8db0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8db01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8db6430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8db6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8db67b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8db6940"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8db6ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8db6c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8db6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1fe8db36a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe8db36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1fe8db3a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1fe8db3bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1fe8db3d40"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8db2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1fe8daf2a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe8daf2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8daf620"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8daf7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1fe8d57250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8d57250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe8d575f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe8d57780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1fe8d55c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1fe8d55c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8d54020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8d541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1fe8d533e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1fe8d533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1fe8d53780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1fe8d57a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1fe8d57a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1fe8d57d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1fe8d53a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1fe8d53a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe8d53dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe8d52020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe8d521b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe8d52340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe8d524d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe8d52660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe8d527f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe8d52980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe8d52b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe8d52ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe8d52e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe8d51020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe8d511b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe8d51440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe8d515d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe8d51760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe8d518f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe8d51a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe8d51c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe8d51da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe8d50020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe8d501b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe8d50340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe8d504d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe8d50660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe8d509f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe8d50b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe8d50d10"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe8d4f020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe8d4f1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe8d4f340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe8d4f4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe8d4f660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe8d4f7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe8d4f980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe8d4fb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe8d4fca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe8d4fe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe8d4e020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe8d4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe8d4ec20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe8d4ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe8d4d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe8d4d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe8d4d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe8d4d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe8d4d660"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8d4d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe8d4d980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe8d4c020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8d4dca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe8d4db10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe8d4de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1fe8d545b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1fe8d545b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8d54950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8d54ae0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8d54c70"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8d54e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8d53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8d58470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8d58470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8d58810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8d589a0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8d58b30"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8d58cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8d58e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1fe8d55060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1fe8d55060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1fe8d553e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1fe8d55570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1fe8d55700"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8d55890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1fe8d4e480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1fe8d4e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8d4e800"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8d4e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f1fe8d4c2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f1fe8d4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe8d4c670"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe8d4c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f1fe8d3f5e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1fe8d3f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8d3f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1fe8d40d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe8d40d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8d3f0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8d3f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1fe8d44020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe8d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe8d443a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe8d44530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe8d446c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe8d44850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe8d449e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe8d44b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe8d44d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe8d43020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe8d431b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe8d43340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe8d434d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe8d43660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe8d437f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe8d43a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe8d43c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe8d43da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe8d42020"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe8d421b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe8d42340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe8d424d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe8d42660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe8d427f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe8d42980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe8d42b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe8d42ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe8d41220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe8d413b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe8d41540"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe8d416d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe8d41860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe8d419f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe8d41b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe8d41d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe8d40020"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe8d401b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe8d40340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe8d404d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe8d40660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe8d407f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe8d40980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1fe8d03b20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1fe8d03b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8d02020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8d021b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8d02340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8d024d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8d02660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8d027f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8d02980"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8d02b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8d02ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8d02e30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8d01020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8d011b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8d01340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8d015d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8d01760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1fe8d37780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8d37780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8d37b00"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8d37c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1fe8d01b20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1fe8d01b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8d00020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8d001b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8d00340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8d004d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8d00660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8d007f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8d00980"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8d00b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8d00ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8d00e30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8cff020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8cff1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8cff340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8cff5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8cff760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1fe8cffb20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1fe8cffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8cfe020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8cfe1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8cfe340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8cfe4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8cfe660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8cfe7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8cfe980"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8cfeb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8cfeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8cfee30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8cfd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8cfd1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8cfd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8cfd5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8cfd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1fe8d3ec70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1fe8d3ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe8d3b020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe8d3b1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe8d3b340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe8d3b4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe8d3b660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe8d3b7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe8d3b980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe8d3bb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe8d3bca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe8d3be30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe8d3a020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe8d3a1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe8d3a340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe8d3a5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe8d3a760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe8d3a8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe8d3aa80"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe8d3ac10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe8d3ada0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe8d39020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe8d391b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe8d39340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe8d394d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe8d39660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe8d397f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe8d39b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe8d39d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe8d38020"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe8d381b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe8d38340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe8d384d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe8d38660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe8d387f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe8d38980"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe8d38b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe8d38ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe8d38e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe8d37020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe8d371b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe8d37340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f1fe8d0dd10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1fe8d0dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1fe8d340e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1fe8d34270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1fe8d34400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1fe8d34590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1fe8d34720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1fe8d348b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1fe8d34a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1fe8d34bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe8d34d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1fe8d33020"/>
        <function-ref name="getData" scoped="" ref="0x7f1fe8d331b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1fe8d33340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1fe8d334d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1fe8d33760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1fe8d338f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1fe8d33a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1fe8d33c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1fe8d33da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1fe8d0b020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1fe8d0b1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1fe8d0b340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1fe8d0b4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1fe8d0b660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1fe8d0b7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1fe8d0b980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1fe8d0bd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1fe8d0a020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1fe8d0a1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1fe8d0a340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1fe8d0a4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1fe8d0a660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1fe8d0a7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1fe8d0a980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1fe8d0ab10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1fe8d0aca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1fe8d0ae30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1fe8d09020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1fe8d091b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1fe8d09340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1fe8d094d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1fe8d09660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1fe8d097f0"/>
        <function-ref name="setData" scoped="" ref="0x7f1fe8d09980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1fe8d09b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1fe8d09ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1fe8d09e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1fe8d08020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1fe8d081b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1fe8d08340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1fe8d088d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1fe8d08a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1fe8d08bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1fe8d08d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1fe8d07020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1fe8d071b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1fe8d07340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1fe8d074d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1fe8d07660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1fe8d077f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1fe8d05b20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1fe8d05b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8d04020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8d041b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8d04340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8d044d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8d04660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8d047f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8d04980"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8d04b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8d04ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8d04e30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8d03020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8d031b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8d03340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8d035d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8d03760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1fe8d35150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8d35150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8d354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1fe8d07bb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1fe8d07bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8d06020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8d061b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8d06340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8d064d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8d06660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8d067f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8d06980"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8d06b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8d06ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8d06e30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8d05020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8d051b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8d05340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8d055d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8d05760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe7c31d90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7c31d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe7c2f180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7c2f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f1fe7c29020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1fe7c29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe7c293a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe7c225d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7c225d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe7c22950"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7c22ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1fe7c29630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1fe7c29630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1fe7c299b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1fe7c29b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1fe7c29cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1fe7c29e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1fe7c28020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1fe7c281b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1fe7c28340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1fe7c284d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe7c28660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1fe7c287f0"/>
        <function-ref name="getData" scoped="" ref="0x7f1fe7c28980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1fe7c28b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1fe7c28ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1fe7c27020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1fe7c271b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1fe7c27340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1fe7c274d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1fe7c27660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1fe7c277f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1fe7c27980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1fe7c27b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1fe7c27ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1fe7c27e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1fe7c26020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1fe7c261b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1fe7c26540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1fe7c266d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1fe7c26860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1fe7c269f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1fe7c26b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1fe7c26d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1fe7c25020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1fe7c251b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1fe7c25340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1fe7c254d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1fe7c25660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1fe7c257f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1fe7c25980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1fe7c25b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1fe7c25ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1fe7c25e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1fe7c24020"/>
        <function-ref name="setData" scoped="" ref="0x7f1fe7c241b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1fe7c24340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1fe7c244d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1fe7c24660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1fe7c247f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1fe7c24980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1fe7c24b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1fe7c23420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1fe7c235b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1fe7c23740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1fe7c238d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1fe7c23a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1fe7c23bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1fe7c23d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1fe7c22020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1fe7c221b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1fe7c22340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1fe7c2a760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1fe7c2a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe7c2aae0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe7c2ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7c31140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7c31140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7c314c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7c31650"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7c317e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7c31970"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7c31b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1fe7c2fd40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1fe7c2fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe7c2e0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe7c2e270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe7c2e400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe7c2e590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe7c2e720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe7c2e8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe7c2ea40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe7c2ebd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe7c2ed60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe7c2d020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe7c2d1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe7c2d340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe7c2d4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe7c2d760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe7c2d8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe7c2da80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe7c2dc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe7c2dda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe7c2c020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe7c2c1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe7c2c340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe7c2c4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe7c2c660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe7c2c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe7c2c980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe7c2cd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe7c2b020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe7c2b1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe7c2b340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe7c2b4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe7c2b660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe7c2b7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe7c2b980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe7c2bb10"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe7c2bca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe7c2be30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe7c2a020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe7c2a1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe7c2a340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe7c2a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe7c2f5a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7c2f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7c2f920"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7c2fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe8c5f2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe8c5f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe8c5f640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe8c5f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe8c5e8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8c5e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe8c5ec20"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe8c5edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1fe8c634d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8c634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8c63850"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8c639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8c60020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8c603a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8c60530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8c606c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8c60850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8c609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1fe8c613f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8c613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8c61770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe8c5fad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c5fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe8c5fe50"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe8c5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1fe8c5ae50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe8c59210"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe8c593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1fe8c5c060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1fe8c5c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8c5c400"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8c5c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1fe8c5a840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1fe8c5a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8c5abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1fe8c5c990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1fe8c5c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8c5cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1fe8c5a060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1fe8c5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1fe8c5a3e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1fe8c5a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe8c56850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe8c56850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe8c56bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe8c56d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe8c54570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe8c54570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe8c54910"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe8c54aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1fe8c55020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe8c55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8c553a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe8c55530"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8c556c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8c55850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe8c559e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8c57a80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8c57a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8c57e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8c56020"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8c561b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8c56340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8c564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe8c55c30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe8c55c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe8c54020"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe8c541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe7bbd020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe7bbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe7bbd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1fe7bbd630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe7bbd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7bbd9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7bbdb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7bbdcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7bbde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1fe7bb96c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1fe7bb96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1fe7bb9a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7bb9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1fe7bb7400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1fe7bb7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1fe7bb77a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1fe7bb7930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1fe7bb7bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1fe7bb7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe7bb6020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe7bb61b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe7bb6340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe7bb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1fe7bb9e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1fe7bb9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7bb81e0"/>
        <function-ref name="requested" scoped="" ref="0x7f1fe7bb8370"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7bb8500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7bb8690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1fe7bb8820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe7bb6720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe7bb6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe7bb6aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe7bb6c30"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe7bb6dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe7bb5020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe7bb51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe7bb5340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe7bb54d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe7bb5b10"/>
        <function-ref name="set" scoped="" ref="0x7f1fe7bb57f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe7bb5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe7bb5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe7bba850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe7bba850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe7bbabf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe7bbad80"/>
        <function-ref name="request" scoped="" ref="0x7f1fe7bb9020"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe7bb91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe7bb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1fe7bb8a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1fe7bb8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1fe7bb8df0"/>
        <function-ref name="userId" scoped="" ref="0x7f1fe7bb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1fe7bb5de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1fe7bb5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe7bb3180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe7bb3310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1fe8c4a540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1fe8c4a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1fe8c4a8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1fe8c4aa50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1fe8c4abe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1fe8c4ad70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1fe8c47020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1fe8c471b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1fe8c47340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1fe8c474d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe8c47660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1fe8c477f0"/>
        <function-ref name="getData" scoped="" ref="0x7f1fe8c47980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1fe8c47b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1fe8c47ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1fe8c46020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1fe8c461b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1fe8c46340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1fe8c464d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1fe8c46660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1fe8c467f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1fe8c46980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1fe8c46b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1fe8c46ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1fe8c46e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1fe8c45020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1fe8c451b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1fe8c45540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1fe8c456d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1fe8c45860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1fe8c459f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1fe8c45b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1fe8c45d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1fe8c44020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1fe8c441b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1fe8c44340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1fe8c444d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1fe8c44660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1fe8c447f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1fe8c44980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1fe8c44b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1fe8c44ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1fe8c44e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1fe8c43020"/>
        <function-ref name="setData" scoped="" ref="0x7f1fe8c431b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1fe8c43340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1fe8c434d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1fe8c43660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1fe8c437f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1fe8c43980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1fe8c43b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1fe8c42420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1fe8c425b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1fe8c42740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1fe8c428d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1fe8c42a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1fe8c42bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1fe8c42d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1fe8c41020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1fe8c411b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1fe8c41340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f1fe8c37250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f1fe8c37250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1fe8c375d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1fe8c37760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1fe8c378f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1fe8c37a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1fe8c37c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1fe8c37da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1fe8c36020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1fe8c361b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1fe8c36340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1fe8c364d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1fe8c36660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1fe8c367f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1fe8c36980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1fe8c36c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1fe8c36da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1fe8c35020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1fe8c351b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1fe8c35340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1fe8c354d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1fe8c35660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1fe8c357f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1fe8c35980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1fe8c35b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1fe8c35ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe8c35e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1fe8c34220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1fe8c343b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1fe8c34540"/>
        <function-ref name="tx" scoped="" ref="0x7f1fe8c346d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1fe8c34860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1fe8c349f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1fe8c34b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1fe8c34d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1fe8c33020"/>
        <function-ref name="rx" scoped="" ref="0x7f1fe8c331b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1fe8c33340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1fe8c334d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1fe8c33660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1fe8c337f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1fe8c33980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1fe8c31cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1fe8c31cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8c300a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8c30230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8c303c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8c30550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8c306e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8c30870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8c30a00"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8c30b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8c30d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8c2f020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8c2f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8c2f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8c2f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8c2f760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8c2f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f1fe8c3e430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1fe8c3e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1fe8c3e7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1fe8c3e940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1fe8c3ead0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1fe8c3ec60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1fe8c3edf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1fe8c3d020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1fe8c3d1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1fe8c3d340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe8c3d4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1fe8c3d660"/>
        <function-ref name="getData" scoped="" ref="0x7f1fe8c3d7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1fe8c3d980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1fe8c3db10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1fe8c3dda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1fe8c3c020"/>
        <function-ref name="getIV" scoped="" ref="0x7f1fe8c3c1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1fe8c3c340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1fe8c3c4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1fe8c3c660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1fe8c3c7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1fe8c3c980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1fe8c3cb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1fe8c3cca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1fe8c3ce30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1fe8c3b020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1fe8c3b3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1fe8c3b540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1fe8c3b6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1fe8c3b860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1fe8c3b9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1fe8c3bb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1fe8c3bd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1fe8c3a020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1fe8c3a1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1fe8c3a340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1fe8c3a4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1fe8c3a660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1fe8c3a7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1fe8c3a980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1fe8c3ab10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1fe8c3aca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1fe8c3ae30"/>
        <function-ref name="setData" scoped="" ref="0x7f1fe8c39020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1fe8c391b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1fe8c39340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1fe8c394d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1fe8c39660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1fe8c397f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1fe8c39980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1fe8c38020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1fe8c381b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1fe8c38340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1fe8c384d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1fe8c38660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1fe8c387f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1fe8c38980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1fe8c38b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1fe8c38ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1fe8c38e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1fe8c33d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1fe8c33d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8c320e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8c32270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8c32400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8c32590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8c32720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8c328b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8c32a40"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8c32bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8c32d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8c31020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8c311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8c31340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8c314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8c31760"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8c318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1fe8b1bc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8b1bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1a210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1fe8b28da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1fe8b28da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b27180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1fe8b1fb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8b1fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1d020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1fe8b19670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8b19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b199f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1fe8b12e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8b12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b11210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1fe8b19e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8b19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b18210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1fe8b052f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe8b052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b05670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b05800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1fe8b072f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe8b072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b07670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b07800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1fe8b26120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8b26120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b264a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1fe8b0d670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1fe8b0d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1fe8b082f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe8b082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b08670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b08800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1fe8b1dc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1fe8b1dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1c020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1fe8b1cc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8b1cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1b020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1fe8b13670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8b13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b139f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b13b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1fe8b15e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1fe8b15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b14210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1fe8b18670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8b18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b189f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe8b29760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8b29760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe8b29ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe8b29c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe8b29e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1fe8b22aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe8b22aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b22e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1fe8b21120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1fe8b21120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b215a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1fe8b0ca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8b0ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1fe8b21870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8b21870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b21bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1fe8b08ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8b08ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b08e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1fe8b26dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8b26dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b22180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1fe8b0ee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8b0ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0d210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1fe8b1c480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8b1c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1c800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1fe8b1d480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8b1d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1d800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1fe8b28750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8b28750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b28ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1fe8b0fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8b0fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0e210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1fe8b11670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8b11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b119f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b11b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1fe8b0e670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8b0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1fe8b06ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe8b06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b06e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1fe8b07ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe8b07ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b07e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1fe8b14670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1fe8b14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b149f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b14b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1fe8b11e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8b11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0f210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1fe8b0aad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8b0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0ae50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1fe8b16670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe8b16670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b169f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b16b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1fe8b05ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8b05ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8b05e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8b04020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b041b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8b04340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8b044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1fe8b28100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe8b28100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b28480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1fe8b1f370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1fe8b1f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1f6f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1fe8b1b480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8b1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1b800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1fe8b13e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8b13e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b12210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1fe8b18e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8b18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b16210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1fe8b12670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8b12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b129f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b12b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1fe8b1a670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8b1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b1a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b1ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1fe8b27450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1fe8b27450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b277d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1fe8b1ae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8b1ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b19210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8b2aa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8b2aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8b2ae00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8b29020"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8b291b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8b29340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8b294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1fe8b20020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8b20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1fe8b20cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1fe8b20cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b1f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1fe8b0a2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1fe8b0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0a670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1fe8b0bad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8b0bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0be50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1fe8b22450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8b22450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b227d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1fe8b0b2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8b0b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0b670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1fe8b062f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1fe8b062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b06670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b06800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1fe8b14e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8b14e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b13210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1fe8b0f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8b0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1fe8b27aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1fe8b27aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b27e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1fe8b26770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8b26770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b26af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1fe8b16e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe8b16e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b15210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1fe8b20670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1fe8b20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8b209f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1fe8b15670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8b15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b159f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1fe8b0de50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8b0de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8b0c610"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b0c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1fe8b047a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8b047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8b04b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8b04cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8b04e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8b03020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8b031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1fe8aefc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8aefc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aed210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1fe8af9da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1fe8af9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1fe8af2b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8af2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8af1020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8af11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1fe8aec670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8aec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aec9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1fe8ae5e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8ae5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae4210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1fe8aece50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8aece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aeb210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aeb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1fe8ad82f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe8ad82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ad8670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ad8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1fe8adb2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe8adb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adb670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8adb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1fe8af7120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8af7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1fe8ae1670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1fe8ae1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae19f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1fe8adc2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe8adc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adc670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8adc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1fe8af1c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1fe8af1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8af0020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8af01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1fe8af0c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8af0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aef020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1fe8ae6670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8ae6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae69f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1fe8ae9e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1fe8ae9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae8210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1fe8aeb670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8aeb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aeb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe8afb760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe8afb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe8afbae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe8afbc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe8afbe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1fe8af6aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe8af6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1fe8af5120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1fe8af5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1fe8adfa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8adfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adfdf0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1fe8af5870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8af5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1fe8adcad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8adcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adce50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8adb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1fe8af7dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe8af7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1fe8ae2e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8ae2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae1210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1fe8af0480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8af0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8af0800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8af0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1fe8af1480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8af1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8af1800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8af1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1fe8af9750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe8af9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1fe8ae3e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8ae3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae2210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1fe8ae4670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8ae4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae49f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1fe8ae2670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8ae2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae29f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1fe8adaad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe8adaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adae50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ad8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1fe8adbad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe8adbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adbe50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ada020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1fe8ae8670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1fe8ae8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae89f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1fe8ae4e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8ae4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae3210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1fe8addad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8addad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adde50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8adc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1fe8aea670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe8aea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aea9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aeab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1fe8ad8ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8ad8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8ad8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8ad7020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ad71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8ad7340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8ad74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1fe8af9100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe8af9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af9480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1fe8af2370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1fe8af2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8af26f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8af2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1fe8aef480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8aef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aef800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aef990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1fe8ae6e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8ae6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae5210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1fe8aebe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8aebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aea210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1fe8ae5670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8ae5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae59f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1fe8aed670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8aed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aed9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aedb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1fe8af8450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1fe8af8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1fe8aede50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8aede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aec210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8aec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8afc9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8afc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8afcd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8afb020"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8afb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8afb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8afb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1fe8af3020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8af3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1fe8af3cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1fe8af3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1fe8add2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1fe8add2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8add670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8add800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1fe8adead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8adead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adee50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8add020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1fe8af6450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8af6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1fe8ade2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8ade2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ade670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ade800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1fe8ada2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1fe8ada2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ada670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ada800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1fe8ae8e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8ae8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae6210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1fe8ae3670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8ae3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae39f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1fe8af8aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1fe8af8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1fe8af7770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8af7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1fe8aeae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe8aeae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae9210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1fe8af3670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1fe8af3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8af39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1fe8ae9670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8ae9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ae99f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ae9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1fe8ae1e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8ae1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8adf610"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8adf7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1fe8ad77a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8ad77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8ad7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8ad7cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8ad7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8ad6020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8ad61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f1fe8acfb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe8acfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1fe8acc020"/>
        <function-ref name="changed" scoped="" ref="0x7f1fe8acc1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1fe8acc340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1fe8acc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1fe8aced20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8aced20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1fe8ab80e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1fe8ab4310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1fe8ab4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1fe8ab4690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f1fe8ab1880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8ab1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8ab1c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f1fe8aa6020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aa63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f1fe8a9cbd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1fe8a9cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8a9f020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8a9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f1fe8a9f530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f1fe8a9f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe8a9f8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8a9fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f1fe8aa0140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1fe8aa0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8aa04c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f1fe8aa5c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1fe8aa5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8a8c020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8a8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f1fe8a8c540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f1fe8a8c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a8c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a8ca50"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a8cbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a8cd70"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a8b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a8b340"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f1fe8a82950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a82950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1fe8a85780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f1fe8a88150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1fe8a88150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8a884d0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8a88660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f1fe8a889f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f1fe8a889f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a88d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a86020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a86340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a86660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a867f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a86980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1fe8a8aca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a8aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1fe8a62ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1fe8a60a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1fe8a60a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1fe8a5f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe8a4f020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe8a4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8a4fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8a4e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8a4e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8a4ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f1fe8a4a530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1fe8a4a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8a493d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8a49d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8a49890"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8a47260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1fe8a42020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1fe8a42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe8a423a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1fe8a42530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1fe8a426c0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a42850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1fe8a429e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8a42b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1fe8a42d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8a41020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8a411b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1fe8a41340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1fe8a414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1fe8a46e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe8a46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1fea167d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8a45ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8a44670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8a441b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8a44b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f1fe8a8d590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f1fe8a8d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a8d910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a8daa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a8dc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a8ddc0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a3d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a3d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a3d340"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1fe8a3bc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1fe8a3bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a3a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a3a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1fe8a3a340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a3a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a3a660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1fe8a3a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a3a980"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a3ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1fe8a3aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1fe8a3ae30"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a39020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1fe8a391b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1fe8a39340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1fe8a395d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a39760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1fe8a3c9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1fe8a3c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a3cd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a3b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a3b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a3b340"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a3b660"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a3b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a3b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe8a3ea20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a3ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe8a3eda0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8a34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1fe8a25cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe8a25cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe8a240a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe8a24230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe8a243c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe8a24550"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe8a246e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe8a24870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1fe8a21990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1fe8a21990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1fe8a21d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f1fe8a25020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1fe8a25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8a253a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8a25530"/>
        <function-ref name="modify" scoped="" ref="0x7f1fe8a256c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8a25850"/>
        <function-ref name="resend" scoped="" ref="0x7f1fe8a259e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe8a286c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe8a28a40"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8a28bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1fe8a23150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1fe8a23150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1fe8a234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1fe8a16970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe8a16970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe8a16cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe8a16e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe8a15030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe8a151c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe8a15350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe8a154e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1fe8a0e950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1fe8a0e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe8a0b020"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe8a0b750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe8a0d780"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a0be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1fe89f6020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe89f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89f63a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89f6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1fe89f6890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe89f6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89f6c10"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1fe8a15900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1fe8a15900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1fe8a15c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f1fe89fa530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe89fa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89fa8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f1fe8a09880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1fe8a09880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1fe8a09c00"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8a09d90"/>
        <function-ref name="captured" scoped="" ref="0x7f1fe8a08020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1fe8a081b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f1fe8a14ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f1fe8a14ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe8a10390"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8a11360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1fe8a11ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe8a11820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1fe8a10850"/>
        <function-ref name="start" scoped="" ref="0x7f1fe8a13970"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8a13e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1fe8a10d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe8a10d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe8a0f0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe8a0f230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe8a0f3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe8a0f550"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe8a0f6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe8a0f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f1fe89fc550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe89fc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89fc8d0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89fca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1fe89fce00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe89fce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89fb1c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89fb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f1fe89eed40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe89eed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe89f10e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1fe89f1270"/>
        <function-ref name="sfd" scoped="" ref="0x7f1fe89f1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe8a17bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe8a17bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8a16020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8a161b0"/>
        <function-ref name="modify" scoped="" ref="0x7f1fe8a16340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8a164d0"/>
        <function-ref name="resend" scoped="" ref="0x7f1fe8a16660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f1fe89fed10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe89fed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe89fd0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe89fd270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe89fd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f1fe89fac60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe89fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1fe8a01820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1fe8a01820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a01ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a01d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a00020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a001b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a00340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a004d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a00660"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8a19c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8a19c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe8a17020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe8a0fbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe8a0fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8a0e020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe8a0e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe8a0e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1fe8a03be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe8a03be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8a09020"/>
        <function-ref name="isSet" scoped="" ref="0x7f1fe8a091b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8a09340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1fe89f93e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe89f93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89f9960"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89f9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1fe89fe020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1fe89fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe89fe3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe89fe530"/>
        <function-ref name="request" scoped="" ref="0x7f1fe89fe6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe89fe850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe89fe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f1fe8a08500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1fe8a08500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8a08980"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8a08b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8a08ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8a08e30"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8a01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8a011b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8a01340"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8a014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1fe89f5130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe89f5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89f54b0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89f5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f1fe89f59c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe89f59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89f5d40"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1fe89fb6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe89fb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89fba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f1fe8a00b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1fe8a00b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe89ff020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe89ff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe89ff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe89ff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe89ff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe89ff7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe89ff980"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe89ffb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe89f16c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe89f16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe89f1a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe89f1bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe89f1d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe89ed020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe89ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe89ed340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe89ed4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe89edb10"/>
        <function-ref name="set" scoped="" ref="0x7f1fe89ed660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe89ed7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe89ed980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1fe89f75e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe89f75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89f7960"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89f7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe8a17320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe8a17320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe8a176a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8a17830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f1fe89fd780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe89fd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe89fdb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe89fdc90"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89fde20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe89fc020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe89fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f1fe89fbde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1fe89fbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89fa180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f1fe89f9e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1fe89f9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89f7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1fe8a140f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1fe8a140f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1fe8a14470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1fe8954c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe8954c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8952210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1fe895d020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1fe895d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1fe8957c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8957c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8956020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1fe8951670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8951670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89519f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8951b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1fe894ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1fe894ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8949210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1fe8951e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1fe8951e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8950210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1fe893d2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe893d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe893d670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe893d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1fe89402f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe89402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8940670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8940800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1fe895c370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe895c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1fe8946670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1fe8946670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89469f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8946b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1fe89412f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe89412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8941670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8941800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1fe8956c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1fe8956c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8955020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1fe8955c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8955c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8954020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1fe894b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe894b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1fe894ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1fe894ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894d210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1fe8950670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe8950670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89509f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8950b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe89608f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe89608f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe8960c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe8960e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe895e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1fe895bd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe895bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1fe895a370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1fe895a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1fe8944a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8944a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8944df0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8943020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1fe895aac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe895aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1fe8941ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8941ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8941e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8940020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1fe895b060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe895b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1fe8947e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8947e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8946210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1fe8955480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8955480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8955800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8955990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1fe8956480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8956480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8956800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8956990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1fe895e940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe895e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1fe8948e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8948e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8947210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1fe8949670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8949670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89499f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8949b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1fe8947670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8947670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89479f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8947b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1fe893fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe893fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe893fe50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe893d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1fe8940ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe8940ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8940e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe893f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1fe894d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1fe894d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1fe8949e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8949e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8948210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1fe8942ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe8942ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8942e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8941020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1fe894f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe894f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1fe893dad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe893dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe893de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe893c020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe893c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe893c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe893c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1fe895e2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe895e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1fe8957490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1fe8957490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8957810"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89579a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1fe8954480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8954480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8954800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8954990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1fe894be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe894be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894a210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1fe8950e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe8950e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894f210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1fe894a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe894a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1fe8952670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe8952670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89529f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8952b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1fe895d670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1fe895d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1fe8952e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe8952e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8951210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe8961c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe8961c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8960020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe89601b0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8960340"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe89604d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe8960660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1fe8958160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8958160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89584e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1fe8958e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1fe8958e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe89571c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1fe89422f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1fe89422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8942670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8942800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1fe8943ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe8943ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8943e50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8942020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1fe895b6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe895b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1fe89432f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe89432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8943670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8943800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1fe893f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1fe893f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe893f670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe893f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1fe894de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe894de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894b210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1fe8948670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8948670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89489f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8948b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1fe895dcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1fe895dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1fe895c9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe895c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe895cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1fe894fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe894fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894e210"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1fe89587b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1fe89587b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8958b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1fe894e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1fe894e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe894e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe894eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1fe8946e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8946e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8944610"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89447a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1fe893c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe893c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe893cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe893ccb0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe893ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe893b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe893b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1fe8930df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe8930df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe892d1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1fe892d350"/>
        <function-ref name="sfd" scoped="" ref="0x7f1fe892d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe892d7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe892d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe892db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1fe892c020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1fe892c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1fe892c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe89305c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe89305c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe8930940"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8930ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f1fe8925380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1fe8925380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8925700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8925890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8925a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8925bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8925d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8924020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe89241b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8924340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1fe891db90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe891db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1fe891c020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1fe891c1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1fe891c340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1fe891c4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1fe891c660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1fe891c7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1fe891c980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1fe891cb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1fe891cca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1fe891ce30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1fe891b020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1fe891b1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f1fe891b340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1fe891b5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1fe891b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f1fe89069d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f1fe89069d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe8906d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe8905020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1fe891bd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1fe891bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe8919330"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe8919a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe891aba0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8917210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f1fe89246b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1fe89246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe8924a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8924bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe8924d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8923020"/>
        <function-ref name="get" scoped="" ref="0x7f1fe89231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8923340"/>
        <function-ref name="set" scoped="" ref="0x7f1fe89234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8923660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1fe8916cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe8916cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89150a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8915230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1fe8915590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe8915590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8915910"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8915aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f1fe89146d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe89146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8914a50"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8914be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1fe891e330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe891e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe891e6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe891e840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe891e9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe891eb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe891ecf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe891ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1fe8928550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1fe8928550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe89288d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1fe8928a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f1fe8928bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f1fe891f3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1fe891f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe891f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1fe8926020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1fe8926020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1fe89263a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1fe8926530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1fe89266c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1fe8926850"/>
        <function-ref name="get" scoped="" ref="0x7f1fe89269e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1fe8926b70"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8926d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1fe8925020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f1fe8913020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe8913020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89133a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8913530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8929620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8929620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe89299a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe891d1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe891d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe891d560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe891d6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe891d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe8927020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe8927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe89273a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1fe89216e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1fe89216e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8921a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8921bf0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8921d80"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8920020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe89201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1fe8915e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe8915e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe89141c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8914350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f1fe8920530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8920530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe89208b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8920a40"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8920bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8920d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe891f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1fe89138b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe89138b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8913e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1fe89277c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1fe89277c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1fe8927b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe8912150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe8912150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe89124d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe8912660"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe89127f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe8912980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe8912b10"/>
        <function-ref name="get" scoped="" ref="0x7f1fe8912ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe8912e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe89114d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8911020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe89111b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe8911340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1fe89163e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe89163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8916760"/>
        <function-ref name="write" scoped="" ref="0x7f1fe89168f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f1fe8917b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8917b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8916020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f1fe8923a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1fe8923a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1fe8923dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f1fe8921020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1fe89211b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1fe8921340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f1fe891fad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe891fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe891e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1fe8929ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1fe8929ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1fe89280a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8928230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1fe88a5a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe88a5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1fe88a5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1fe88a9670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe88a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe88a99f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe88a9b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe88a9d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe88a6020"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe88a61b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe88a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1fe88a4550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe88a4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe88a3b00"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe88a22a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe88a33d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe88a29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1fe88a50c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe88a50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe88a5440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe88a55d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe88a5760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1fe889c480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe889c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe889c800"/>
        <function-ref name="isSet" scoped="" ref="0x7f1fe889c990"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe889cb20"/>
        <function-ref name="set" scoped="" ref="0x7f1fe889ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1fe88a0660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe88a0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe889fce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe889e460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe889f5b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe889eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1fe88a66e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1fe88a66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe88a6a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe88a6bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe88a6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1fe8896020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1fe8896020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1fe88963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1fe889bd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe889bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe88980e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe8898270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe8898400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe8898590"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe8898720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe88988b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1fe888d4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe888d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe888d820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe888d9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe888db40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe888dcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe888de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1fe8896a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1fe8896a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe8894020"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe8894750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe88958d0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe8894e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1fe8897640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe8897640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe88979c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe8897b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe8897ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1fe888e8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1fe888e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe888ec30"/>
        <function-ref name="isSet" scoped="" ref="0x7f1fe888edc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe888d020"/>
        <function-ref name="set" scoped="" ref="0x7f1fe888d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f1fe888c3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1fe888c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe888b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1fe888b6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1fe888b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe888a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1fe8892af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1fe8892af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1fe88900d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1fe8890800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1fe8891970"/>
        <function-ref name="set" scoped="" ref="0x7f1fe888e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1fe8898c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1fe8898c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe8897020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe88971b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe8897340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1fe883bcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1fe883bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe883a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1fe8839020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1fe8839020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea167270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1fea1675e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1fe8839e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1fe8837800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1fe8837340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1fe8837cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1fe88340b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1fe88340b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fea168680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1fea168df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1fe8830630"/>
        <function-ref name="fired" scoped="" ref="0x7f1fe8833b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1fe8832920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1fe88324a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1fe882f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1fe8830ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1fe8832020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1fe8834ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1fe8830020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1fe88331b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe8833680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1fe881f620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1fe881f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881fba0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1fe882a940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1fe882a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe882acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1fe8822620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1fe8822620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88229a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8822b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1fe881d060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1fe881d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881d3e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1fe8816840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1fe8816840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8816bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8816d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1fe881d840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1fe881d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881dbc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1fe880ac60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1fe880ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8809020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe88091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1fe880cc60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1fe880cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880b020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1fe8829cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1fe8829cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88270a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1fe8811060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1fe8811060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88113e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8811570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1fe880dc60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1fe880dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880c020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1fe8821620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1fe8821620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88219a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8821b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1fe8820620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1fe8820620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88209a0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8820b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1fe8817060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1fe8817060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88173e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8817570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1fe8819840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1fe8819840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8819bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8819d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1fe881b060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1fe881b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1fe882b2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1fe882b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1fe882b630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1fe882b7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1fe882b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1fe88266b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1fe88266b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8826a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1fe8826d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1fe8826d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88251c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1fe8810480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1fe8810480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8810800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8810990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1fe8825490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1fe8825490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8825810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1fe880c480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1fe880c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880c800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1fe88279c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1fe88279c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8827d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1fe8812840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1fe8812840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8812bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8812d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1fe8821e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1fe8821e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88201c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8820350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1fe8822e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1fe8822e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88211c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8821350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1fe882a2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1fe882a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe882a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1fe8813840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1fe8813840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8813bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8813d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1fe8814060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1fe8814060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88143e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8814570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1fe8812060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1fe8812060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88123e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8812570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1fe880a480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1fe880a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880a800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1fe880b480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1fe880b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880b800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1fe8818060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1fe8818060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88183e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8818570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1fe8814840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1fe8814840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8814bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8814d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1fe880d480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1fe880d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880d800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1fe881a060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1fe881a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1fe8809480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1fe8809480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe8809800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8809990"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8809b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8809cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8809e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1fe882bc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1fe882bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe882a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1fe8824e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1fe8824e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88221c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8822350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1fe8820e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1fe8820e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881f1c0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1fe8817840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1fe8817840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8817bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8817d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1fe881b840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1fe881b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1fe8816060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1fe8816060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88163e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8816570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1fe881e060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1fe881e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881e3e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1fe8829020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1fe8829020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1fe881e840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1fe881e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881ebc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe882c520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe882c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe882c8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe882ca30"/>
        <function-ref name="request" scoped="" ref="0x7f1fe882cbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe882cd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe882b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1fe8825ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1fe8825ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8825e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1fe88247b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1fe88247b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe8824b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1fe880fc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1fe880fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880d020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1fe880f480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1fe880f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880f800"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1fe8826060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1fe8826060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88263e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1fe8810c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1fe8810c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880f020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1fe880bc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1fe880bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe880a020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe880a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1fe8818840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1fe8818840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8818bc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8818d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1fe8813060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1fe8813060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88133e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8813570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1fe8829670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1fe8829670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88299f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1fe8827370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1fe8827370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88276f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1fe881a840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1fe881a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe881abc0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe881ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1fe8824160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1fe8824160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1fe88244e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1fe8819060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1fe8819060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe88193e0"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8819570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1fe8811840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1fe8811840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1fe8810020"/>
        <function-ref name="write" scoped="" ref="0x7f1fe88101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1fe8808160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1fe8808160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1fe88084e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1fe8808670"/>
        <function-ref name="write" scoped="" ref="0x7f1fe8808800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1fe8808990"/>
        <function-ref name="readDone" scoped="" ref="0x7f1fe8808b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1fe87dea20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1fe87dea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1fe87deda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1fe87db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1fe87dc920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1fe87dc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe87de560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe87e2990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe87e2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe87e2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1fe87d7a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1fe87d7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1fe87d7da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1fe87d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1fe87d8940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1fe87d8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe87d7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe87d8080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe87d8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe87d8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1fe87e0aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe87e0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe87e0e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe87d9020"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe87d91b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe87d9340"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe87d94d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe87d9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe87c0020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe87c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe87c03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87c0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe87c06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe87c0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87c09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe87c1220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe87c1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe87c15a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87c1730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe87c18c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe87c1a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87c1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe87bce60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe87bce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe87bb210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87bb3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe87bb530"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe87bb6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87bb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe87bfa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe87bfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe87bfd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87bc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe87bc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe87bc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1fe87b98f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1fe87b98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1fe87b9c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f1fe87b9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe87bc750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe87bc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe87bcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe87b8170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe87b8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87b84f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe87b8680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe87b8810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f1fe87bbae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe87bbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe87bbe60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe87b9020"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe87b91b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe87b9340"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe87b94d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe87b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1fe87bd690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe87bd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe87bda10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe87bdba0"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe87bdd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe87a3020"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe87a31b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe87a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1fe879d950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1fe879d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe879dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe87a0aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe87a0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe87a0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1fe879d200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1fe879d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe879d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1fe87983f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1fe87983f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe8798770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8799b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8799b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe8798020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe879ce30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe879ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe87991e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe8798a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe8798a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8798df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe8797020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe87971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1fe8799570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1fe8799570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe87998f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1fe8769020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1fe8769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe87693a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe87696b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe87696b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8769a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8769bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe8769d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8768020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe876e8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe876e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe876ec60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe876edf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe876d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe876d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe876d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1fe876dc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe876dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe876b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe876b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe876b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe876b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe876b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe876d5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe876d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe876d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe876fbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe876fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe876e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe876e1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe876e340"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe876e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe876e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1fe876ba50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe876ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe876bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1fe876a170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1fe876a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe876a4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe876a680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe876a810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe876a9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe876ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe8760d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe8760d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe875f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe875f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe875f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe875f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe875f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1fe875fb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1fe875fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe875d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f1fe8730db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f1fe8730db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe872f180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe872f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1fe875d2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe875d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe875d670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe875d800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe875d990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe875db20"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe875dcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe875de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1fe8762a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1fe8762a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8762da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8761020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe87611b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8761340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1fe875cb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1fe875cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe875b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe875b1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe875b340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe875b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe875c170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe875c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe875c4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe875c680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe875c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1fe8762370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1fe8762370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe87626f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1fe87647b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1fe87647b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe8764b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe8764cc0"/>
        <function-ref name="request" scoped="" ref="0x7f1fe8764e50"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe8763020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe87631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1fe87634d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1fe87634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8763850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87639e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe8763b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8763d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8762020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1fe8761840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1fe8761840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe8761bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1fe8760020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1fe8760020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe87603a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe8760530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe87606c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe8760850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe87609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1fe8710dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1fe8710dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1fe870f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1fe870f410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1fe870f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1fe870f790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1fe870f920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1fe870fab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1fe870fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1fe8704b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1fe8704b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe8703020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe87031b0"/>
        <function-ref name="start" scoped="" ref="0x7f1fe8703340"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe87034d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe8702860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe8702860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8702be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8702d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe8701020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe87011b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8701340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1fe8701690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1fe8701690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe8701a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe8708ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe8708ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe87050a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8705230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe87053c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe8705550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe87056e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1fe8704080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe8704080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1fe8704400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1fe8704590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1fe8704720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1fe87048b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f1fe8703800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f1fe8703800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe8703b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe8703d10"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe8702020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe87021b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe8702340"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe87024d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1fe8701d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1fe8701d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1fe86ff180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1fe86ff310"/>
        <function-ref name="start" scoped="" ref="0x7f1fe86ff4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1fe86ff630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe8705980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe8705980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe8705d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1fe86fc2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1fe86fc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1fe86fc650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1fe86fc7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1fe86fc970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1fe86fcb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1fe86fe580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1fe86fe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1fe86fe900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1fe86fea90"/>
        <function-ref name="isState" scoped="" ref="0x7f1fe86fec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1fe86fedb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1fe86fd020"/>
        <function-ref name="forceState" scoped="" ref="0x7f1fe86fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe86efd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe86efd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe86ee180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe86ee310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe86ee4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe86ee630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe86ee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe86f2350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe86f2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe86f26d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe86f2860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe86f29f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe86f2b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe86f2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1fe86ef020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1fe86ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1fe86ef3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1fe86ef530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1fe86ef6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1fe86ef850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1fe86ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1fe86e91c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1fe86e91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe86e9540"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe86e96d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe86e9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1fe86ed410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1fe86ed410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1fe86ed790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1fe86ed920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1fe86edab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1fe86edc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1fe86eddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1fe86c9690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1fe86c9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe86c9a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1fe86cb860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1fe86cb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe86cbbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe86cbd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe86c9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe86c91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe86c9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1fe86c7610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1fe86c7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1fe86c7990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1fe86c7b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1fe86c7cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1fe86c7e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1fe86c6020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1fe86c61b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1fe86c6340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1fe86c64d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1fe86c6660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1fe86c67f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1fe86c6980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1fe86c6b10"/>
        <function-ref name="sync" scoped="" ref="0x7f1fe86c6ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1fe86c5020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1fe86c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1fe86cc8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1fe86cc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe86ccc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe86ccdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe86cb020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe86cb1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe86cb340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe86cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1fe86cdce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1fe86cdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1fe86cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1fe86c41f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1fe86c41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1fe86c4570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1fe86c4700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1fe86c4890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1fe86c4a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f1fe86c4bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1fe86c4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1fe86cea80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe86cea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe86cee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe86cd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe86cd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe86cd340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe86cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1fe86d1020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe86d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe86d13a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe86d1530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe86d16c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe86d1850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe86d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1fe86d0df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1fe86d0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe86cf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1fe86c9ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1fe86c9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1fe86c80a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1fe86c8230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1fe86c83c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1fe86c8550"/>
        <function-ref name="getPower" scoped="" ref="0x7f1fe86c86e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1fe86c8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1fe86c54d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1fe86c54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1fe86c5950"/>
        <function-ref name="changed" scoped="" ref="0x7f1fe86c5ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1fe86c5c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1fe86c5e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1fe86c8b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1fe86c8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe86c7020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1fe86c71b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1fe86c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe86d0210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe86d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe86d0590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1fe86c3d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1fe86c3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1fe86c20e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1fe86c2270"/>
        <function-ref name="led1On" scoped="" ref="0x7f1fe86c2400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1fe86c2590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1fe86c2720"/>
        <function-ref name="get" scoped="" ref="0x7f1fe86c28b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1fe86c2a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1fe86c11b0"/>
        <function-ref name="set" scoped="" ref="0x7f1fe86c2bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1fe86c2d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1fe86c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1fe86cf470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe86cf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe86cf7f0"/>
        <function-ref name="source" scoped="" ref="0x7f1fe86cf980"/>
        <function-ref name="address" scoped="" ref="0x7f1fe86cfb10"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe86cfca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe86cfe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe86ce020"/>
        <function-ref name="type" scoped="" ref="0x7f1fe86ce1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe86ce340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe86ce4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe86ce660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe86ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f1fe86c30f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f1fe86c30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1fe86c3470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1fe86c3600"/>
        <function-ref name="request" scoped="" ref="0x7f1fe86c3790"/>
        <function-ref name="granted" scoped="" ref="0x7f1fe86c3920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1fe86c3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1fe85b1020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe85b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe85b13a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe85b1530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe85b16c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe85b1850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe85b19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1fe85b1c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe85b1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe85b0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe85b01b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe85b0340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe85b04d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe85b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1fe85b08b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85b08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe85b0c30"/>
        <function-ref name="source" scoped="" ref="0x7f1fe85b0dc0"/>
        <function-ref name="address" scoped="" ref="0x7f1fe85af020"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe85af1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe85af340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe85af4d0"/>
        <function-ref name="type" scoped="" ref="0x7f1fe85af660"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe85af7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe85af980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe85afb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe85afca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1fe85ae020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1fe85ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe85ae3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe85ae530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe85ae6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1fe7a53b60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe7a53b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe7a52020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe7a521b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe7a52340"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe7a524d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe7a52660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1fe7a528b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe7a528b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe7a52c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe7a52dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe7a51020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe7a511b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe7a51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1fe7a51590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe7a51590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe7a51910"/>
        <function-ref name="source" scoped="" ref="0x7f1fe7a51aa0"/>
        <function-ref name="address" scoped="" ref="0x7f1fe7a51c30"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe7a51dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe7a50020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe7a501b0"/>
        <function-ref name="type" scoped="" ref="0x7f1fe7a50340"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe7a504d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe7a50660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe7a507f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe7a50980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1fe7a50c10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1fe7a50c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1fe7a4f020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1fe7a4f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1fe7a4f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1fe7a46640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe7a46640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe7a469c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe7a46b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe7a46ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe7a46e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe7a45030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1fe7a452e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe7a452e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe7a45660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe7a457f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe7a45980"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe7a45b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe7a45ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1fe7a44020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe7a44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe7a443a0"/>
        <function-ref name="source" scoped="" ref="0x7f1fe7a44530"/>
        <function-ref name="address" scoped="" ref="0x7f1fe7a446c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe7a44850"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe7a449e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe7a44b70"/>
        <function-ref name="type" scoped="" ref="0x7f1fe7a44d00"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe7a43020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe7a431b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe7a43340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe7a434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe8613930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe8613930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe8613cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe8613e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe8610020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe86101b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe8610340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1fe85c6400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1fe85c6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe85c67a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe85c6930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe85c6ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe85c6c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe85c6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1fe85c74b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1fe85c74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1fe85c7850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe85c79e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe85c7b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1fe85c7d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1fe85c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1fe85c3720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe85c3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe85c3aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe85c3c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe85c3dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe85c2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe85c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1fe85c2480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1fe85c2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe85c2800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe85c2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1fe85c2c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1fe85c2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1fe85c1020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1fe85c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1fe85c4060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85c4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe85c43e0"/>
        <function-ref name="source" scoped="" ref="0x7f1fe85c4570"/>
        <function-ref name="address" scoped="" ref="0x7f1fe85c4700"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe85c4890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe85c4a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe85c4bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1fe85c4d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe85c3020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe85c31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe85c3340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe85c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1fe85a4020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1fe85a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1fe85a43a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1fe85a4530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1fe85a46c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1fe85a4850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1fe85a49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1fe85ab910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1fe85ab910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1fe85abc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1fe85a4c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1fe85a4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1fe85a3020"/>
        <function-ref name="source" scoped="" ref="0x7f1fe85a31b0"/>
        <function-ref name="address" scoped="" ref="0x7f1fe85a3340"/>
        <function-ref name="destination" scoped="" ref="0x7f1fe85a34d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1fe85a3660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1fe85a37f0"/>
        <function-ref name="type" scoped="" ref="0x7f1fe85a3980"/>
        <function-ref name="setType" scoped="" ref="0x7f1fe85a3b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1fe85a3ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1fe85a3e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1fe85a2020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1fea0b2c80" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1fea0b2a00" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1fea0af2a0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1fea0af020" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1fea0b2020" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1fea0b1520" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1fea152190" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f1fea0d7e80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0d7c00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1fea0d4020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0d5c90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1fea0d0490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0d1e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fea0d01c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1fea0d1560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1fea0d35e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0d3020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fea0d3350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1fea0bb020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1fea0bc5e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1fea0bc960" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fea0bcc90" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1fea0b7660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0b7060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fea0b7390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1fea0b6790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1fea0ba390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0ba110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1fea0b88b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0b82d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1fea0b8620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1fea134e30" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea134e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1fea12e720" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1fea12d5d0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea134e30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fea12d020" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1fea12d340" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea134e30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1fea0ad670" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
              <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fea0bdcc0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1fea0ad060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fea0ad390" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1fea137cb0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea137cb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f1fea133e10" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1fea1335f0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f1fea132840" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea137cb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1fea1325c0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea137cb0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1fea143690" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea143690"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1fea135020" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fea143690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1fea13f7b0" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1fea13d020" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1fea13d800" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1fea13c7d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1fea13a020" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1fea13a830" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1fea13c020" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1fea1383f0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1fea138170" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1fea13f020" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1fea13b020" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1fea13b7b0" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1fea0c1d30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0c1ab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1fea0cba10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0cb790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1fea127e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1fea0ce950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0ce6d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1fea0c83a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0cad70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1fea0c8110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1fea0c9e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0c9870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1fea0c9bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1fea0c5810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0c5590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1fea0c3b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0c35e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1fea0c3900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1fea0e91b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1fea0c6600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0c6380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1fea0c02f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1fea0c2cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1fea0c0060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1fea0be190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fea151350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fea151350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1fea1491f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1fea14ea60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1fea14c820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1fea14c250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1fea14c590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1fea14da60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1fea148270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1fea149980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1fea14d270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1fea14f020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1fea151c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1fea14a820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1fea14a250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1fea14a590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1fea14fae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1fea14f860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1fea14e350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1fea0782b0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1fea04b420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1fea04e700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1fea04cce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1fea04e020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f1fea04ee70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f1fea04f0e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1fea04f7c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1fea04c5c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1fea27b020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1fea540c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1fe9ff9020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1fe9ffbcc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1fe9ffd390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1fea044ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1fea043940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1fe9ff9890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1fe9ff87b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1fe9ffb560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1fe9ff8020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1fe9ffdb30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1fe9ffc350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1fe9ffcda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1fea044ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1fea043940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1fe9ffcb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1fea044ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1fea043940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1fe9feb0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1fe9fe8730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1fe9fe84b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1fe9fe72e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1fe9fe7060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1fe9feaca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1fe9fea3e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1fe9feba90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1fe9feb810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1fe9ff23e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1fe9ff2d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1fe9ff2ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1fe9ff1790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1fe9ff1510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1fe9fef2a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1fe9fef020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1fe9fef990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1fea003810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1fea0012a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1fea001020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1fea002020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1fea009aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1fea002760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1fea0069b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1fea003120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1fea006270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1fea0040e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1fea0049f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1fea004770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1fea001cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1fea001a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1fe9fc49f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f1fea19ea80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f1fea19d1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1fea19e2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1fea3b7810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1fea5f9020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1fea5f8020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1fea5f9790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1fea5ed270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1fea5edac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1fe9e99e30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1fe9e985c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1fe9e99020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1fe9e97480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1fe9e99720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1fe9e98ce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1fe9e9a120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1fe9e9a7f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1fe9e6d020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1fe9e6d770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1fe9e682e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1fe9e68060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1fe9e6f770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1fe9e6c780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1fe9e68bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1fe9e6c020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1fe9e6e820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1fe9e69020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1fe9e6e020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1fe9e738b0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1fe9e6a020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1fe9e697c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1fe9e6a7e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1fe9e6f020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe9c1ec40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe9c1ec40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1fe9c1b5a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe9c155d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe9c155d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1fe9c15810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1fe9c11390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1fe9c133b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1fe9c129d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1fe9c12400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1fe9c12740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1fe9c13b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1fe9c11b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1fe9c14390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1fe9c14110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9c15810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1fe9c14bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe9ba44f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe9ba44f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1fe9ba4730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9ba4730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1fe9ba3070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe9ba4730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1fe9ba2190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1fe9ba38f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1fe9ba28f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1fe9a81020" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1fe9a81830" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f1fe9a75390" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f1fe9a75110" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1fe9a7b2a0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1fe9a7b020" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f1fe9a7bae0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1fe9a7a9a0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1fe9a7a3b0" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f1fe9a7a710" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f1fe9a78840" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1fe9a68050" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1fe9a6ba60" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe9a6bda0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f1fe9a65cc0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1fe9a65a40" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1fe9a63ae0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1fe9a63510" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe9a63850" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f1fe9a64930" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f1fe9a613b0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1fe9a60a60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe9a60da0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1fe9a61110" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f1fe9a65270" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1fe9a67950" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1fe9a67020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe9a67360" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1fe9a676b0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1fe9a0dae0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1fe9a064e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1fe9a03890" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1fe9a2ce70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1fe9a2a2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1fe9a09350" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1fe9a0a350" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1fe9a0e980" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1fe9a0ab40" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1fe9a09db0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1fe99fa020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1fe99fb750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f1fe99f2d70" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe99f2af0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f1fe99f2350" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f1fe99cc390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f1fe99d7020" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f1fe99e7de0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a5a190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1fe9a5a9d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1fe99e7b60" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a5a190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1fe9a5a9d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f1fe99da0e0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f1fe99e22a0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a55110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1fe9a55950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1fe99e2020" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a55110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1fe9a55950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1fe99d1750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1fe99cfcf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f1fe99e3830" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a57080"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1fe9a57810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f1fe99e2a90" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a55110"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1fe9a55950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f1fe99de830" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1fe99de5b0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1fe99dfe40" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f1fe99d1020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f1fe99e3040" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a57080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1fe9a57810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1fe99e4da0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a57080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1fe9a57810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1fe99e0c80" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f1fe99d1e80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1fe99df690" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1fe99df410" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f1fe99db190" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f1fe99db910" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1fe99d2070" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f1fe99d5020" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f1fe99d9070" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1fe99d27b0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f1fe99d7800" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f1fe99d05c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1fe99dd070" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1fe9a5d120"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f1fe9a5c810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f1fe99d0d60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f1fe99cdbd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f1fe99e04d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f1fe99e0250" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f1fe99ccd30" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe99ccab0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f1fe99e4600" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe9a5a190"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1fe9a5a9d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f1fe99da850" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f1fe99d6020" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f1fe99d4800" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1fe9a2ce70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1fe9a2a2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe99d4580" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1fe9a2ce70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1fe9a2a2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f1fe99d5af0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1fe9a3d020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1fe9a3d440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe99d5870" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1fe9a3d020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1fe9a3d440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f1fe99cb730" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1fe99cf570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f1fe99dd880" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1fe99cd480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f1fe99d6790" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f1fe99d9850" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1fe9954420" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1fe9954c70" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1fe98ae020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1fe98ae880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1fe9898420" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1fe987e270" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1fe987d350" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1fe98819c0" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1fe987eae0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1fe987dc80" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1fe9871110" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1fe987a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1fe9872e30" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1fe987a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1fe9873120" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1fe9873c20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1fe987a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1fe98739a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1fe987a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1fe9872580" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1fe987a3f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1fe9805770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f1fe97bab30" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f1fe97a3910" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe97a3340" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1fe97a3680" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f1fe97a2190" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f1fe97a4b50" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f1fe97a54e0" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f1fe97a0aa0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1fe97a0820" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1fe97a7270" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f1fe979f5c0" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe979f340" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f1fe97a0020" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe97a29c0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1fe97a2cf0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f1fe97a7c40" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe97a79c0" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f1fe97a42f0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe97a5cd0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1fe97a4060" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1fe975db10" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1fe975d350" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f1fe975fb70" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f1fe975f2b0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1fe96a47b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1fe96a12b0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1fe96a4020" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f1fe96a2a60" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f1fe96a27e0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1fe96a7820" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1fe96a2020" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1fe953fbf0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe953fbf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f1fe9538020" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe953fbf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe953b650" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1fe953b9d0" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe953fbf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f1fe953bd30" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f1fe953cb10" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe953fbf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1fe953c520" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe953fbf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f1fe953c880" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f1fe953ad90" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f1fe953ab10" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1fe9537660" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe9537020" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f1fe95373d0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f1fe9517d20" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f1fe9517d20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f1fe9514730" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f1fe9517d20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1fe950c390" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe950c390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1fe950cc90" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1fe950ba20" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe950c390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1fe950b470" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1fe950b790" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1fe950c390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1fe94eedf0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f1fe9500aa0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe9500820" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f1fe94fd020" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe94fe990" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f1fe94fed00" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f1fe94efa70" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe94f17e0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f1fe94ef0d0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1fe94ef450" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1fe94ef7c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f1fe94eb770" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f1fe94eb0d0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1fe94eb460" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f1fe94f23c0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe94f3150" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f1fe94f39f0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1fe94f3d80" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1fe94f2110" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f1fe94edad0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe94ed850" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1fe949bce0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1fe949b020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe952f110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f1fe952f5e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe949e970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1fe95304e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1fe9531b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f1fe949ed60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe952f110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f1fe952f5e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f1fe949d110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f1fe949d4b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1fe949d860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1fe949dbd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f1fe949ad40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f1fe949a720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1fe949aab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f1fe9498780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f1fe9496020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f1fe947f120" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fe951ece0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1fe951d7a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f1fe947d2a0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe952f110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f1fe952f5e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1fe947d020" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f1fe947a8a0" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f1fe9479aa0" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f1fe94792e0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f1fe9479060" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f1fe947f940" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fe951ce20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1fe951b770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f1fe947e760" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe952f110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f1fe952f5e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1fe947e110" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f1fe947e4d0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1fe952f110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f1fe952f5e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f1fe9478b40" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f1fe9484e40" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fe951ece0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1fe951d7a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f1fe9484bc0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fe951ece0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1fe951d7a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f1fe947dd70" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1fe947daf0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f1fe947c840" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1fe947c5c0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f1fe947a0e0" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f1fe94782b0" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f1fe9477350" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f1fe94818c0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fe951ce20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1fe951b770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f1fe9481640" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1fe951ce20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1fe951b770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe90e61e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe90e61e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1fe90e6420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe90e6420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f1fe90e12a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe90e6420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90e1020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1fe90e0430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90e01b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f1fe90e2020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90e6d60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1fe90df740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe90e6420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90df150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1fe90df4b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe90e6420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1fe90d3990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90d3370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1fe90d3700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1fe90d0b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90d08b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1fe90d4ae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1fe90d4120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1fe90d7e80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1fe90e95f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90e9370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1fe90e87d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90e8550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1fe90e5940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90e56c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f1fe90ab980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90ab700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f1fe90aec30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90ae9b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f1fe90af350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1fe90af0d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f1fe90b1800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1fe90b1580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f1fe90afd80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f1fe90afb00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f1fe90acb10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90ac890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1fe909e2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1fe90a9c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1fe909e020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f1fe90ba810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90ba230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f1fe90ba580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f1fe90b6e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90b6820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f1fe90b6b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f1fe90b9350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1feb043110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90b90d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f1fe90b7d30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90b7ab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f1fe90bb9c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90bb740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f1fe90b9e80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90b9c00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1fe90a2b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90a28b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1fe90a7bc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90a75a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1fe90a7930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1fe90a6ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90a6850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1fe90a6020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90a59c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1fe90a5d50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1fe90a1b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90a18f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1fe90b3780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe90b3500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1fe9098dc0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9098800" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe9098b30" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1fe9090620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9090020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe9090350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1fe908f660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1fe90932a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9093020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1fe9092750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9092170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1fe90924c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1fe9071ca0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe90716e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f1fe9071a10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1fe906f020" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f1fe906c930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1fe906eab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1fe906c360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe906c690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1fe906e2b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1fe906fbb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1fe906e020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f1fe9070780" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f1fe9070500" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1fe9069b50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f1fe9069350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f1fe9062020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9063c90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f1fe9063490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f1fea124960"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f1fea122390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9063190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f1fe9061360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f1fea122e90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f1fea11f7e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe9061060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f1fe90776e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f1fe9075840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f1fe9075070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f1fe907ce20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f1fe9078e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f1fe9076020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f1fe9076840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f1fe90786c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f1fe905ca70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f1fe905d020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f1fe905c2a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f1fe905c020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f1fe905d790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f1fe9066ca0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1fe9066a20" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f1fe905e7a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1fe905e520" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f1fe9000640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f1fe9000060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f1fe90003b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f1fe9002020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f1fe9003690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f1fe9003020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f1fe9003400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f1fe9009a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1fe90097c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f1fe90028a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f1fe9005540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1fe90052c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1fe9008b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1fe9008910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f1fe8fff8a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f1fe90046b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1fe9004430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f1fe8fff070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f1fe9007350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1fe90d6e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1fe90ce5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f1fe9007b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f1fe9009020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1fe90081f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f1fe9005ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1fe8fe2ce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8fe2a60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1fe8fdb7f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8fdb570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f1fe8ff2ab0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1fe90d6e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1fe90ce5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f1fe8fe4860" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1fe8fe37d0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1fe8fe3070" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1fe8fe4020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f1fe8fe8980" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1fea0e9590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1fe8fe8cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1fea0e9970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f1fe8fd7e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1fe8fe0020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1fe8fe1110" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1fe8fe1980" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8fe1cd0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1fe8fde780" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1fe8fe08f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1fe8fde190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8fde4e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f1fe8ecabb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1fe8ec9d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1fe8ec95c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1fe8ec9340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f1fe8eca350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f1fe8e980e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f1fe8e98930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f1fe8e971f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f1fe8e70b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8e70580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8e708d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f1fe8e6bdd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8e6b490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8e6b7e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1fe8e6bb30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1fe8e6d6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8e6d0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8e6d420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f1fe8e72730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1fea1299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8e72150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8e724a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1fe8e6e2c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8e6f930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1fe8e6fc80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1fe8e6e020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1fe8e51df0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1fe8e51480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1fe8e51810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe8e51b50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1fe8e4f3c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1fe8e4e6a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1fe8e4ea30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe8e4ed70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1fe8e4f110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f1fe8e55c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f1fe8e55a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1fe8db8120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1fe9a3d020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1fe9a3d440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f1fe8dc0d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8dc0ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f1fe8dbb2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8dbb020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f1fe8dbd610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1fe8dbbd30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8dbbab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f1fe8d159d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f1fe8d27420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f1fe8d1c620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1fe8d1c3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f1fe8d30af0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f1fe8d19c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f1fe8d215e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f1fe8d28540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f1fe8d262d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1fe8d2a500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f1fe8d2a280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f1fe8d2ca10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f1fe8d23070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f1fe8d1a550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f1fe8d15270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f1fe8d1dc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f1fe8d10350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f1fe8d0d9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f1fe8d2f980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f1fe8d258b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f1fe8d221f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f1fe8d2adc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f1fe8d318c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f1fe8d1d460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1fe8d1d1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f1fe8d31190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f1fe8d194d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f1fe8d14190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f1fe8d0fb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f1fe8d0d270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f1fe8d18b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f1fe8d148c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f1fe8d1cdb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f1fe8d12390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f1fe8d2e0e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f1fe8d1f7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f1fe8d137b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f1fe8d17ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f1fe8d22de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f1fe8d22b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f1fe8d0e2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f1fe8d1ea60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f1fe8d18420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f1fe8d30390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1fe9a17b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f1fe9a16020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1fe8d30110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1fe9a17b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f1fe9a16020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f1fe8d25190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f1fe8d2c2a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1fe8d2c020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f1fe8d239d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1fe8d23750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f1fe8d12b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f1fe8d2bb50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f1fe8d2e850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f1fe8d1e2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f1fe8d1e020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1feb042520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f1fe8d2f270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f1fe8d13020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f1fe8d17350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f1fe8d1acc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f1fe8d1f020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f1fe8d21d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f1fe8d269f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f1fe8d28c80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f1fe8d0ea40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f1fe8d2b3c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1fe8d2b140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f1fe8d10b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f1fe8d27b50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f1fe8d0f350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1fe8ab15e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1fe8ab1360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1fe8a9db00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f1fe8a9d1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1fe8a9d530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe8a9d860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1fe8a9c880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1fe8a9c2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1fe8a9c5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1fe8a83530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1fe8a83530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1fe8a83770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe8a83770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f1fe8a822e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe8a83770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1fe8a82060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1fe8a83770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f1fe8a21580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1fe89ee9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f1fe89ee020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f1fe89ee750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f1fe89ef7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f1fe89ef020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1fe89f4d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1feb042920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f1fe8a053d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1feb042160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe8a05150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f1fe8a073d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1fea5fd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe8a07150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1fe8a03350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe8a030d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1fe8a04390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1fe8a04110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1fea0d9e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1fea0d7450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f1fe87df5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1fe87df5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f1fe87dc2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1fea5f4c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1fe87df5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f1fe87dc020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1fe87df5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
