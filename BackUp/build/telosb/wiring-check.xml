<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:SensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efdc157f560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efdc14ae1f0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efdc14ae1f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efdc12e2590"/></to>
    </wire>
    <wire loc="12:SensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc15658d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc12d1020"/></to>
    </wire>
    <wire loc="13:SensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1575770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc1069640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1069640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SensorAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7efdc155ab70"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7efdc097e310"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7efdc097e310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7efdbf31c8d0"/></to>
    </wire>
    <wire loc="20:SensorAppC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x7efdc1559420"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7efdc0976750"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7efdc0976750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7efdbf230bd0"/></to>
    </wire>
    <wire loc="21:SensorAppC.nc">
      <from><interface-ref name="HumidityRead" scoped="" ref="0x7efdc1558d00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7efdc097c240"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7efdc097c240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7efdbf31a790"/></to>
    </wire>
    <wire loc="24:SensorAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7efdc1562500"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7efdc056e920"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7efdc056e920"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7efdc0538020"/></to>
    </wire>
    <wire loc="25:SensorAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7efdc155fd60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7efdc056bb80"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7efdc056bb80"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7efdc0537270"/></to>
    </wire>
    <wire loc="31:SensorAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdc14fa5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdbf963c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdbf963c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdbee048b0"/></to>
    </wire>
    <wire loc="32:SensorAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdc14eb4e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdbf9628b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdbf9628b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdbee03590"/></to>
    </wire>
    <wire loc="33:SensorAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efdc14e05a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efdbf963020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efdbf963020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efdbee05b60"/></to>
    </wire>
    <wire loc="34:SensorAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7efdc14dc6f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc0528c00"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdc0528c00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc04f72f0"/></to>
    </wire>
    <wire loc="35:SensorAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdc14d8df0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbf95d910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdbf95d910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdc0522020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfac2dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfb4bb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfb6c750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfb88080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfcdb620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfdcbc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc03857e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbef6f020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc0216020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc042b3c0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc063b150"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf1fb060"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc08c0c60"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf2831b0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc0bf53a0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf360020"/></to>
    </wire>
    <wire loc="45:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc0eaf020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc1057400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efdc12e2c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efdc1a253a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efdc1a253a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efdc15d0140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7efdc12e16c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc14ad5a0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc14ad5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc14a99b0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc12e1dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efdc14a60f0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7efdc1488020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efdc1488020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc1485020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7efdc14a67d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc14a8c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7efdc14a5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc12aac40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc1485020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc1470cb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efdc147e6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efdc146e3d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efdc16a84c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7efdc146d680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7efdc142a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc13676d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7efdc1417020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc135fb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7efdc1420700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc136c160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7efdc1404a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc1346cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7efdc1428aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc136d480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7efdc140a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc1346020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7efdc1401a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc132ecb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7efdc14125a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc133f220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7efdc142bb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc13bc9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7efdc1406a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc13542f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7efdc140c3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc1355610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7efdc14165a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc1357220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7efdc141f700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc13647a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7efdc1403a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc133d2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7efdc1415be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc134f6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7efdc1426890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc1365ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7efdc143b060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13cbc80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7efdc140ada0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc133e610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7efdc14310c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc136e020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7efdc1411a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc13386d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7efdc141a6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc1374a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7efdc1405a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc134d7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7efdc1422cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc1375de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7efdc140b1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc134eac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7efdc1402a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc13357a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7efdc14130c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc1348b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7efdc1409b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc1337ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7efdc1407a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc135dcb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7efdc1408a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc132e020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7efdc140e570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efdc135d020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7efdc140f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efdc1330b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efdc13c9c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c95b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efdc13c82f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7efdc1329a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efdc13c8940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7efdc1326260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1373930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13cbc80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc1371020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c95b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc136b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13cbc80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc136a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c95b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1363610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13cbc80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc1362c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c95b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efdc13c1c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efdc13c02f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7efdc13269f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efdc13c0940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7efdc1325240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc135cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc135a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1353160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc13527a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc134c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc134bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1344b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc13422f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc133c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc133b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc1334610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc1333c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc132db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efdc132b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc15ce040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7efdc15ca490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7efdc19bc3b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc12aac40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc12d58d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efdc12c97b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7efdc12ad360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efdc12ad360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc1092440"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efdc12cf980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7efdc12ac6a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efdc12ac6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc107d020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efdc12ceca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7efdc12ab9c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efdc12ab9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc1078b90"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc1081610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7efdc1252200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7efdc1252200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc112e740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc107c2f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7efdc1250200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7efdc1250200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1129100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc1077de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7efdc124e200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7efdc124e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1125d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efdc1293020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11c8100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efdc127f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1198d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7efdc1235560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc118ad10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7efdc1211570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fe100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7efdc1233580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1185740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7efdc127b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc118e100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7efdc1266200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc115fe00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7efdc1242200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1108d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7efdc122d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc117cd10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7efdc121d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc111b100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7efdc1208580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fad10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efdc128d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11b9100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7efdc122b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1176740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efdc1289020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11b0740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7efdc1275020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1180100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7efdc1260200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1150d10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7efdc124c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1120740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7efdc123b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fad10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efdc1297020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11d2d10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efdc1283020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11a2860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7efdc126f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1171100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7efdc1237580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc118ad10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7efdc1217570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc110d100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7efdc120a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fad10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7efdc1223580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1134d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7efdc126a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1168a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7efdc1256200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1138100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7efdc1246200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1112740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7efdc1215570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1108d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7efdc1229570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1142d10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efdc1291020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11c4d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efdc127d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1193740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7efdc124a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc111b100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7efdc1279020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc118ad10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7efdc1264200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc115a740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7efdc1240200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1103740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7efdc1225580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1138100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efdc12a4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11db6d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efdc1287020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11ab100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7efdc1273020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc117cd10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7efdc125e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc114b740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7efdc1221580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1171100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7efdc121b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1117d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7efdc120f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fad10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7efdc125a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1142d10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7efdc121f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc116dd10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efdc1295020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11cd740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efdc1281020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc119c270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7efdc126c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc116dd10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7efdc1227580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc113d740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7efdc1213570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1103740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7efdc1268200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1163460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7efdc1254200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1134d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7efdc1244200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc110d100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efdc128f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11be740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7efdc1248200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1117d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efdc128b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11b5d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7efdc1277020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1185740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7efdc1262200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1155100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7efdc123d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fe100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efdc1299020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11d6100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efdc1285020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc11a7d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7efdc1271020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1176740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7efdc125c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1146100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7efdc122f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1180100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7efdc1219570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1112740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7efdc1231580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1180100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7efdc1258200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc113d740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7efdc120c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc10fe100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7efdc1206580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc1120740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7efdc12391f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efdc118e100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc10561d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efdc10561d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc0ee0690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc1057400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc0f5c760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7efdc104ea80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efdc0ed2cf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc0f5c760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf482380"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7efdc0edbc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc0f30cf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdc0f291d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdc0f5b020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdc0f5b020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf47b020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdc0ec7020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0fd9020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdc0fd9020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0f9d0f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdbf482380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf466a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efdbf475780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf482bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdbf482bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf465340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdbf4773d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0fd9020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf4624c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf46c7b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf46c7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf460a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf46ada0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf46ada0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf45fda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf4680c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf4680c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7efdc1417020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7efdc140e570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7efdc1415be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7efdc140b1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7efdc14130c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7efdc140a020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7efdc14125a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7efdc140ada0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7efdc1411a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7efdc1409b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7efdc140f020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7efdc1408a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efdc0f9a540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efdc0fd0020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efdc0fd0020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0fcb0a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc0fbc2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7efdc0f26490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7efdc0ed5e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb3c50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb0810"/></to>
    </wire>
    <wire loc="48:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7efdc0eb6dc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb2870"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb2870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdc0c06080"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efdc0eabc40"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efdc0e9de10"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efdc0e9de10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efdc0c0b440"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7efdc0bf8080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7efdc0ea86e0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efdc0c0b440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efdc0e2cd00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efdc0e94e10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efdc0c0c440"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efdc0c0c440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efdc0e2f670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0c0a020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0c068e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0c05020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0c0d020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0c0d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0e36c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0c0dc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf3cec70"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf3cec70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0cd5d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0e281d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0c0a020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf3c7d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0e2d8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efdc0e2be50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf3ce020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbf3ce020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0cd6a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0e24710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdbf3c75d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdbf3c75d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efdc0cd9cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0e2d8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0d9fa20"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efdc0e2cd00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efdc0d9d570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efdc0e2f670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efdc0d9e3e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0e36c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0da0b10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0d9b020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0e281d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efdc0d9c230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efdc0e2be50"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0d96290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0e24710"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efdc0d9b690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc0d86900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc0d86900"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efdc0d7e020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdc0d96c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0cf1110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdc0cf1110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efdc0fd0020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc0d93dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdc0d833b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efdc0d7adc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0d860d0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0d82710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efdc0d796d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7efdc1227580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efdc0d77670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7efdc1225580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efdc0d75670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7efdc1223580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efdc0d73670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7efdc121f580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efdc0d71670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7efdc1221580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdbf3cdbe0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc0d86900"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf3cd440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0cd3590"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0cd3590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0c41400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0cd2370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf3c7d70"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0cd5d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0c42020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0c42020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf35c6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efdc0cd9cd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efdc0ccf0d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0cd6a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0c43210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0c43210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf35d850"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0c41400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf35ba70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efdc0cbd0a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdc0d833b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0c41cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0cd2370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0cbc020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0c41400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0c269d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0c427a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0c427a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf35ce40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0c3cb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0d860d0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf35a400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0c41cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efdbf35abc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbf360630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efdbf358de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdbf327470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0c3cb20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdbf327bd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdc0c26400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf326270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0c269d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf326e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0c25720"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7efdc0bf5a00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7efdc0bf8080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7efdc097b900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7efdbf31a020"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7efdc097daa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7efdbf31c160"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7efdbf319e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0b9f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7efdbf3167b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7efdc0b9e2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7efdbf318af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0b9f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7efdbf315c50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7efdc0b9e2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7efdc0b9e2c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7efdc0b22c90"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0b9f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0b0f1d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0b0f1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc09d0b60"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7efdc0b202f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7efdc0b0e020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7efdc0b0e020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b0a330"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7efdc0b1f480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7efdc0b0d370"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7efdc0b0d370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b05d60"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7efdc0b1e610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7efdc0b0c730"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7efdc0b0c730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efdc09e0a30"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc0b1c240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc098f1e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc098f1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc0b17450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7efdc0b152f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7efdc0b16ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc09d0b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf281970"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0b09490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7efdc1291020"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0b03020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7efdc128f020"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0affde0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7efdc128d020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7efdc0af2510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b00b60"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7efdc0af1830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b0a330"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7efdc0af0b40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b05d60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc0af7080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc0ae35a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc0ae35a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc09df610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7efdc0ad1710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efdc0ad1710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7efdc0abd710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdc09c8280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc0af83e0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc099b020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc09cde80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc09cde80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf27ec30"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc099c2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc09cd270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc09cd270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf27e020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7efdc0aee700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efdc0ad2710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efdc0abe710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efdc0ac78a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7efdc0ab48a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efdc0acf710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7efdc0abb710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efdc0acd710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7efdc0ab9710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efdc0ad8710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7efdc0ac0710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efdc0ac9710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7efdc0ab6710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efdc0ac68a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7efdc0ab38a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efdc0ad4660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efdc0ac26b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efdc0acb710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7efdc0ab8710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efdc0ad3710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7efdc0abf710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efdc0ac88a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7efdc0ab58a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efdc0ad0710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7efdc0abc710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efdc0ace710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7efdc0aba710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efdc0ad9710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7efdc0ac1710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efdc0aca710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7efdc0ab7710"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc09ce9e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf27f850"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf27d590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc09cc770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efdbf27dd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbf2837c0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efdbf27a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdbf2490f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc09c8280"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdbf249b70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdc09c8d00"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf248270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc099c2f0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf248e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc099b020"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7efdbf247680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7efdbf247e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7efdbf230bd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7efdc093a390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7efdc0572020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7efdbf22b840"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7efdbf22b840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7efdc06471d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7efdc0976020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7efdc057e8b0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf22e4a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc057b300"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf2285c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc057b300"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7efdc092e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf22e4a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7efdc092c450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdbf222730"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdbf222730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7efdc08c51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7efdc0932640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf223af0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbf223af0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7efdc072ed20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf21f9a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf22e4a0"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7efdc0900e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7efdbf221720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7efdc08c4960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7efdbf21f060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7efdc08c2920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7efdc07251d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc08d2cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7efdbf20f300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf21f9a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7efdc0724740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7efdbf210060"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7efdc08c4960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7efdc08ba1d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7efdc08c1760"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7efdc08b8020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efdc08c2920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7efdc08b91d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7efdc08c51d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7efdc08bd980"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc08d2cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0748520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0748520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf1f86c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7efdc08b8940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0746b20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0746b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf1f7cb0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7efdc08aa650"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7efdc07d7020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7efdc08a3140"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7efdc124a200"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7efdc08a1200"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7efdc1248200"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7efdc089f200"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7efdc1246200"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7efdc089d200"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7efdc1244200"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7efdc089b200"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7efdc1242200"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7efdc0899200"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7efdc1240200"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7efdc0897200"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7efdc123d200"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7efdc0895200"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7efdc123b200"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7efdc08b54f0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7efdc143b060"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7efdc08a8d30"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7efdc142bb10"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7efdc08a6160"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7efdc14310c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7efdc08a5530"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7efdc1422cf0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7efdc08a43a0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7efdc1428aa0"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc07463a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf1f7530"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf1f6610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0745570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efdbf1f6dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7efdbf1fb670"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efdbf1f5900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7efdc072ed20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7efdc06c4ca0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7efdc06c0030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7efdc07251d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7efdc06bc020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7efdc0724740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7efdc06c0d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7efdc071f240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7efdc06bf9c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7efdc071fe00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7efdc071ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc068b4e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc068b4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7efdc0716020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc0684020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc0684020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7efdc07116c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efdc067eb40"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdc067eb40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7efdc071e9a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7efdc07d7020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7efdc06ba7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf1b9280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf2285c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc06435e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf2285c0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc063f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf1bc360"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbf1bc360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7efdc072ed20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdc0642c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdbf1bb020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdbf1bb020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7efdc08c51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7efdc06471d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7efdc05c4cb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc0635b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc06435e0"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc05948f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc063f280"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7efdc0599bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7efdc063be70"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7efdc06361d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdc0642c90"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdc0632020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdc05cd970"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdc05cd970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf1a6020"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7efdc0609380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7efdc0617aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7efdc0611100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc05cd120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf1ad450"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdbf1ad450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf191ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efdbf1a0780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf1adca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdbf1adca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf1905b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdbf1a23d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0fd9020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf18c710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf196880"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf196880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf18bda0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf194020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf194020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf1890c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf193440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf193440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7efdbf1ba020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7efdc08c4960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7efdbf1ba910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7efdc08c2920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7efdc07251d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc08d2cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7efdbf146120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf1b9280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7efdc0724740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7efdbf149dc0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7efdc053e8f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7efdc0564080"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7efdc0564080"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efdc055d2e0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7efdc053f660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0568e80"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0568e80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0562140"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7efdc0536e20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7efdc0543b10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7efdc0533130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7efdc0542ca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc05612f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7efdc127d020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc055dde0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7efdc0ac68a0"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7efdc053d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdc04f72f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc04ce020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efdc0525ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efdc04f6320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efdc04f6320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efdbfa83020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7efdc0522c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7efdc04f31d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7efdc04f31d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7efdbfa82df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdc05212b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdc04f1020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdc04f1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdbfa80a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdc051e430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc56550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc56550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc48a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc0502430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc04dd170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc04dd170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc04bc080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdc0522020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdc04f5510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdc04f5510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfa82210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc0517350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04f0020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04f0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04bd020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdc0520020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdc04f3800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdc04f3800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdbfa81470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdc050e660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdbfc52660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdbfc52660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdbfc44af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdc04ce020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdbfab6b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04ef2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfa7e8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7efdc04db1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7efdbfa7fce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc04e80f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc04be020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc04be020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc04bc080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efdbfab6080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04bd020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efdbfc586e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efdc04d3430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efdc04bcb70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efdc04bcb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efdbfaa1020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdc04e3170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdc04bd9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdc04bd9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdbfc57a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7efdbfa750f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc04cd1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfa7c860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efdc04c9990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7efdc04c9990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efdbfb1ec90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efdbfa7b690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efdc04c1840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7efdc04c1840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efdbfb1da50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdbfa774d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdbfe81b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfa7bce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc4dd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfa7ab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc49640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efdbfa79610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efdc0432b80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efdc0432b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efdc042a7e0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7efdbfa761f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04b6330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04b6330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04b17e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdbfa75d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdbfab6b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7efdbfab2d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdbfc57a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdbfc48020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efdbfaa1020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efdbfa9f410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7efdbfb1ec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efdbfb14a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efdbfab6080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efdbfaae2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7efdc04ca500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfb1e5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdbfb1e5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7efdbfb14370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efdbfc586e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efdbfc4ac50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc04cd1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbfb21be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbfb21be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbfb167b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7efdc04bf6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbfb208e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdbfb208e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7efdbfb154d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efdc04cabc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efdbfb1c170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efdbfb1c170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efdbfb11020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7efdbfb1da50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efdbfb13840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efdbfab2d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc04b8390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efdc04b8390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efdc04b5e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfb1b6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbfb71220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdbfb71220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbfb6fa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfb70020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbfaa4350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdbfaa4350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efdbfaa1d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfaa1d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbfabace0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdbfabace0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efdbfab3860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfab3860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdc04b8e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdc04b8e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdc04b2990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb1b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfab7980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdbfab7980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efdbfab2690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efdbfab2690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfb52aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdbfb52aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfb4ee30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb4f950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdc04b7b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdc04b7b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfcdf7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efdbfcdf7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efdbfcd9020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc04b0640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0442720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0442720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc042ba30"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7efdc04a8b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7efdc043da60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7efdc043da60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7efdc04285b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efdc04ac020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdbfdda6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efdc04ac020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdbfce25c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efdbfce25c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdbfcdbca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efdbfdda6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdbfdc9320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7efdc049fd30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7efdbfdd7020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7efdbfdd7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbfdc9bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7efdc04a6ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfdd7cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfdd7cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfdc8970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc049a020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdc0494660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efdc049e020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efdbfb8ea20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efdbfb8ea20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efdbfb87a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7efdc048fe40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdbfb90aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efdbfb90aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdc021a280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc049e7f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7efdc048a9e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7efdc048ba10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7efdc048ca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7efdc0431e60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7efdc04279b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7efdc04247f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc0381220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc0381220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc037baf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efdc0420a40"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efdc033ce60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efdc033ce60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc032eb60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7efdc041fce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7efdc03376a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7efdc03376a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc031fd70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7efdc041d020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7efdc0335ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7efdc0335ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0315710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7efdc041c400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7efdc02ffd60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7efdc02ffd60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efdc02de8a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efdc04081d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbff0de20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbff0de20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efdc04072b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7efdbff077b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efdbff077b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efdc04079c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7efdbff06ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efdbff06ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efdc0409a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7efdbff08ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efdbff08ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdc0409120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbff05160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbff05160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efdc040ebe0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfefc870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfefc870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efdc0410550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfefa880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfefa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efdc0410e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfef90a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfef90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdc040d710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbff01e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbff01e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdc040c020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbff00670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbff00670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efdc04185a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7efdbfeec500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efdbfeec500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efdc0411c00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfeedce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfeedce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efdc040c8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfefee50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfefee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efdc040b1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7efdbff00e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efdbff00e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdc040ba70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfeffe50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfeffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7efdc0406d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbfedaa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbfedaa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7efdc0406020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbfeae9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbfeae9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdc0416af0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdbfe81b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdc0425de0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdbfe80d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdbfe80d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdbfe66310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7efdc03fa820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7efdc03fc940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc03857e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdc037b260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdc037b260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf105450"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc037baf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf105ca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdbf105450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf0fd3d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdbf105ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf0f6020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdbf0fd3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbf0e2ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efdbf0f0780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf0fdc20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efdbf0fdc20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efdbf0e15b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdbf0f33d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0364080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdc0364080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc035fcd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf0dd710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf0e79d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf0e79d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf0dcda0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf0e5120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf0e5120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf0da0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf0e4440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf0e4440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efdc035c0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efdc0fd0020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7efdc033a090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0329710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7efdc0339390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc03241d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7efdc0383b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0332020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7efdc03369b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdc031ab60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc03312f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efdc1293020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc032dde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7efdc1266200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0328930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7efdc1295020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0323480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efdc12a4020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc031d020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7efdc125e200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0319de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7efdc1268200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0314930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7efdc1260200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7efdc02ff150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efdc02f7a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efdc02fea20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efdc02db8b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc02e65d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7efdc14165a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7efdc02e58f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7efdc1406a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7efdc02e37a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7efdc1268200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc02dd480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efdc0ad2710"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc02da480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efdc0ad4660"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efdbff07160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfefb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efdbfef30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efdbfefa0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfee7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfeea500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efdbff06490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efdbfef0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfeeb500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfef5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efdbfef70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbff09a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0293920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbff05e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efdbff04490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfeeec80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efdbff04be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfeebce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efdbfef00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfeff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfef10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efdbfef3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfef1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfee9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfeeace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efdbfef7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efdbfef20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfeecce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfef9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfee7ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbff08480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efdbff01670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfefe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfef40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfef4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfefb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efdbff022f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efdbff01020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbff057b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfeed500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efdbfee9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfef50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efdbfef2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efdbff07e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfef80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efdbff02940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efdbfef8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efdbfeee0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfee69b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc028ebb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc028c020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc028cdb0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc028f810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc028bba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7efdc0286020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdc021e770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efdc021e770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdc021a280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efdc0289400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc01fbc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc01fbc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbf010770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efdc0287080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efdbff338f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efdbff338f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efdbf00fbe0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efdc027e680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efdbff32020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efdbff32020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efdbefebd70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc0286df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7efdc0279120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efdc021a280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdc0216b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efdbefebd70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efdc01e5510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efdbf00fbe0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efdc01e7db0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbf010770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc01e9320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf00f440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbefe3d90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbefe3d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc00902c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efdc01e7db0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efdc0189440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7efdbefeb2b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7efdc01e6480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7efdc01e6480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7efdc0189a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdc01e3600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdbefea5a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbefd45d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc01e75c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efdc01e4370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbefe3140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbefe3140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0091020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc01e3df0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdbefdc760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdbefdc760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efdc00934d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc01e75c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc018bc40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efdc01e5510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efdc0188700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc01e9320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc018ce80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdc0187e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdc01e3600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efdc0187060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efdc01e4370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0182de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc01e3df0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efdc0186490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc017a860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc017a860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efdc016f360"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdc01815a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7efdc0180c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efdc0173c30"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc0169970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdc01733b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efdc0169020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efdc013aa20"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7efdc1237580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efdc0138990"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7efdc1233580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efdc0136990"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7efdc1231580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efdc0134990"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7efdc122b580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efdc0132990"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7efdc122d580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7efdc013fbc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7efdc0071430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efdbefdb020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc00923f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efdbefdb630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efdc007d540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efdc007d540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7efdc0071430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdbefe1d40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc017a860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbefe15a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0090ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0090ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0086c30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc008f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbefd45d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc00902c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0087850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0087850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbef6b6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efdc00934d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efdc008c060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0091020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc0088a80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdc0088a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbef6c850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc00923f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc008c990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0086c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbef6aa70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0084570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc008f8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc008be50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0086c30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efdc008b060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdc01733b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efdc008b840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efdc0173c30"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0086020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbef6be40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbef69400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0084570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efdbef69bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbef6f630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efdbef66de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7efdc006a250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efdc016f360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efdc0066d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7efdc1237580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efdc0064cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7efdc1231580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfecdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efdbfed8da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfed1b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfecb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efdbfec4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efdbfecbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfeb72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfeb92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfed5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efdbfebf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfeba2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efdbfecfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfecec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfec5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efdbfec7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfeca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfed9760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfed4aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efdbfed3120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfebea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfed3870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfebaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfed5dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efdbfec0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfece480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfecf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfed8750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfec1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efdbfec2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfec0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfeb8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfeb9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efdbfec6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efdbfec2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfebcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfec8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfeb7ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbfed8100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efdbfed1370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfecd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfec5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfecae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfec4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfecc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efdbfed7450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfecce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfed2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efdbfed2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efdbfebc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfebdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfed4450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfebd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efdbfeb82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfec6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efdbfec1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efdbfed7aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfed5770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfec8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efdbfed2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efdbfec7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efdbfebfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfeb67a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfea1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efdbfeabda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfea4b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfe9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efdbfe97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efdbfe9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfe8a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfe8d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfea9120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efdbfe92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfe8e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efdbfea3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfea2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfe98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efdbfe9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfe9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfeac760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfea8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efdbfea6120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfe91a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfea6870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfe8ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfea9dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efdbfe94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfea2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfea3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfeab750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfe95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efdbfe96670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfe94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfe8bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfe8dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efdbfe99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efdbfe96e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfe8fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfe9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfe8aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbfeab100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efdbfea4370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfea1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfe98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfe9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfe97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfe9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efdbfeaa450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfe9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfea5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efdbfea5cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efdbfe8f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfe90ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfea8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfe902f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efdbfe8b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfe99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efdbfe95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efdbfeaaaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfea9770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfe9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efdbfea5670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efdbfe9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efdbfe92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfe897a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe63880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe58020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe58020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe52140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7efdbfe4ebd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7efdbfe57c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7efdbfe57c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7efdbfe39150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7efdbfe51530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efdbfdf0a20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7efdbfe3e540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7efdbfe3f590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7efdbfe3f590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efdbfdee9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe34950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe3bca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe3bca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe12a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7efdbfe399f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7efdbfe3e540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdbfe01020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7efdbfdfc530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7efdbfdfc530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdbfdf8e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbfdf4020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7efdc143b060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdbfdedc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7efdc1283020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7efdbfdd3990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7efdbfdc7900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7efdbfdd5150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7efdbfdc60f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7efdbfdc6ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc0381220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7efdbfdba500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7efdc0383b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efdbfdb3820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efdc033ce60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7efdbfdb2b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7efdc03369b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7efdbfdbb880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7efdc02ff150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efdbfdb0020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbfd13c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbfd13c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfdb0d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfd118f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfd118f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbfdad6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7efdbfd102f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbfd102f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efdbfdadde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7efdbfd0fcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efdbfd0fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfdac530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfd0e370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfd0e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfdacc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfd0dd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfd0dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfdaee00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfd07c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfd07c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfdaf780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfcee7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfcee7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfdae550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfcf32f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfcf32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfdaa3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfd08480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfd08480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfda95e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfd04e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfd04e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfda8020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfd03670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfd03670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efdbfdaae80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7efdbfd0a7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efdbfd0a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfda79c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfcf0ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfcf0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfda8890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7efdbfcf22f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfcf22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfda7130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7efdbfcf2ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfcf2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfda2d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfce2df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfce2df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfcda550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfdc2d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfdc1bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efdbfdc0950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc56550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfdb5be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfc4e480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfc4e480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfc408b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdbfda56c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfd06c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efdbfd0f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfd09c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efdbfcfce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efdbfd03e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfcef2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efdbfcf7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efdbfd08c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfcfd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efdbfd00e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfd02670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efdbfd0b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfcf6a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfd0bac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfcf3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfd0d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efdbfcf9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfd07480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfd10940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfcfae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efdbfcfb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfcf9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efdbfcfe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efdbfcfbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfcf4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfd01670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfcefad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efdbfd09490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfd06480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfcfde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfd02e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfcfc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfd04670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efdbfd0f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfd0a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efdbfd0ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efdbfcf42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfcf5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfd0d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfcf52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efdbfcf02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfcfee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efdbfcfa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfd0e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfd01e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efdbfd00670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efdbfcf7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7efdbfcde020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7efdbfcd97c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efdbfcc4150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efdbfcd8020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efdc033ce60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7efdbfcd7380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7efdc033a090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7efdbfcd56b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7efdc0339390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efdbfcd4a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efdc02fea20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efdbfcd36e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdbfbde520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efdbfbde520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfcd2530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfbbb480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfbbb480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfcd1ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfbd8060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfbd8060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efdbfcd13a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7efdbfbd8d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efdbfbd8d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfcd0330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfccf1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efdbfccdd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc56550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efdbfccfb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efdc0432b80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfcc83e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfbd0840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfbd0840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfcc8cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfbcf060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfbcf060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfcc9b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfbd7ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfbd7ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfcc66d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfbbcc60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfbbcc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfcc7590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7efdbfbbec60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efdbfbbec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfcc7e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7efdbfbbd480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efdbfbbd480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfcc5020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfbbe480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfbbe480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbfcc58b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7efdbfbddc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efdbfbddc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7efdbfcb89d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efdbfbeb020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efdc0364080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7efdbfc3e3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efdbfbedcf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7efdbfc3d6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efdc104ea80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efdbfbe60b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfbd1620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efdbfbdc940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfbd4620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efdbfbc7840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efdbfbcf840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfbdacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efdbfbc3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfbbfc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efdbfbd3620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfbd2620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfbc9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efdbfbcb840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfbcd060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfbdd2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfbd86b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfbc2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfbd7490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfbd99c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efdbfbc4840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfbd3e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfbd4e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfbdc2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfbc5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efdbfbc6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfbc4060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfbbc480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efdbfbca060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efdbfbc6840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfbbf480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfbcc060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efdbfbd6e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfbd2e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfbc9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfbcd840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfbc7060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfbd0060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efdbfbda020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efdbfbd67b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efdbfbc0c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfbc0480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfbc2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efdbfbbdc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfbca840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efdbfbc5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efdbfbda670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfbd9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfbcc840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efdbfbd6160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efdbfbcb060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efdbfbc3840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfbb9160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7efdbfb8c920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7efdbfb88940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efdbfb92990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efdbfb88080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfb6ce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efdbfb70020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efdbfb6aae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdbfb6d690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efdbfb6d690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdc021a280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efdbfb698f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efdbfb8ea20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfb68170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7efdbfb4f200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7efdbfb4b570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb4a3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb4f950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfb4aa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efdbfb11d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efdbfb1b6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb10b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb1b020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfb0f2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfb0e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efdbfb0eb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbfac1410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7efdbfae2db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7efdbfab5800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdbfab0580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efdbfab0580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efdc021a280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdbfa9b1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04bd020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efdbee05b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efdbedf8640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdbee048b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdc05212b0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdbee03590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdc0520020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efdbf960020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efdbee02c10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efdbee02c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc0517350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdbedf72e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbf9c7930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdbedf6020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdc0520020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efdbf9c7930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efdbf9794b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efdbf977400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efdc0525ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdbf976060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdc0520020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdbf975720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdc05212b0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7efdbf974480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7efdbf974c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efdbf956020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efdc05212b0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efdbf956c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efdc0520020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SensorC" loc="8:SensorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.TimerMilliC" loc="44(SensorAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:../../../tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:../../../tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.TempSensor" loc="45(SensorAppC.TempSensor):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.TempSensor.SensirionSht11ReaderP" loc="45(SensorAppC.TempSensor.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor" loc="40(SensorAppC.LightSensor):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC" loc="47(SensorAppC.LightSensor.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC" loc="47(SensorAppC.LightSensor.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.AMSenderC" loc="47(SensorAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC" loc="47(SensorAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SensorAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.AMReceiverC" loc="43(SensorAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7efdc13fc230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7efdc13fc5d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7efdc13fc980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7efdc13fcd00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7efdc13fb0d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7efdc13fb440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7efdc13fb7d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7efdc13fbb60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7efdc13f9020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7efdc13be950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7efdc13bed20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7efdc12019f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7efdc1201da0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7efdc12001a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7efdc1200550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7efdc12008c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efdc100e9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efdc100e9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efdc0fca120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efdc0fca120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efdc0fb9a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efdc0fb9a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efdc0fb6290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efdc0fb6290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efdc0fb6680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efdc0fb6680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efdc0fb6e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efdc0fb6e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efdc0fb4260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7efdc0fb4a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7efdc0fb4a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efdc0fdaac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efdc0fdaac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efdc0f932d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efdc0f932d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efdc0f936c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efdc0f936c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efdc0f92020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efdc0f92020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efdc0f923f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc0f544f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc0f544f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc0f23d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc0f23d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7efdc0f200d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc0ed01f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc0ed01f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7efdc0cba9b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7efdc0cad910" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7efdc0c91d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7efdc07a0850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7efdc07983b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7efdc05c7660" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7efdc05c79b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc05c79b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdbfe0f020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdbfe0f020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efdbfe0f7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdbfe0f7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7efdbf9eb660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7efdbf9e2360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efdbf9db0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7efdbf9c0c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efdbf95c330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7efdc14dc6f0" loc="31:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7efdc14dc6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc14dca70"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc14dcc00"/>
        <function-ref name="start" scoped="" ref="0x7efdc14dcd90"/>
        <function-ref name="stop" scoped="" ref="0x7efdc14ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efdc157f560" loc="12:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efdc157f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efdc157f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efdc14fa5f0" loc="28:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdc14fa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc14fa970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdc14fab00"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc14fac90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc14fae20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdc1554020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efdc14e05a0" loc="30:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdc14e05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc14e0920"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc14e0ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc14e0c40"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc14e0dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc1507020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumidityRead" ref="0x7efdc1558d00" loc="24:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityRead" scoped="" ref="0x7efdc1558d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc1557940"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc1557dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7efdc14d8df0" loc="32:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdc14d8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc14e1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7efdc155fd60" loc="19:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7efdc155fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc1584770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7efdc15830d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7efdc1563e00"/>
        <function-ref name="enable" scoped="" ref="0x7efdc1563980"/>
        <function-ref name="notify" scoped="" ref="0x7efdc1561300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7efdc1562500" loc="18:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7efdc1562500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc1584770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7efdc15830d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc1564130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc15658d0" loc="14:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc15658d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc1565c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc1565de0"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc1571020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc15711b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc1571340"/>
        <function-ref name="get" scoped="" ref="0x7efdc15714d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc1571660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc1571ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc15717f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc1571980"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc1571b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7efdc155ab70" loc="22:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x7efdc155ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc155c790"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc155cc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efdc14eb4e0" loc="29:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdc14eb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdc14eb860"/>
        <function-ref name="source" scoped="" ref="0x7efdc14eb9f0"/>
        <function-ref name="address" scoped="" ref="0x7efdc14ebb80"/>
        <function-ref name="destination" scoped="" ref="0x7efdc14ebd10"/>
        <function-ref name="setSource" scoped="" ref="0x7efdc1553020"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdc15531b0"/>
        <function-ref name="type" scoped="" ref="0x7efdc1553340"/>
        <function-ref name="setType" scoped="" ref="0x7efdc15534d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdc1553660"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdc15537f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdc1553980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x7efdc1559420" loc="23:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightRead" scoped="" ref="0x7efdc1559420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc1558090"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc1558510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc1575770" loc="13:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1575770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc1573c40"/>
        <function-ref name="fired" scoped="" ref="0x7efdc15801e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc1573020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc1580ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc1572590"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc1572110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc1580660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc1581390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc1573630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc1581860"/>
        <function-ref name="stop" scoped="" ref="0x7efdc1581d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efdc14ab6a0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc14ab6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14aba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efdc14ae1f0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efdc14ae1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efdc14ae570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc14ad5a0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc14ad5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14ad920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7efdc14a67d0" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7efdc14a67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14a6b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc14a99b0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc14a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14a9d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7efdc14a60f0" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efdc14a60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14a6470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7efdc14a5020" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7efdc14a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc14a8c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc14a8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc149f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7efdc1488020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efdc1488020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efdc147e6c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efdc147e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efdc1484660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efdc147ebd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efdc147ed60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efdc1484020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efdc147ea40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efdc14841b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efdc1484340"/>
        <function-ref name="initClocks" scoped="" ref="0x7efdc14844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc1485020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc1485020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc14853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efdc146e3d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efdc146e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efdc146d340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efdc146e8e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efdc146ea70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efdc146ec00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efdc146e750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efdc146ed90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efdc146d020"/>
        <function-ref name="initClocks" scoped="" ref="0x7efdc146d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7efdc146d680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efdc146d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efdc146da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc1470cb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc1470cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc146e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7efdc142a5a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7efdc142a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc142a920"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc142aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc142ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc142add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1429020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc14291b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1429340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc14294d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1429660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7efdc1417020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7efdc1417020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc14173a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1417530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc14176c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1417850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc14179e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1417b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1417d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1416020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc14161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7efdc1420700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7efdc1420700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1420a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1420c10"/>
        <function-ref name="captured" scoped="" ref="0x7efdc1420da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc141f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc141f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc141f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7efdc1404a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7efdc1404a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1404da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1403020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14031b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1403340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14034d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1403660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7efdc1428aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7efdc1428aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1428e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1426020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc14261b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1426340"/>
        <function-ref name="fired" scoped="" ref="0x7efdc14264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7efdc140a020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7efdc140a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc140a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc140a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc140a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc140a850"/>
        <function-ref name="fired" scoped="" ref="0x7efdc140a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7efdc1401a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7efdc1401a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1401da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1400020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14001b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1400340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14004d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1400660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7efdc14125a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7efdc14125a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1412920"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1412ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1412c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1412dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1411020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc14111b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1411340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc14114d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1411660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7efdc142bb10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7efdc142bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1432020"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc14321b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1432340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc14324d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1432660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc14327f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1432980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1432b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1432ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7efdc1406a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7efdc1406a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1406da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1405020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14051b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1405340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14054d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1405660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7efdc140c3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7efdc140c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc140c760"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc140c8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc140ca80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc140cc10"/>
        <function-ref name="fired" scoped="" ref="0x7efdc140cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7efdc14165a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7efdc14165a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1416a20"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1416bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1416d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1415020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc14151b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1415340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc14154d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1415660"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc14157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7efdc141f700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7efdc141f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc141fa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc141fc10"/>
        <function-ref name="captured" scoped="" ref="0x7efdc141fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1419020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14191b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1419340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7efdc1403a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7efdc1403a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1403da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1402020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14021b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1402340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14024d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1402660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7efdc1415be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7efdc1415be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1414020"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc14141b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1414340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc14144d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1414660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc14147f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1414980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1414b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1414ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7efdc1426890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7efdc1426890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1426c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1426da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc1421020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc14211b0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc1421340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7efdc143b060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7efdc143b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc143b3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc143b570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc143b700"/>
        <function-ref name="get" scoped="" ref="0x7efdc143b890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc143ba20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc143bbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc143bd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc143a020"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc143a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc143a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc143a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7efdc140ada0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7efdc140ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1409180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1409310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc14094a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1409630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc14097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7efdc14310c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7efdc14310c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1431440"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc14315d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1431760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc14318f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1431a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1431c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1431da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc142a020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc142a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7efdc1411a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7efdc1411a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1411dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1410020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc14101b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1410340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc14104d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1410660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc14107f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1410980"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1410b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7efdc141a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7efdc141a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc141aa50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc141abe0"/>
        <function-ref name="captured" scoped="" ref="0x7efdc141ad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1420020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14201b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1420340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7efdc1405a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7efdc1405a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1405da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1404020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14041b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1404340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14044d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1404660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7efdc1422cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7efdc1422cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc14280a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1428230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc14283c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1428550"/>
        <function-ref name="fired" scoped="" ref="0x7efdc14286e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7efdc140b1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7efdc140b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc140b570"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc140b700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc140b890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc140ba20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc140bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7efdc1402a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7efdc1402a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1402da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1401020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14011b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1401340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14014d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1401660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7efdc14130c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7efdc14130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1413440"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc14135d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1413760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc14138f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1413a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1413c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1413da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1412020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc14121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7efdc14196c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7efdc14196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc1419a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc1419bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1419d60"/>
        <function-ref name="get" scoped="" ref="0x7efdc1418020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc14181b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1418340"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc14184d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc1418660"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc14187f0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc1418980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc1418b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7efdc1409b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7efdc1409b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1408020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc14081b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc1408340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc14084d0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc1408660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7efdc1407a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7efdc1407a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1407da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1406020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc14061b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1406340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc14064d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1406660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7efdc1408a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7efdc1408a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1407020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc14071b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc1407340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc14074d0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc1407660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7efdc140e570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7efdc140e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc140e8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc140ea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc140ec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc140eda0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc140c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7efdc140f020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7efdc140f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc140f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc140f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc140f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc140f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc140f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc140fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc140fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc140e020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc140e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efdc13c82f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efdc13c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efdc13c9c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efdc13c9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efdc13c8940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efdc13c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efdc13c95b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc13c95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc13cbc80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc13cbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc13ca0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc13ca230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc13ca3c0"/>
        <function-ref name="get" scoped="" ref="0x7efdc13ca550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc13ca6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc13ca870"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc13caa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13cab90"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc13cad20"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc13c9020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc13c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efdc13c02f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efdc13c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efdc13c1c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efdc13c1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efdc13c0940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efdc13c0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efdc13c15b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc13c15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc13c4c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc13c4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc13c20a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc13c2230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc13c23c0"/>
        <function-ref name="get" scoped="" ref="0x7efdc13c2550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc13c26e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc13c2870"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc13c2a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13c2b90"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc13c2d20"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc13c1020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc13c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc1374a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc1374a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1374e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1373020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc13731b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1373340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13734d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1373660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc13bc9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc13bc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc13bcd50"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1375020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc13751b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1375340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc13754d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1375660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc13757f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1375980"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1375b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc1371020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc1371020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc1375de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc1375de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1374180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1374310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc13744a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1374630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc13747c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc1373930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1373930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc1373cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc1373e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1372020"/>
        <function-ref name="get" scoped="" ref="0x7efdc13721b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1372340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc13724d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc1372660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13727f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc1372980"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc1372b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc1372ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc136c160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc136c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc136c4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc136c670"/>
        <function-ref name="captured" scoped="" ref="0x7efdc136c800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc136c990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc136cb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc136ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc136e020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc136e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc136e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc136e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc136e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc136e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc136e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc136eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc136ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc136d020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc136d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc136a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc136a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc136ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc136d480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc136d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc136d800"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc136d990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc136db20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc136dcb0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc136de40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc136b020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc136b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc136b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc136b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc136b6c0"/>
        <function-ref name="get" scoped="" ref="0x7efdc136b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc136b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc136bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc136bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc136a020"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc136a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc136a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc136a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc13647a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc13647a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1364b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1364cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efdc1364e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1363020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13631b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1363340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc13676d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc13676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1367a50"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1367be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1367d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1365020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc13651b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1365340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc13654d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1365660"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc13657f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc1362c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc1362c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc1361020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc1365ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc1365ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1365e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1364020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc13641b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1364340"/>
        <function-ref name="fired" scoped="" ref="0x7efdc13644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc1363610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1363610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc1363990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc1363b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1363cb0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1363e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1362020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc13621b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc1362340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13624d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc1362660"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc13627f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc1362980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc135dcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc135dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc135c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc135c230"/>
        <function-ref name="captured" scoped="" ref="0x7efdc135c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc135c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc135c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc135c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc135fb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc135fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc135e020"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc135e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc135e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc135e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc135e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc135e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc135e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc135eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc135eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc135a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc135a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc135a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc135d020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc135d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc135d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc135d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc135d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc135d850"/>
        <function-ref name="fired" scoped="" ref="0x7efdc135d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc135cb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc135cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc135b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc135b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc135b340"/>
        <function-ref name="get" scoped="" ref="0x7efdc135b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc135b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc135b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc135b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc135bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc135bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc135be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc135a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc13542f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc13542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1354670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1354800"/>
        <function-ref name="captured" scoped="" ref="0x7efdc1354990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1354b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc1354cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1354e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc1357220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc1357220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc13575a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1357730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc13578c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1357a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1357be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1357d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1355020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc13551b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1355340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc13527a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc13527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc1352b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc1355610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc1355610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1355990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1355b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc1355cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1355e40"/>
        <function-ref name="fired" scoped="" ref="0x7efdc1354020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc1353160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1353160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc13534e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc1353670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1353800"/>
        <function-ref name="get" scoped="" ref="0x7efdc1353990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1353b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1353cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc1353e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc1352020"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc13521b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc1352340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc13524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc134d7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc134d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc134db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc134dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7efdc134de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc134c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc134c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc134c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc134f6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc134f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc134fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc134fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc134fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc134e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc134e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc134e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc134e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc134e660"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc134e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc134bc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc134bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc134a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc134eac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc134eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc134ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc134d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc134d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc134d340"/>
        <function-ref name="fired" scoped="" ref="0x7efdc134d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc134c610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc134c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc134c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc134cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc134ccb0"/>
        <function-ref name="get" scoped="" ref="0x7efdc134ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc134b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc134b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc134b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc134b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc134b660"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc134b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc134b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc1346cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc1346cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc13440a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1344230"/>
        <function-ref name="captured" scoped="" ref="0x7efdc13443c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1344550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13446e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1344870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc1348b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc1348b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1347020"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc13471b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1347340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc13474d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc1347660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc13477f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc1347980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1347b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc1347ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc13422f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc13422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc1342670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc1346020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc1346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc13463a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1346530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc13466c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1346850"/>
        <function-ref name="fired" scoped="" ref="0x7efdc13469e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc1344b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1344b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc1343020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc13431b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1343340"/>
        <function-ref name="get" scoped="" ref="0x7efdc13434d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1343660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc13437f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc1343980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc1343b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc1343ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc1343e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc1342020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc133d2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc133d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc133d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc133d800"/>
        <function-ref name="captured" scoped="" ref="0x7efdc133d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc133db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc133dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc133de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc133f220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc133f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc133f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc133f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc133f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc133fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc133fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc133fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc133e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc133e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc133e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc133b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc133b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc133bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc133e610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc133e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc133e990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc133eb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc133ecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc133ee40"/>
        <function-ref name="fired" scoped="" ref="0x7efdc133d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc133c160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc133c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc133c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc133c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc133c800"/>
        <function-ref name="get" scoped="" ref="0x7efdc133c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc133cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc133ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc133ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc133b020"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc133b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc133b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc133b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc13357a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc13357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1335b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc1335cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efdc1335e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc1334020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13341b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc1334340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc13386d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc13386d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc1338a50"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc1338be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1338d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc1337020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc13371b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1337340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc13374d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc1337660"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc13377f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc1333c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc1333c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc1332020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc1337ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc1337ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1337e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc1335020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc13351b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc1335340"/>
        <function-ref name="fired" scoped="" ref="0x7efdc13354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc1334610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1334610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc1334990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc1334b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc1334cb0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1334e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc1333020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc13331b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc1333340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc13334d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc1333660"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc13337f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc1333980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc132ecb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc132ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc132d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc132d230"/>
        <function-ref name="captured" scoped="" ref="0x7efdc132d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc132d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc132d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc132d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efdc1330b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efdc1330b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc132f020"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc132f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc132f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc132f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc132f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc132f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc132f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc132fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc132fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efdc132b2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efdc132b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc132b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efdc132e020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efdc132e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc132e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc132e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc132e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc132e850"/>
        <function-ref name="fired" scoped="" ref="0x7efdc132e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc132db40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc132db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc132c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc132c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc132c340"/>
        <function-ref name="get" scoped="" ref="0x7efdc132c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc132c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc132c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc132c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc132cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc132cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc132ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc132b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7efdc1325240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7efdc1325240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13255c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7efdc1329a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7efdc1329a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc1329e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7efdc1326260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7efdc1326260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc13265e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7efdc13269f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7efdc13269f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc1326d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efdc16a84c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efdc16a84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efdc16a8840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7efdc19bc3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efdc19bc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efdc19bc730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efdc19bc8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7efdc19bca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7efdc17e4bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7efdc17e4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7efdc1920020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7efdc1486b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efdc1486b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efdc12edb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efdc12ed1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efdc12ed340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efdc12ed4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efdc12ed020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efdc12ed660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efdc12ed7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7efdc12ed980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efdc12e1dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efdc12e1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc12e0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efdc12e2590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efdc12e2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efdc12e2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7efdc12e16c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7efdc12e16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc12e1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7efdc12e2c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efdc12e2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc12e1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efdc12e11b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efdc12e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efdc1a94410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efdc1a94410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc1a94790"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc1a94920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efdc1a253a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efdc1a253a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc1a25720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efdc1a258b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efdc1a25a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efdc15ce040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efdc15ce040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc15ce3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc15ce550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7efdc15ca490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efdc15ca490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efdc15ca810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efdc15ca9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7efdc15cab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efdc15d0140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efdc15d0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc15d04c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efdc15d0650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efdc15d07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efdc14af590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc14af590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc14af910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc14afaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc14afc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc14afdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc12d6020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12d61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc12d6340"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc12d6980"/>
        <function-ref name="set" scoped="" ref="0x7efdc12d64d0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc12d6660"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc12d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7efdc12c97b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efdc12c97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12c9b30"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12c9cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12c9e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12cf020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12cf340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc12d58d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc12d58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc12d5c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7efdc12cf980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efdc12cf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12cfd00"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12ce340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12ce660"/>
        <function-ref name="set" scoped="" ref="0x7efdc12ce7f0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efdc12d1020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc12d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc12d13a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc12d1530"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc12d16c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc12d1850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc12d19e0"/>
        <function-ref name="get" scoped="" ref="0x7efdc12d1b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc12d1d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc12d04d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc12d0020"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc12d01b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc12d0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7efdc12ceca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efdc12ceca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12c8230"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12c83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12c8550"/>
        <function-ref name="get" scoped="" ref="0x7efdc12c86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12c8870"/>
        <function-ref name="set" scoped="" ref="0x7efdc12c8a00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12c8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7efdc12ad360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efdc12ad360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12ad6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12ad870"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12ada00"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12adb90"/>
        <function-ref name="get" scoped="" ref="0x7efdc12add20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12ac020"/>
        <function-ref name="set" scoped="" ref="0x7efdc12ac1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7efdc12ac6a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efdc12ac6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12aca20"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12acbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12acd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12ab020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12ab340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12ab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12ab660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7efdc12aac40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc12aac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc12a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7efdc12ab9c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efdc12ab9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12abd40"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12aa340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12aa660"/>
        <function-ref name="set" scoped="" ref="0x7efdc12aa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efdc1293020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efdc1293020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1293530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12936c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1293850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12939e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1293b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1293d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1292020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1292340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1292660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1292a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1292c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efdc127f020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efdc127f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc127f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc127f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc127f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc127f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc127f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc127fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc127fd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc127e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc127e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc127e340"/>
        <function-ref name="set" scoped="" ref="0x7efdc127e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc127e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc127e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc127ea80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc127ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7efdc1235560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7efdc1235560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12358e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1235a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1235c00"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1235d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1234020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1234340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12344d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1234660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12347f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1234980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1234b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1234ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1233020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7efdc1211570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7efdc1211570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12118f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1211a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1211c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1211da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1210020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1210340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1210660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12107f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1210980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1210b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1210ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc120f020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc120f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7efdc1233580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7efdc1233580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1233900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1233a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1233c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1233db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1232020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1232340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1232660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12327f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1232980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1232b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1232ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1231020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7efdc127b020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7efdc127b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc127b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc127b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc127b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc127b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc127b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc127bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc127bd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc127a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc127a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc127a340"/>
        <function-ref name="set" scoped="" ref="0x7efdc127a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc127a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc127a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc127aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc127ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7efdc1266200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7efdc1266200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1266580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1266710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12668a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1266a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1266bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1266d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1265020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12651b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1265340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12654d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1265660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12657f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1265980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1265c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1265da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7efdc1252200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7efdc1252200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1252580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1252710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12528a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1252a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1252bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1252d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1251020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1251340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12514d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1251660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12517f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1251980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1251c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1251da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7efdc1242200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7efdc1242200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1242580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1242710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12428a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1242a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1242bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1242d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1241020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12411b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1241340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12414d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1241660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12417f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1241980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1241c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1241da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7efdc122d580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7efdc122d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc122d900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc122da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc122dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc122ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc122c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc122c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc122c340"/>
        <function-ref name="get" scoped="" ref="0x7efdc122c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc122c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc122c7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc122c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc122cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc122cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc122b020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc122b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7efdc121d570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7efdc121d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc121d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc121da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc121dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc121dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc121c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc121c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc121c340"/>
        <function-ref name="get" scoped="" ref="0x7efdc121c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc121c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc121c7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc121c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc121cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc121cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc121b020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc121b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7efdc1208580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7efdc1208580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1208900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1208a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1208c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1208db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1207020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1207340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1207660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12077f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1207980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1207b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1207ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1206020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efdc128d020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efdc128d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc128d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc128d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc128d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc128d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc128d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc128db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc128dd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc128c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc128c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc128c340"/>
        <function-ref name="set" scoped="" ref="0x7efdc128c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc128c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc128c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc128ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc128cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7efdc122b580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7efdc122b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc122b900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc122ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc122bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc122bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc122a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc122a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc122a340"/>
        <function-ref name="get" scoped="" ref="0x7efdc122a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc122a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc122a7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc122a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc122ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc122aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1229020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efdc1289020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efdc1289020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1289530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12896c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1289850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12899e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1289b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1289d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1288020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12881b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1288340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12884d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1288660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12887f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1288a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1288c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7efdc1275020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7efdc1275020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1275530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12756c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1275850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1275b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1275d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1274020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1274340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1274660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1274a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1274c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7efdc1260200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7efdc1260200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1260580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1260710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12608a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1260a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1260bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1260d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc125f020"/>
        <function-ref name="get" scoped="" ref="0x7efdc125f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc125f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc125f4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc125f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc125f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc125f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc125fc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc125fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7efdc124c200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7efdc124c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc124c580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc124c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc124c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc124ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc124cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc124cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc124b020"/>
        <function-ref name="get" scoped="" ref="0x7efdc124b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc124b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc124b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc124b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc124b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc124b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc124bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc124bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7efdc123b200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7efdc123b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc123b580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc123b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc123b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc123ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc123bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc123bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc123a020"/>
        <function-ref name="get" scoped="" ref="0x7efdc123a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc123a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc123a4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc123a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc123a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc123a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc123ac10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc123ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efdc1297020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efdc1297020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1297530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12976c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1297850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12979e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1297b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1297d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1296020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1296340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1296660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1296a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1296c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efdc1283020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efdc1283020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12834a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1283630"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12837c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1283950"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1283ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1283c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1283e00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1282020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12821b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1282340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12824d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1282660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1282a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1282c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7efdc126f020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7efdc126f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc126f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc126f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc126f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc126f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc126f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc126fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc126fd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc126e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc126e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc126e340"/>
        <function-ref name="set" scoped="" ref="0x7efdc126e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc126e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc126e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc126ea80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc126ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7efdc1237580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7efdc1237580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1237900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1237a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1237c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1237db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1236020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1236340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12364d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1236660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12367f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1236980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1236b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1236ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1235020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7efdc1217570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7efdc1217570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12178f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1217a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1217c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1217da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1216020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1216340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1216660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12167f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1216980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1216b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1216ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1215020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7efdc120a570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7efdc120a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc120a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc120aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc120ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc120ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1209020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1209340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12094d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1209660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12097f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1209980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1209b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1209ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1208020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7efdc1223580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7efdc1223580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1223900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1223a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1223c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1223db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1222020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1222340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12224d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1222660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12227f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1222980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1222b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1222ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1221020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7efdc126a020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7efdc126a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc126a5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc126a730"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc126a8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc126aa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc126abe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc126ad70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1269020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1269340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12694d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1269660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1269980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1269c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1269da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7efdc1256200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7efdc1256200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1256580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1256710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12568a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1256a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1256bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1256d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1255020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12551b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1255340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12554d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1255660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12557f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1255980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1255c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1255da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7efdc1246200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7efdc1246200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1246580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1246710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12468a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1246a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1246bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1246d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1245020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1245340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12454d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1245660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1245980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1245c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1245da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7efdc1215570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7efdc1215570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12158f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1215a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1215c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1215da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1214020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1214340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1214660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12147f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1214980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1214b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1214ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1213020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7efdc1229570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7efdc1229570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12298f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1229a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1229c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1229da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1228020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1228340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12284d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1228660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12287f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1228980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1228b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1228ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1227020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efdc1291020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efdc1291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1291530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12916c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1291850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12919e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1291b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1291d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1290020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1290340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1290660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1290a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1290c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efdc127d020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efdc127d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc127d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc127d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc127d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc127d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc127d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc127db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc127dd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc127c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc127c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc127c340"/>
        <function-ref name="set" scoped="" ref="0x7efdc127c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc127c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc127c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc127ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc127cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7efdc124a200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7efdc124a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc124a580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc124a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc124a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc124aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc124abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc124ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1249020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12491b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1249340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12494d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1249660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12497f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1249980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1249c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1249da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7efdc1279020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7efdc1279020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1279530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12796c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1279850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12799e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1279b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1279d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1278020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1278340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1278660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1278a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1278c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7efdc1264200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7efdc1264200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1264580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1264710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12648a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1264a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1264bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1264d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1263020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1263340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12634d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1263660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12637f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1263980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1263c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1263da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7efdc1250200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7efdc1250200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1250580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1250710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12508a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1250a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1250bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1250d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc124f020"/>
        <function-ref name="get" scoped="" ref="0x7efdc124f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc124f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc124f4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc124f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc124f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc124f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc124fc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc124fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7efdc1240200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7efdc1240200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1240580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1240710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12408a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1240a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1240bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1240d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc123f020"/>
        <function-ref name="get" scoped="" ref="0x7efdc123f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc123f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc123f4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc123f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc123f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc123f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc123fc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc123fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7efdc1225580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7efdc1225580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1225900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1225a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1225c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1225db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1224020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1224340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12244d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1224660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12247f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1224980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1224b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1224ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1223020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efdc12a4020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efdc12a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12a43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc12a4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12a46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc12a4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12a49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12a4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc12a4d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc12a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12a3340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc12a3a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efdc1287020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efdc1287020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1287530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12876c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1287850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12879e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1287b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1287d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1286020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1286340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1286660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1286a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1286c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7efdc1273020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7efdc1273020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1273530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12736c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1273850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1273b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1273d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1272020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1272340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1272660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1272a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1272c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7efdc125e200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7efdc125e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc125e580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc125e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc125e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc125ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc125ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc125ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc125d020"/>
        <function-ref name="get" scoped="" ref="0x7efdc125d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc125d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc125d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc125d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc125d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc125d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc125dc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc125dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7efdc1221580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7efdc1221580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1221900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1221a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1221c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1221db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1220020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1220340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12204d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1220660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12207f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1220980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1220b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1220ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc121f020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc121f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7efdc121b570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7efdc121b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc121b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc121ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc121bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc121bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc121a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc121a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc121a340"/>
        <function-ref name="get" scoped="" ref="0x7efdc121a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc121a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc121a7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc121a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc121ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc121aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1219020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7efdc120f570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7efdc120f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc120f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc120fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc120fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc120fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc120d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc120d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc120d340"/>
        <function-ref name="get" scoped="" ref="0x7efdc120d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc120d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc120d7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc120d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc120db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc120dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc120c020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc120c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7efdc125a200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7efdc125a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc125a580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc125a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc125a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc125aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc125abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc125ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1259020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1259340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12594d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1259660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1259980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1259c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1259da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7efdc121f580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7efdc121f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc121f900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc121fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc121fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc121fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc121e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc121e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc121e340"/>
        <function-ref name="get" scoped="" ref="0x7efdc121e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc121e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc121e7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc121e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc121eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc121eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc121d020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc121d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efdc1295020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efdc1295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1295530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12956c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1295850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1295b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1295d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1294020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1294340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1294660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1294a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1294c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efdc1281020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efdc1281020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12813a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1281530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12816c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1281850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12819e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1281b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1281d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1280020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1280340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1280660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1280a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1280c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7efdc126c020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7efdc126c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc126c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc126c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc126c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc126c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc126c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc126cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc126cd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc126b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc126b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc126b340"/>
        <function-ref name="set" scoped="" ref="0x7efdc126b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc126b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc126b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc126ba80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc126bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7efdc1227580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7efdc1227580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1227900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1227a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1227c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1227db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1226020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1226340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12264d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1226660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12267f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1226980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1226b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1226ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1225020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7efdc1213570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7efdc1213570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12138f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1213a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1213c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1213da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1212020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1212340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1212660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12127f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1212980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1212b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1212ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1211020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7efdc1268200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7efdc1268200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1268580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1268710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12688a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1268a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1268bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1268d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1267020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12671b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1267340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12674d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1267660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12677f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1267980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1267c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1267da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7efdc1254200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7efdc1254200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1254580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1254710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12548a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1254a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1254bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1254d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1253020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12531b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1253340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12534d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1253660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12537f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1253980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1253c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1253da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7efdc1244200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7efdc1244200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1244580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1244710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12448a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1244a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1244bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1244d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1243020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12431b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1243340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12434d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1243660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12437f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1243980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1243c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1243da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efdc128f020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efdc128f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc128f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc128f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc128f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc128f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc128f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc128fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc128fd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc128e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc128e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc128e340"/>
        <function-ref name="set" scoped="" ref="0x7efdc128e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc128e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc128e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc128ea80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc128ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7efdc1248200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7efdc1248200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1248580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1248710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12488a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1248a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1248bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1248d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1247020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1247340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12474d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1247660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12477f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1247980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1247c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1247da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efdc128b020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efdc128b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc128b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc128b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc128b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc128b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc128b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc128bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc128bd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc128a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc128a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc128a340"/>
        <function-ref name="set" scoped="" ref="0x7efdc128a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc128a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc128a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc128aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc128ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7efdc1277020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7efdc1277020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1277530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12776c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1277850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1277b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1277d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1276020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1276340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1276660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1276a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1276c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7efdc1262200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7efdc1262200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1262580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1262710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12628a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1262a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1262bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1262d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1261020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1261340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12614d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1261660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12617f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1261980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1261c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1261da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7efdc124e200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7efdc124e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc124e580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc124e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc124e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc124ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc124ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc124ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc124d020"/>
        <function-ref name="get" scoped="" ref="0x7efdc124d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc124d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc124d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc124d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc124d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc124d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc124dc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc124dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7efdc123d200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7efdc123d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc123d580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc123d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc123d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc123da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc123dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc123dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc123c020"/>
        <function-ref name="get" scoped="" ref="0x7efdc123c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc123c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc123c4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc123c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc123c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc123c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc123cc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc123cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efdc1299020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efdc1299020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12993a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1299530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12996c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1299850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12999e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1299b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1299d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1298020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1298340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1298660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1298a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1298c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efdc1285020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efdc1285020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1285530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12856c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1285850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12859e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1285b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1285d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1284020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1284340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1284660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1284a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1284c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7efdc1271020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7efdc1271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1271530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12716c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1271850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc12719e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1271b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1271d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc1270020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc12701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1270340"/>
        <function-ref name="set" scoped="" ref="0x7efdc12704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1270660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc12707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1270a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1270c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7efdc125c200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7efdc125c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc125c580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc125c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc125c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc125ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc125cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc125cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc125b020"/>
        <function-ref name="get" scoped="" ref="0x7efdc125b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc125b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc125b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc125b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc125b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc125b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc125bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc125bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7efdc122f560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7efdc122f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc122f8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc122fa70"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc122fc00"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc122fd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc122e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc122e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc122e340"/>
        <function-ref name="get" scoped="" ref="0x7efdc122e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc122e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc122e7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc122e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc122eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc122eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc122d020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc122d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7efdc1219570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7efdc1219570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc12198f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1219a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1219c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1219da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1218020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1218340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1218660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12187f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1218980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1218b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1218ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1217020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7efdc1231580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7efdc1231580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1231900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1231a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1231c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1231db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1230020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1230340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12304d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1230660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12307f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1230980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1230b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1230ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc122f020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc122f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7efdc1258200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7efdc1258200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1258580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1258710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc12588a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1258a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1258bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1258d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1257020"/>
        <function-ref name="get" scoped="" ref="0x7efdc12571b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1257340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12574d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1257660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc12577f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1257980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1257c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1257da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7efdc120c570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7efdc120c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc120c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc120ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc120cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc120cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc120b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc120b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc120b340"/>
        <function-ref name="get" scoped="" ref="0x7efdc120b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc120b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc120b7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc120b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc120bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc120bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc120a020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc120a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7efdc1206580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7efdc1206580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1206900"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1206a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1206c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1206db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1205020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1205340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1205660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12057f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1205980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1205b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1205ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1204020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7efdc12391f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7efdc12391f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1239970"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1239b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1239c90"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1239e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1238020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc12381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1238340"/>
        <function-ref name="get" scoped="" ref="0x7efdc12384d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1238660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc12387f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1238980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1238b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1238ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1237020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc12371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11db6d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11db6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11dba50"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11dbbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11dbd70"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11da020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11da1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11da340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11da4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11da660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11da7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11da980"/>
        <function-ref name="set" scoped="" ref="0x7efdc11dab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11daca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11dae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11d9120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11d6100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11d6480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11d6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11d67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11d6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11d6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11d6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11d6de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11d5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11d51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11d5340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11d54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11d5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11d57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11d5a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11d5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11d2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11d2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11d10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11d1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11d1400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11d1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11d1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11d18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11d1a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc11d1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11d1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11d0020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11d01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11d0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11d04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11d0760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11cd740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11cd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11cdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11cdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11cdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11cc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11cc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11cc4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11cc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11cc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11cc980"/>
        <function-ref name="set" scoped="" ref="0x7efdc11ccb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11ccca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11cce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11cb120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11cb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11c8100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11c8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11c8480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11c8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11c87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11c8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11c8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11c8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11c8de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11c7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11c71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11c7340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11c74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11c7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11c77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11c7a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11c7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11c4d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11c4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11c20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11c2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11c2400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11c2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11c2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11c28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11c2a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc11c2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11c2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11c1020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11c1760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11be740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11beac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11bec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11bede0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11bd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11bd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11bd4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11bd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11bd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11bd980"/>
        <function-ref name="set" scoped="" ref="0x7efdc11bdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11bdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11bde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11bc120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11b9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11b9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11b9480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11b9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11b97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11b9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11b9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11b9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11b9de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11b8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11b81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11b8340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11b84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11b8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11b87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11b8a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11b8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11b5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11b5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11b40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11b4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11b4400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11b4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11b4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11b48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11b4a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc11b4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11b4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11b3020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11b3760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11b0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11b0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11b0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11b0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11af020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11af1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11af340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11af4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11af660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11af7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11af980"/>
        <function-ref name="set" scoped="" ref="0x7efdc11afb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11afca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11afe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11ae120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11ab100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11ab480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11ab610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11ab7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11ab930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11abac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11abc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11abde0"/>
        <function-ref name="get" scoped="" ref="0x7efdc11aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11aa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11aa340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11aa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11aa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11aa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11aaa80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11aac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11a7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11a7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11a60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11a6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11a6400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11a6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11a6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11a68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11a6a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc11a6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11a6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11a5020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11a51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11a5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11a54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11a5760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc11a2860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc11a2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11a2be0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc11a2d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11a1020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc11a11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11a1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11a14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11a1660"/>
        <function-ref name="get" scoped="" ref="0x7efdc11a17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11a1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc11a1b10"/>
        <function-ref name="set" scoped="" ref="0x7efdc11a1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc11a1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11a0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc11a02b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11a0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc119c270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc119c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc119c5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc119c780"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc119c910"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc119caa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc119cc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc119cdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc119b020"/>
        <function-ref name="get" scoped="" ref="0x7efdc119b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc119b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc119b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc119b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc119b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc119b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc119bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc119bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1198d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1198d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11970e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1197270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1197400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1197590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1197720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11978b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1197a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1197bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1197d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1196020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1196340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1196760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1193740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1193740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1193ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1193c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1193de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1192020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11921b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1192340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11924d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1192660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11927f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1192980"/>
        <function-ref name="set" scoped="" ref="0x7efdc1192b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1192ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1192e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1191120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11912b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc118e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc118e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc118e480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc118e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc118e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc118e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc118eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc118ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc118ede0"/>
        <function-ref name="get" scoped="" ref="0x7efdc118d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc118d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc118d340"/>
        <function-ref name="set" scoped="" ref="0x7efdc118d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc118d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc118d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc118da80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc118dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc118ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc118ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11890e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1189270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1189400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1189590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1189720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11898b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1189a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1189bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1189d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1188020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1188340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1188760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1185740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1185740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1185ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1185c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1185de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1184020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1184340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11844d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1184660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1184980"/>
        <function-ref name="set" scoped="" ref="0x7efdc1184b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1184ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1184e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1183120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1180100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1180100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1180480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1180610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11807a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1180930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1180ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1180c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1180de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc117f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc117f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc117f340"/>
        <function-ref name="set" scoped="" ref="0x7efdc117f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc117f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc117f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc117fa80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc117fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc117cd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc117cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc117a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc117a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc117a400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc117a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc117a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc117a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc117aa40"/>
        <function-ref name="get" scoped="" ref="0x7efdc117abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc117ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1179020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1179340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1179760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1176740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1176740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1176ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1176c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1176de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1175020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1175340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11754d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1175660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1175980"/>
        <function-ref name="set" scoped="" ref="0x7efdc1175b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1175ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1175e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1174120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1171100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1171100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1171480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1171610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11717a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1171930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1171ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1171c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1171de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1170020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1170340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1170660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1170a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1170c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc116dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc116dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc116c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc116c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc116c400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc116c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc116c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc116c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc116ca40"/>
        <function-ref name="get" scoped="" ref="0x7efdc116cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc116cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc116b020"/>
        <function-ref name="set" scoped="" ref="0x7efdc116b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc116b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc116b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc116b760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc116b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1168a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1168a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1168de0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1167020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1167340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11674d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1167660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11677f0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1167980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1167b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1167ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1167e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1166020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11661b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1166440"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11665d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1163460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1163460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11637e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1163970"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1163b00"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1163c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1163e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1162020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11621b0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1162340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11624d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1162660"/>
        <function-ref name="set" scoped="" ref="0x7efdc11627f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1162980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1162b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1162da0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc115fe00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc115fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc115e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc115e350"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc115e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc115e670"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc115e800"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc115e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc115eb20"/>
        <function-ref name="get" scoped="" ref="0x7efdc115ecb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc115ee40"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc115d020"/>
        <function-ref name="set" scoped="" ref="0x7efdc115d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc115d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc115d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc115d760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc115d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc115a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc115a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc115aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc115ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc115ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1159020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1159340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11594d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1159660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1159980"/>
        <function-ref name="set" scoped="" ref="0x7efdc1159b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1159ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1159e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1158120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1155100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1155100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1155480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1155610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11557a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1155930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1155ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1155c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1155de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1153020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1153340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1153660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1153a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1153c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1150d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1150d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc114f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc114f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc114f400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc114f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc114f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc114f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc114fa40"/>
        <function-ref name="get" scoped="" ref="0x7efdc114fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc114fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc114e020"/>
        <function-ref name="set" scoped="" ref="0x7efdc114e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc114e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc114e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc114e760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc114e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc114b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc114b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc114bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc114bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc114bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc114a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc114a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc114a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc114a4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc114a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc114a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc114a980"/>
        <function-ref name="set" scoped="" ref="0x7efdc114ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc114aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc114ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1149120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1146100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1146100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1146480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1146610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11467a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1146930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1146ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1146c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1146de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1145020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1145340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1145660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1145a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1145c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1142d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1142d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11410e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1141270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1141400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1141590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1141720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1141a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1141bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1141d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1140020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1140340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1140760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc113d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc113d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc113dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc113dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc113dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc113c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc113c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc113c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc113c4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc113c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc113c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc113c980"/>
        <function-ref name="set" scoped="" ref="0x7efdc113cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc113cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc113ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc113b120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc113b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1138100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1138100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1138480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1138610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11387a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1138930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1138ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1138c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1138de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1137020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1137340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1137660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1137a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1137c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1134d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1134d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11330e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1133270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1133400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1133590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1133720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11338b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1133a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1133bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1133d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1132020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1132340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1132760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc112e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc112e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc112eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc112ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc112ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc112d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc112d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc112d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc112d4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc112d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc112d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc112d980"/>
        <function-ref name="set" scoped="" ref="0x7efdc112db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc112dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc112de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc112c120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc112c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1129100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1129100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1129480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1129610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc11297a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1129930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1129ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1129c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1129de0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1128020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1128340"/>
        <function-ref name="set" scoped="" ref="0x7efdc11284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1128660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1128a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1128c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1125d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1125d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11240e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1124270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1124400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1124590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1124720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11248b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1124a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1124bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1124d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1123020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1123340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1123760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1120740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1120740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1120ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1120c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1120de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc111f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc111f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc111f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc111f4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc111f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc111f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc111f980"/>
        <function-ref name="set" scoped="" ref="0x7efdc111fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc111fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc111fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc111e120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc111e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc111b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc111b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc111b480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc111b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc111b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc111b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc111bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc111bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc111bde0"/>
        <function-ref name="get" scoped="" ref="0x7efdc111a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc111a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc111a340"/>
        <function-ref name="set" scoped="" ref="0x7efdc111a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc111a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc111a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc111aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc111ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1117d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1117d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11160e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1116270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1116400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1116590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1116720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11168b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1116a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1116bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1116d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1115020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11151b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1115340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11154d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1115760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11158f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1112740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1112740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1112ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1112c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1112de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1111020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11111b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1111340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11114d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1111660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1111980"/>
        <function-ref name="set" scoped="" ref="0x7efdc1111b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1111ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1111e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1110120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc110d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc110d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc110d480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc110d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc110d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc110d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc110dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc110dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc110dde0"/>
        <function-ref name="get" scoped="" ref="0x7efdc110b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc110b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc110b340"/>
        <function-ref name="set" scoped="" ref="0x7efdc110b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc110b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc110b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc110ba80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc110bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1108d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1108d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc11070e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1107270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1107400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1107590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1107720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc11078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1107a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc1107bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1107d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1106020"/>
        <function-ref name="set" scoped="" ref="0x7efdc11061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1106340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc11064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1106760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc1103740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc1103740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1103ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1103c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1103de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1102020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc11021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1102340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc11024d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1102660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc11027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1102980"/>
        <function-ref name="set" scoped="" ref="0x7efdc1102b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1102ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1102e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1101120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc11012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc10fe100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc10fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc10fe480"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc10fe610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc10fe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc10fe930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc10feac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc10fec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc10fede0"/>
        <function-ref name="get" scoped="" ref="0x7efdc10fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc10fd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc10fd340"/>
        <function-ref name="set" scoped="" ref="0x7efdc10fd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc10fd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc10fd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc10fda80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc10fdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efdc10fad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efdc10fad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc10f90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc10f9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc10f9400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc10f9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc10f9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc10f98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc10f9a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc10f9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc10f9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc10f8020"/>
        <function-ref name="set" scoped="" ref="0x7efdc10f81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc10f8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc10f84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc10f8760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc10f88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc1081610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc1081610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1081990"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1081b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc1081cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1081e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1080020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc10801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1080340"/>
        <function-ref name="get" scoped="" ref="0x7efdc10804d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1080660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc10807f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1080980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1080b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc1080ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc107f020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc107f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc1092440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc1092440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc10927c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1092950"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1092ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc1092c70"/>
        <function-ref name="get" scoped="" ref="0x7efdc1092e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1081020"/>
        <function-ref name="set" scoped="" ref="0x7efdc10811b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1081340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc107c2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc107c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc107c670"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc107c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc107c990"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc107cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc107ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc107ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc107b020"/>
        <function-ref name="get" scoped="" ref="0x7efdc107b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc107b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc107b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc107b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc107b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc107b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc107bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc107bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc107d020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc107d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc107d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc107d530"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc107d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc107d850"/>
        <function-ref name="get" scoped="" ref="0x7efdc107d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc107db70"/>
        <function-ref name="set" scoped="" ref="0x7efdc107dd00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc107c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc1077de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc1077de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1076180"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc1076310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc10764a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1076630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc10767c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc1076950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc1076ae0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1076c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc1076e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc1075020"/>
        <function-ref name="set" scoped="" ref="0x7efdc10751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc1075340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc10754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc1075760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc10758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc1078b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc1078b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc1077020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc10771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc1077340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc10774d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc1077660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc10777f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc1077980"/>
        <function-ref name="clr" scoped="" ref="0x7efdc1077b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc1069640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc1069640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0ebcc40"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ebd1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0ebc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0ebdae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0ebb590"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0ebb110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0ebd660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0ebf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0ebc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0ebf860"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0ebfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efdc1060610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efdc1060610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc105cc40"/>
        <function-ref name="fired" scoped="" ref="0x7efdc105e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc105c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc105eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc105b590"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc105b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc105e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc105f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc105c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc105f860"/>
        <function-ref name="stop" scoped="" ref="0x7efdc105fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efdc10561d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efdc10561d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc1053630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc1055c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc10549d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc1054550"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc1051020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc1053ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc10540d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc1056dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc1053020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc10552e0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc10557b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efdc104ea80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efdc104ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc10506f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc1057400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc1057400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc1057780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdc0f5b020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdc0f5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0f58870"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0f5a840"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc0f58220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0f5ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc0f58d30"/>
        <function-ref name="start" scoped="" ref="0x7efdc0f5be30"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0f5a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc0f5c760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc0f5c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc0f5cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf482bd0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf482bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf47e4e0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf4804e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf480e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf4809a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf47e9a0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf481a80"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf482380" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf482380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf482700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efdbf4680c0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf4680c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdbf468440"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdbf4685d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdbf468760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdbf4688f0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf468a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efdbf46c7b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf46c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf46cb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbf46ccc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf46ce50"/>
        <function-ref name="get" scoped="" ref="0x7efdbf46a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf46a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf46a340"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf46a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf46a660"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf46a7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbf46a980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbf46ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efdbf46ada0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf46ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdbf469180"/>
        <function-ref name="getControl" scoped="" ref="0x7efdbf469310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf4694a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdbf469630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdbf4697c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf469950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdbf469ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdbf469c70"/>
        <function-ref name="setControl" scoped="" ref="0x7efdbf469e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efdc102aba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdc102aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc1029020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc10291b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc1029340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc10294d0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc1029660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efdc102e4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc102e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc102e850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc102e9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc102eb70"/>
        <function-ref name="get" scoped="" ref="0x7efdc102ed00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc102d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc102d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc102d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc102d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc102d660"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc102d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc102d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efdc102b280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc102b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc102b600"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc102b790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc102b920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc102bab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc102bc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc102bdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc102a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc102a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc102a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efdbf45fda0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf45fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdbf45e180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdbf45e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdbf45e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdbf45e630"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf45e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efdbf4624c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf4624c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf462840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbf4629d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf462b60"/>
        <function-ref name="get" scoped="" ref="0x7efdbf462cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf462e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf460030"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf4601c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf460350"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf4604e0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbf460670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbf460800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf465340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf465340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf463ba0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf464b80"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf463550"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf463090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf462090"/>
        <function-ref name="start" scoped="" ref="0x7efdbf4641b0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf4646c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf466a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf466a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf466db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efdbf460a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf460a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdbf460e10"/>
        <function-ref name="getControl" scoped="" ref="0x7efdbf45f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf45f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdbf45f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdbf45f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf45f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdbf45f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdbf45f980"/>
        <function-ref name="setControl" scoped="" ref="0x7efdbf45fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdc0fd9020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0fd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0fd9e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0fd8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0fd8340"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0fd8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7efdc0fd0020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efdc0fd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0fd0e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0fce800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0fce340"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0fcecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efdc0fbc2c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdc0fbc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0fbc640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc0fbc7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc0fbc960"/>
        <function-ref name="get" scoped="" ref="0x7efdc0fbcaf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc0fbcc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0fbce10"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc0fbb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0fbb1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0fbb340"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc0fbb4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc0fbb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdc0fcb0a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0fcb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0fbe020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0fbe9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0fbe4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0fbee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efdc0f9a540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efdc0f9a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0f993d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0f99d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0f99890"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0f97260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdc0f9d0f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0f9d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0f9b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0f9b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0f9b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0f9be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf47b020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf47b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf479870"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf47a840"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf479220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf47ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf479d30"/>
        <function-ref name="start" scoped="" ref="0x7efdbf47be30"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf47a380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efdbf475780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efdbf475780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf471020"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf473020"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf4739a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf4734e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf4714e0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf4745d0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf474ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdbf4773d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdbf4773d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbf476240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf476bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf476700"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf4750d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7efdc0f26490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7efdc0f26490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0f26810"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0f269a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7efdc0f291d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdc0f291d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0f27b30"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0f289f0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc0f274e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0f27020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc0f26020"/>
        <function-ref name="start" scoped="" ref="0x7efdc0f28020"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0f28530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc0f30cf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc0f30cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0f2b220"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0f2d7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0f2c590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0f2c110"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0f2bb20"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0f2b6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0f2dc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0f2e940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0f2cba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0f2ee10"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0f2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7efdc0ed5e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7efdc0ed5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0ed4220"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0ed43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7efdc0edbc30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7efdc0edbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0ed5110"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ed86a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0ed74a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0ed7020"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0ed5a10"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0ed5590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0ed8b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0ed9860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0ed7ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0ed9d30"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0ed8220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc0ee0690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc0ee0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0edccf0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ede260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0edc090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0edeba0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0edb680"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0edb1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0ede700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0edf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0edc6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0edf880"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0edfd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efdc0ed2cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efdc0ed2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0ed1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdc0ec7020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0ec7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0ec7e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0ec6800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0ec6340"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0ec6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdc0eb3c50" loc="38:../../../tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0eb6020"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0eb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7efdc0ea86e0" loc="44:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7efdc0ea86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efdc0ea8a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7efdc0eabc40" loc="39:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efdc0eabc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0eb0020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efdc0eb01b0"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0eb0340"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efdc0eb04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc0eaf020" loc="43:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc0eaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc0eaf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7efdc0eb6dc0" loc="38:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7efdc0eb6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0eb1180"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0eb1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdc0eb0810" loc="42:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0eb0b90"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0eb0d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efdc0e9de10" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efdc0e9de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0e9c1c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efdc0e9c350"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0e9c4e0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efdc0e9c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efdc0e94e10" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efdc0e94e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0e9d1c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efdc0e9d350"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0e9d4e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efdc0e9d670"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efdc0e9d800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efdc0e9d990"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc0e9db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdc0eb2870" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdc0eb2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0eb2bf0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0eb2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc0c0dc70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0c0dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc0c0c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc0c0c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efdc0c0b440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efdc0c0b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0c0b7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efdc0c0b950"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0c0bae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efdc0c0bc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efdc0c0a020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0c0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdc0c0a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efdc0c0c440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efdc0c0c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0c0c7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efdc0c0c950"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0c0cae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efdc0c0cc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efdc0c0ce00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efdc0c0b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc0c0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0c0d020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0c0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0c0d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0c0d530"/>
        <function-ref name="request" scoped="" ref="0x7efdc0c0d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0c0d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0c0d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efdc0e2d8e0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0e2d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0e2dc60"/>
        <function-ref name="configure" scoped="" ref="0x7efdc0e2ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efdc0e2cd00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efdc0e2cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0e2b0a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efdc0e2b230"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0e2b3c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efdc0e2b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efdc0e281d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0e281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdc0e28550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efdc0e2f670" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efdc0e2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0e2f9f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efdc0e2fb80"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0e2fd10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efdc0e2c020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efdc0e2c1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efdc0e2c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc0e2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efdc0e2be50" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efdc0e2be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0e2a210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0e2a3a0"/>
        <function-ref name="request" scoped="" ref="0x7efdc0e2a530"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0e2a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0e2a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0e36c80" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0e36c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0e320a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0e32230"/>
        <function-ref name="request" scoped="" ref="0x7efdc0e323c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0e32550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0e326e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efdc0e24710" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0e24710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0e24a90"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0e24c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efdc0d9fa20" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0d9fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0d9fdc0"/>
        <function-ref name="configure" scoped="" ref="0x7efdc0d9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efdc0d9d570" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efdc0d9d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0d9d910"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efdc0d9daa0"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0d9dc30"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efdc0d9ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efdc0d9b020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0d9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdc0d9b3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efdc0d9b690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efdc0d9b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc0d9ba10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc0d9bba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc0d9bd30"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc0d9a020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc0d9a1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc0d9a340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc0d9a4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc0d9a660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc0d9a7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc0d9a980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc0d9ab10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc0d9aca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc0d9ae30"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc0d99120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc0d992b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc0d99440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc0d995d0"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc0d99760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc0d998f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc0d99a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc0d99c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc0d99da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc0d98020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc0d981b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc0d98340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc0d986d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc0d98860"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc0d989f0"/>
        <function-ref name="tx" scoped="" ref="0x7efdc0d98b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc0d98d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc0d97020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc0d971b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc0d97340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc0d974d0"/>
        <function-ref name="rx" scoped="" ref="0x7efdc0d97660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc0d977f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc0d97980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc0d97b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc0d97ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc0d97e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efdc0d9e3e0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efdc0d9e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0d9e780"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efdc0d9e910"/>
        <function-ref name="receive" scoped="" ref="0x7efdc0d9eaa0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efdc0d9ec30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efdc0d9edc0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efdc0d9d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc0d9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdc0d96c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0d96c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0d94ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0d934e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0d93020"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0d939a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efdc0d9c230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efdc0d9c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0d9c5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0d9c760"/>
        <function-ref name="request" scoped="" ref="0x7efdc0d9c8f0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0d9ca80"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0d9cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0da0b10" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0da0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0d9f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0d9f1b0"/>
        <function-ref name="request" scoped="" ref="0x7efdc0d9f340"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0d9f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0d9f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efdc0d96290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0d96290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0d96630"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0d967c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc0d93dd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc0d93dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc0d92180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc0d92310"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc0d924a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc0d92630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc0d927c0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0d92950"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc0d92ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc0d911b0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0d92e00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc0d92c70"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc0d91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efdc0d833b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdc0d833b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0d83730"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0d838c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efdc0d860d0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0d860d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0d86450"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0d865e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efdc0d86900" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc0d86900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc0d86c80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc0d86e10"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc0d89020"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc0d891b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc0d89340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc0d894d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc0d89660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc0d897f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc0d89980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc0d89b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc0d89ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc0d89e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc0d88020"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc0d882b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc0d88440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc0d885d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc0d88760"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc0d888f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc0d88a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc0d88c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc0d88da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc0d85020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc0d851b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc0d85340"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc0d854d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc0d85860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc0d859f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc0d85b80"/>
        <function-ref name="tx" scoped="" ref="0x7efdc0d85d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc0d84020"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc0d841b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc0d84340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc0d844d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc0d84660"/>
        <function-ref name="rx" scoped="" ref="0x7efdc0d847f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc0d84980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc0d84b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc0d84ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc0d84e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc0d83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efdc0d75670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efdc0d75670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0d759f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0d75b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0d75d10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0d74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0d741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0d74340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0d744d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0d74660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0d747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0d74980"/>
        <function-ref name="set" scoped="" ref="0x7efdc0d74b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0d74ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0d74e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0d73120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0d732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efdc0d7adc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efdc0d7adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0d79180"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0d79310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efdc0d73670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efdc0d73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0d739f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0d73b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0d73d10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0d72020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0d721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0d72340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0d724d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0d72660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0d727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0d72980"/>
        <function-ref name="set" scoped="" ref="0x7efdc0d72b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0d72ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0d72e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0d71120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0d712b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efdc0d71670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efdc0d71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0d719f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0d71b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0d71d10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0d70020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0d701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0d70340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0d704d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0d70660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0d707f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0d70980"/>
        <function-ref name="set" scoped="" ref="0x7efdc0d70b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0d70ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0d70e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0d6f120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0d6f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efdc0d7e020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efdc0d7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc0d7e3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc0d7e530"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc0d7e6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc0d7e850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc0d7e9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc0d7eb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc0d7ed00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc0d7d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc0d7d1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc0d7d340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc0d7d4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc0d7d660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc0d7d7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc0d7da80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc0d7dc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc0d7dda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc0d7c020"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc0d7c1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc0d7c340"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc0d7c4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc0d7c660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc0d7c7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc0d7c980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc0d7cb10"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc0d7cca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc0d7b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc0d7b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc0d7b540"/>
        <function-ref name="tx" scoped="" ref="0x7efdc0d7b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc0d7b860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc0d7b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc0d7bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc0d7bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc0d7a020"/>
        <function-ref name="rx" scoped="" ref="0x7efdc0d7a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc0d7a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc0d7a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc0d7a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc0d7a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc0d7a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efdc0d82710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0d82710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0d82a90"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0d82c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efdc0d77670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efdc0d77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0d779f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0d77b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0d77d10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0d76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0d761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0d76340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0d764d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0d76660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0d767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0d76980"/>
        <function-ref name="set" scoped="" ref="0x7efdc0d76b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0d76ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0d76e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0d75120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0d752b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efdc0d796d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efdc0d796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0d79a50"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0d79be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0d79d70"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0d78020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0d781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0d78340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0d784d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0d78660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0d787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0d78980"/>
        <function-ref name="set" scoped="" ref="0x7efdc0d78b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0d78ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0d78e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0d77120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0d772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdc0cf1110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0cf1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0cf0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc0cf09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc0cf04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0cf0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbf3cec70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf3cec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbf3cd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf3cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdbf3c7d70" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf3c7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdbf3c6180"/>
        <function-ref name="configure" scoped="" ref="0x7efdbf3c6310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efdbf3c75d0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdbf3c75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdbf3c7950"/>
        <function-ref name="txDone" scoped="" ref="0x7efdbf3c7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf3ce020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf3ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf3ce3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf3ce530"/>
        <function-ref name="request" scoped="" ref="0x7efdbf3ce6c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf3ce850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf3ce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efdbf3cdbe0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdbf3cdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdbf3cb020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdbf3cb1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdbf3cb340"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdbf3cb4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdbf3cb660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdbf3cb7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdbf3cb980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdbf3cbb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdbf3cbca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdbf3cbe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdbf3ca020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdbf3ca1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdbf3ca340"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdbf3ca5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdbf3ca760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdbf3ca8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdbf3caa80"/>
        <function-ref name="isUart" scoped="" ref="0x7efdbf3cac10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdbf3cada0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdbf3c9020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdbf3c91b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdbf3c9340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdbf3c94d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdbf3c9660"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf3c97f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdbf3c9b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdbf3c9d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdbf3c8020"/>
        <function-ref name="tx" scoped="" ref="0x7efdbf3c81b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdbf3c8340"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdbf3c84d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdbf3c8660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdbf3c87f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdbf3c8980"/>
        <function-ref name="rx" scoped="" ref="0x7efdbf3c8b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdbf3c8ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdbf3c8e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdbf3c7020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdbf3c71b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdbf3c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdbf3cd440" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf3cd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbf3cd7c0"/>
        <function-ref name="userId" scoped="" ref="0x7efdbf3cd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc0cd5d50" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0cd5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc0cd3100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc0cd3290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdc0cd2370" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0cd2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0cd26f0"/>
        <function-ref name="configure" scoped="" ref="0x7efdc0cd2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efdc0cd9cd0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efdc0cd9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0cd60a0"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0cd6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0cd6a60" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0cd6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0cd6de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0cd5020"/>
        <function-ref name="request" scoped="" ref="0x7efdc0cd51b0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0cd5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0cd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdc0cd3590" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0cd3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0cd3910"/>
        <function-ref name="userId" scoped="" ref="0x7efdc0cd3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efdc0cbc020" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0cbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0cbc3a0"/>
        <function-ref name="userId" scoped="" ref="0x7efdc0cbc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efdc0ccf0d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efdc0ccf0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0ccf470"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0ccf600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efdc0cbd880" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efdc0cbd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0cbdc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efdc0ccfa00" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc0ccfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0ccfda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efdc0cbd0a0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efdc0cbd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0cbd420"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0cbd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc0c42020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0c42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc0c423c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc0c42550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdc0c41cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0c41cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0c400a0"/>
        <function-ref name="configure" scoped="" ref="0x7efdc0c40230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efdc0c427a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0c427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0c42b20"/>
        <function-ref name="requested" scoped="" ref="0x7efdc0c42cb0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0c42e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0c41020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc0c411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0c43210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0c43210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0c435b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0c43740"/>
        <function-ref name="request" scoped="" ref="0x7efdc0c438d0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0c43a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0c43bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdc0c41400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0c41400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0c41780"/>
        <function-ref name="userId" scoped="" ref="0x7efdc0c41910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf360020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf360020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf3603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efdbf360630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbf360630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbf3609b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbf360b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbf360cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbf360e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbf35c6c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf35c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbf35ca60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf35cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdbf35a400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf35a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdbf35a7a0"/>
        <function-ref name="configure" scoped="" ref="0x7efdbf35a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efdbf35abc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efdbf35abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbf359020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbf3591b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbf359340"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbf3594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efdbf35ce40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf35ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf35b1e0"/>
        <function-ref name="requested" scoped="" ref="0x7efdbf35b370"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf35b500"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf35b690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf35b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdbf359720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdbf359720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdbf359aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdbf359c30"/>
        <function-ref name="led1On" scoped="" ref="0x7efdbf359dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdbf358020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdbf3581b0"/>
        <function-ref name="get" scoped="" ref="0x7efdbf358340"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdbf3584d0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdbf358b10"/>
        <function-ref name="set" scoped="" ref="0x7efdbf3587f0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdbf358660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdbf358980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf35d850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf35d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf35dbf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf35dd80"/>
        <function-ref name="request" scoped="" ref="0x7efdbf35c020"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf35c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf35c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdbf35ba70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf35ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbf35bdf0"/>
        <function-ref name="userId" scoped="" ref="0x7efdbf35a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efdbf358de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efdbf358de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf356180"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf356310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efdc0c26400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdc0c26400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efdc0c26780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efdc0c269d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0c269d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0c26d50"/>
        <function-ref name="requested" scoped="" ref="0x7efdc0c25020"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0c251b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0c25340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc0c254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efdc0c3cb20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdc0c3cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0c26020"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0c261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efdc0c25720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0c25720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0c25aa0"/>
        <function-ref name="userId" scoped="" ref="0x7efdc0c25c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efdbf327bd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdbf327bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efdbf326020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efdbf326270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf326270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf3265f0"/>
        <function-ref name="requested" scoped="" ref="0x7efdbf326780"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf326910"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf326aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf326c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efdbf327470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efdbf327470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbf3277f0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf327980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efdbf326e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf326e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbf325220"/>
        <function-ref name="userId" scoped="" ref="0x7efdbf3253b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7efdc0c068e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efdc0c068e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdc0c06c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efdc0c05020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0c05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0c053a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0c05530"/>
        <function-ref name="request" scoped="" ref="0x7efdc0c056c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0c05850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0c059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdc0c06080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdc0c06080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc0c06400"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0c06590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7efdc0bf8080" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7efdc0bf8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efdc0bf8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc0bf53a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc0bf53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc0bf5720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7efdc0bf5a00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7efdc0bf5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efdc0bf5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7efdc097b900" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7efdc097b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7efdc097bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7efdc097c240" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7efdc097c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc097ce30"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc097b300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7efdc097daa0" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7efdc097daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7efdc097de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7efdc097e310" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7efdc097e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc097d020"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc097d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7efdbf315c50" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7efdbf315c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7efdbf314020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7efdbf3141b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7efdbf314340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7efdbf3144d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7efdbf314660"/>
        <function-ref name="reset" scoped="" ref="0x7efdbf3147f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7efdbf314980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7efdbf314b10"/>
        <function-ref name="resetDone" scoped="" ref="0x7efdbf314ca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7efdbf314e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7efdbf31a020" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7efdbf31a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7efdbf31a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7efdbf31a790" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7efdbf31a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbf3193b0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbf319830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7efdbf31c160" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7efdbf31c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7efdbf31c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7efdbf319e30" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7efdbf319e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf3181e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf318370"/>
        <function-ref name="request" scoped="" ref="0x7efdbf318500"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf318690"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf318820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7efdbf3167b0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7efdbf3167b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7efdbf316b30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7efdbf316cc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7efdbf316e50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7efdbf315020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7efdbf3151b0"/>
        <function-ref name="reset" scoped="" ref="0x7efdbf315340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7efdbf3154d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7efdbf315660"/>
        <function-ref name="resetDone" scoped="" ref="0x7efdbf3157f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7efdbf315980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7efdbf318af0" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7efdbf318af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf318e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf316030"/>
        <function-ref name="request" scoped="" ref="0x7efdbf3161c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf316350"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf3164e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7efdbf31c8d0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7efdbf31c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbf31b560"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbf31b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7efdc0b9e2c0" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7efdc0b9e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7efdc0b9e640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7efdc0b9e7d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7efdc0b9e960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7efdc0b9eaf0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7efdc0b9ec80"/>
        <function-ref name="reset" scoped="" ref="0x7efdc0b9ee10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7efdc0b9d020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7efdc0b9d1b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7efdc0b9d340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7efdc0b9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0b9f020" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0b9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0b9f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0b9f530"/>
        <function-ref name="request" scoped="" ref="0x7efdc0b9f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0b9f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0b9f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7efdc0b1e610" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7efdc0b1e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0b1e990"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0b1eb20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc0b1ecb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc0b1ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7efdc0b152f0" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7efdc0b152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0b15670"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0b15800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7efdc0b16ac0" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7efdc0b16ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0b16e40"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0b15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7efdc0b1f480" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7efdc0b1f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b1f800"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b1f990"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b1fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b1fcb0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b1fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b1e020"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b1e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7efdc0b22c90" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7efdc0b22c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7efdc0b210a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7efdc0b21230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7efdc0b213c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7efdc0b21550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7efdc0b216e0"/>
        <function-ref name="reset" scoped="" ref="0x7efdc0b21870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7efdc0b21a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7efdc0b21b90"/>
        <function-ref name="resetDone" scoped="" ref="0x7efdc0b21d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7efdc0b20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7efdc0b202f0" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7efdc0b202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b20670"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b20800"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b20990"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b20b20"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b20cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b20e40"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b1f020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc0b17450" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc0b17450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc0b177d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc0b17960"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc0b17af0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc0b17c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc0b17e10"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b16020"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc0b161b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc0b167f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b164d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc0b16340"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc0b16660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc0b1c240" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc0b1c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0b196e0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0b1bc90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0b1aa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0b1a5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0b17020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0b19b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0b1a170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0b1ce30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0b190d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0b1b340"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0b1b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7efdc0b0c730" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7efdc0b0c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0b0cab0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0b0cc40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc0b0cdd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc0b0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7efdc0b0d370" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7efdc0b0d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b0d6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b0d880"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b0da10"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b0dba0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b0dd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b0c020"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7efdc0b0e020" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7efdc0b0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b0e530"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b0e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b0e850"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b0e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b0eb70"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b0ed00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0b0f1d0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0b0f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0b0f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0b0f6e0"/>
        <function-ref name="request" scoped="" ref="0x7efdc0b0f870"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0b0fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0b0fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0b09490" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0b09490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b09810"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b099a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0b09b30"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b09cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b09e50"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0b07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b071b0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b07340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0b074d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0b07660"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b077f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0b07980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0b07b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0b07da0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0b0a330" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b0a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b0a6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b0a840"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b0a9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b0ab60"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b0acf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b0ae80"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b09030"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b091c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0b03020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b033a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b03530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0b036c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b03850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0b03b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b03d00"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0b021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0b02340"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0b02660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0b027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0b02a80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b02c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0b05d60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b05d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0b04180"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0b04310"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0b044a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0b04630"/>
        <function-ref name="get" scoped="" ref="0x7efdc0b047c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0b04950"/>
        <function-ref name="set" scoped="" ref="0x7efdc0b04ae0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0b04c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0affde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0affde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0afe180"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0afe310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0afe4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0afe630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0afe7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0afe950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0afeae0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0afec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0afee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0afd020"/>
        <function-ref name="set" scoped="" ref="0x7efdc0afd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0afd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0afd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0afd760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0afd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0b00b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0b00b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0aff020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0aff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0aff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0aff4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0aff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0aff7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0aff980"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0affb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdc0af83e0" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc0af83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc0af8760"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc0af88f0"/>
        <function-ref name="start" scoped="" ref="0x7efdc0af8a80"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0af8c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7efdc0aee700" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7efdc0aee700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0aeea80"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0aeec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7efdc0af0b40" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7efdc0af0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0aef020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0aef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0aef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0aef4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0aef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0aef7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0aef980"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0aefb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7efdc0af2510" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7efdc0af2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0af2890"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0af2a20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0af2bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0af2d40"/>
        <function-ref name="get" scoped="" ref="0x7efdc0af1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0af11b0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0af1340"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0af14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7efdc0af1830" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7efdc0af1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0af1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0af1d40"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0af0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0af01b0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0af0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0af04d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0af0660"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0af07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efdc0af7080" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc0af7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0af3630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0af6ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0af4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0af44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0af2020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0af3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0af4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0af7c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0af3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0af6170"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0af6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc0ae35a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc0ae35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0adfa80"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ae0090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0ae0e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0ae0990"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0ade4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0ade020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0ae0510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0ae2200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0adf470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0ae26d0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0ae2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efdc0ad2710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efdc0ad2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad2a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad2c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad2db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ad1020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ad11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ad1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efdc0ac78a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efdc0ac78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac7c20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac7db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac6020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac61b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac6340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efdc0acf710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efdc0acf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0acfa90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0acfc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0acfdb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ace020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ace1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ace340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efdc0acd710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efdc0acd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0acda90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0acdc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0acddb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0acb020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0acb1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0acb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efdc0ad8710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efdc0ad8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad8a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad8c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad8db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ad3020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ad31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ad3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efdc0ac9710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efdc0ac9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac9b90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac9d20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac8020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac81b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac8340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efdc0ad1710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efdc0ad1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad1a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad1c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad1db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ad0020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ad01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ad0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efdc0ac68a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efdc0ac68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac6c20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac6db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac5020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac51b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac5340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efdc0ad4660" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efdc0ad4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad49e0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad4b70"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad4d00"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ad9020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ad91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ad9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efdc0acb710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efdc0acb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0acba90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0acbc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0acbdb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0aca020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0aca1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0aca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efdc0ad3710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efdc0ad3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad3a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad3c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad3db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ad2020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ad21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ad2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efdc0ac88a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efdc0ac88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac8c20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac8db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac7020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac71b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac7340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efdc0ad0710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efdc0ad0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad0a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad0c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad0db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0acf020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0acf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0acf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efdc0ace710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efdc0ace710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0acea90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0acec20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0acedb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0acd020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0acd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0acd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efdc0ad9710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efdc0ad9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ad9a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ad9c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ad9db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ad8020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ad81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ad8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efdc0aca710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efdc0aca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0acaa90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0acac20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0acadb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac9020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efdc0abe710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efdc0abe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0abea90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0abec20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0abedb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0abd020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0abd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0abd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efdc0ab48a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efdc0ab48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab4c20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab4db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab3020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab31b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab3340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efdc0abb710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efdc0abb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0abba90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0abbc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0abbdb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0aba020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0aba1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0aba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efdc0ab9710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efdc0ab9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab9a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab9c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab9db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab8020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efdc0ac0710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efdc0ac0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac0a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac0c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac0db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0abf020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0abf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0abf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efdc0ab6710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efdc0ab6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab6b90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab6d20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab5020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab51b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab5340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efdc0abd710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efdc0abd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0abda90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0abdc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0abddb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0abc020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0abc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0abc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efdc0ab38a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efdc0ab38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab3c20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab3db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab1020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab11b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab1340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efdc0ac26b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efdc0ac26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac2a30"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac2bc0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac2d50"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac1020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efdc0ab8710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efdc0ab8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab8a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab8c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab8db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab7020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efdc0abf710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efdc0abf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0abfa90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0abfc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0abfdb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0abe020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0abe1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0abe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efdc0ab58a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efdc0ab58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab5c20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab5db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab4020"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab41b0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab4340"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efdc0abc710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efdc0abc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0abca90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0abcc20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0abcdb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0abb020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0abb1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0abb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efdc0aba710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efdc0aba710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0abaa90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0abac20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0abadb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab9020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efdc0ac1710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efdc0ac1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ac1a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ac1c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ac1db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ac0020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ac01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ac0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efdc0ab7710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efdc0ab7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0ab7a90"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0ab7c20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0ab7db0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc0ab6020"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0ab61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc0ab6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efdc09df610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc09df610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc09df990"/>
        <function-ref name="fired" scoped="" ref="0x7efdc09dfb20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc09dfcb0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc09dfe40"/>
        <function-ref name="enable" scoped="" ref="0x7efdc09d2020"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc09d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efdc09e0a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efdc09e0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc09e0db0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc09df020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc09df1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc09df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc09ce9e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc09ce9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc09ced80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc09cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdc09cc770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc09cc770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc09ccb10"/>
        <function-ref name="configure" scoped="" ref="0x7efdc09ccca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efdc09cd270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc09cd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc09cd5f0"/>
        <function-ref name="requested" scoped="" ref="0x7efdc09cd780"/>
        <function-ref name="granted" scoped="" ref="0x7efdc09cd910"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc09cdaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc09cdc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc09d0b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc09d0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc09ce020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc09ce1b0"/>
        <function-ref name="request" scoped="" ref="0x7efdc09ce340"/>
        <function-ref name="granted" scoped="" ref="0x7efdc09ce4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc09ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdc09cde80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc09cde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc09cc220"/>
        <function-ref name="userId" scoped="" ref="0x7efdc09cc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf2831b0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf2831b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf283530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efdbf2837c0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbf2837c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbf283b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbf283cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbf283e60"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbf282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbf27f850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf27f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbf27fbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf27fd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdbf27d590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf27d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdbf27d930"/>
        <function-ref name="configure" scoped="" ref="0x7efdbf27dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efdbf27dd50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efdbf27dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbf27c100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbf27c290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbf27c420"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbf27c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efdbf27e020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf27e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf27e3a0"/>
        <function-ref name="requested" scoped="" ref="0x7efdbf27e530"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf27e6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf27e850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf27e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdbf27c800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdbf27c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdbf27cb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdbf27cd10"/>
        <function-ref name="led1On" scoped="" ref="0x7efdbf27b020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdbf27b1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdbf27b340"/>
        <function-ref name="get" scoped="" ref="0x7efdbf27b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdbf27b660"/>
        <function-ref name="led0On" scoped="" ref="0x7efdbf27bca0"/>
        <function-ref name="set" scoped="" ref="0x7efdbf27b980"/>
        <function-ref name="led2On" scoped="" ref="0x7efdbf27b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdbf27bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf281970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf281970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf281d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf27f020"/>
        <function-ref name="request" scoped="" ref="0x7efdbf27f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf27f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf27f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdbf27ec30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf27ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbf27d020"/>
        <function-ref name="userId" scoped="" ref="0x7efdbf27d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efdbf27a020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efdbf27a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf27a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf27a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7efdc09c8280" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc09c8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc09c8600"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc09c8790"/>
        <function-ref name="start" scoped="" ref="0x7efdc09c8920"/>
        <function-ref name="stop" scoped="" ref="0x7efdc09c8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efdc09c8d00" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdc09c8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efdc099c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efdc099c2f0" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc099c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc099c670"/>
        <function-ref name="requested" scoped="" ref="0x7efdc099c800"/>
        <function-ref name="granted" scoped="" ref="0x7efdc099c990"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc099cb20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc099ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efdc099b020" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc099b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc099b3a0"/>
        <function-ref name="userId" scoped="" ref="0x7efdc099b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7efdbf2490f0" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdbf2490f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdbf249470"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdbf249600"/>
        <function-ref name="start" scoped="" ref="0x7efdbf249790"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf249920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efdbf249b70" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efdbf249b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efdbf248020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7efdbf247680" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7efdbf247680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf247a00"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf247b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efdbf248270" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbf248270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf2485f0"/>
        <function-ref name="requested" scoped="" ref="0x7efdbf248780"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf248910"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf248aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf248c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7efdbf247e60" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7efdbf247e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf246210"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf2463a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7efdbf24a970" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdbf24a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbf24acf0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf24ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efdbf248e80" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf248e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbf247220"/>
        <function-ref name="userId" scoped="" ref="0x7efdbf2473b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc098f1e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc098f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc098b630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc098ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc098d9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc098d550"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc098a020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc098bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc098d0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc098fdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc098b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc098e2e0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc098e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7efdc0976750" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7efdc0976750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0574390"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0574810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7efdc0572020" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7efdc0572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7efdc0571ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7efdc0572c10"/>
        <function-ref name="read" scoped="" ref="0x7efdc05715e0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc05705a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7efdc0976020" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7efdc0976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7efdc09763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7efdbf230bd0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7efdbf230bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbf22f860"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbf22fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7efdbf22e4a0" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf22e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf22c110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7efdc0931960" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7efdc0931960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0931ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0931e70"/>
        <function-ref name="request" scoped="" ref="0x7efdc092f030"/>
        <function-ref name="granted" scoped="" ref="0x7efdc092f1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc092f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7efdc093a390" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7efdc093a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0939020"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc09394a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7efdc0938530" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7efdc0938530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc09371b0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0937670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7efdc09332c0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7efdc09332c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0933640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc09337d0"/>
        <function-ref name="request" scoped="" ref="0x7efdc0933960"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0933af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0933c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7efdc092e020" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7efdc092e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdc092ec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7efdc092c450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7efdc092c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc092c7d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdc092c960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdc092caf0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdc092cc80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdc092ce10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdc092b020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdc092b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7efdc0932640" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7efdc0932640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc09329c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0932b50"/>
        <function-ref name="request" scoped="" ref="0x7efdc0932ce0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0932e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0931030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7efdc0900e40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7efdc0900e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc08ff1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc08ff370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7efdbf221720" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7efdbf221720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdbf221aa0"/>
        <function-ref name="configure" scoped="" ref="0x7efdbf221c30"/>
        <function-ref name="dataReady" scoped="" ref="0x7efdbf221dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7efdbf222730" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdbf222730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdbf222ab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdbf222c40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdbf222dd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdbf221020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdbf2211b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdbf221340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdbf2214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7efdbf21f060" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7efdbf21f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7efdbf21f3e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7efdbf21f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7efdbf21f9a0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf21f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf21e600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf223af0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf223af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf223e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf222030"/>
        <function-ref name="request" scoped="" ref="0x7efdbf2221c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf222350"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf2224e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7efdc08c4960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7efdc08c4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc08c4ce0"/>
        <function-ref name="configure" scoped="" ref="0x7efdc08c4e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7efdc08c2030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7efdc08c1760" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7efdc08c1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc08c1ae0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc08c1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7efdc08c2920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efdc08c2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7efdc08c2ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7efdc08c2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7efdc08c51d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7efdc08c51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc08c5550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdc08c56e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdc08c5870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdc08c5a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdc08c5b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdc08c5d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdc08c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc08d2cc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc08d2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc08c60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc08c6230"/>
        <function-ref name="request" scoped="" ref="0x7efdc08c63c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc08c6550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc08c66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7efdc08ba1d0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7efdc08ba1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc08ba550"/>
        <function-ref name="configure" scoped="" ref="0x7efdc08ba6e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7efdc08ba870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7efdc08aa650" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7efdc08aa650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7efdc08aa9d0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7efdc08aab60"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7efdc08aacf0"/>
        <function-ref name="isBusy" scoped="" ref="0x7efdc08aae80"/>
        <function-ref name="conversionDone" scoped="" ref="0x7efdc08b6030"/>
        <function-ref name="getCtl1" scoped="" ref="0x7efdc08b61c0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7efdc08b6350"/>
        <function-ref name="startConversion" scoped="" ref="0x7efdc08b64e0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7efdc08b6670"/>
        <function-ref name="getMem" scoped="" ref="0x7efdc08b6800"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7efdc08b6990"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7efdc08b6b20"/>
        <function-ref name="stopConversion" scoped="" ref="0x7efdc08b6cb0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7efdc08b5020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7efdc08b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7efdc089b200" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7efdc089b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc089b580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc089b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc089b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc089ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc089bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc089bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc089a020"/>
        <function-ref name="get" scoped="" ref="0x7efdc089a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc089a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc089a4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc089a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc089a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc089a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc089ac10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc089ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7efdc08a43a0" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7efdc08a43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc08a4720"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc08a48b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc08a4a40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc08a4bd0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc08a4d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7efdc08a8d30" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7efdc08a8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc08a70e0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc08a7270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc08a7400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc08a7590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc08a7720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc08a78b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc08a7a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc08a7bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc08a7d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7efdc08b8020" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7efdc08b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc08b83a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc08b8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7efdc089f200" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7efdc089f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc089f580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc089f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc089f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc089fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc089fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc089fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc089e020"/>
        <function-ref name="get" scoped="" ref="0x7efdc089e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc089e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc089e4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc089e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc089e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc089e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc089ec10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc089eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7efdc08b91d0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efdc08b91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7efdc08b9550"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7efdc08b96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7efdc0895200" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7efdc0895200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0895580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0895710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc08958a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0895a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0895bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0895d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0894020"/>
        <function-ref name="get" scoped="" ref="0x7efdc08941b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0894340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc08944d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0894660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc08947f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0894980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0894c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0894da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7efdc08a3140" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7efdc08a3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc08a35c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc08a3750"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc08a38e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc08a3a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc08a3c00"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc08a3d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc08a2020"/>
        <function-ref name="get" scoped="" ref="0x7efdc08a21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc08a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc08a24d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc08a2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc08a27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc08a2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc08a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc08a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc08c0c60" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc08c0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc08bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7efdc0899200" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7efdc0899200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0899580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0899710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc08998a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0899a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0899bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0899d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0898020"/>
        <function-ref name="get" scoped="" ref="0x7efdc08981b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0898340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc08984d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0898660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc08987f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0898980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0898c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0898da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7efdc08b54f0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7efdc08b54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc08b5870"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc08b5a00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc08b5b90"/>
        <function-ref name="get" scoped="" ref="0x7efdc08b5d20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc08a8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc08a81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc08a8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc08a84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc08a8660"/>
        <function-ref name="setMode" scoped="" ref="0x7efdc08a87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdc08a8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7efdc08b8940" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7efdc08b8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc08b8cc0"/>
        <function-ref name="userId" scoped="" ref="0x7efdc08b8e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7efdc08a6160" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7efdc08a6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc08a64e0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc08a6670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc08a6800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc08a6990"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc08a6b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc08a6cb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc08a6e40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc08a5020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc08a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7efdc08bd980" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7efdc08bd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc08bdd00"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdc08bc020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdc08bc1b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdc08bc340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdc08bc4d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdc08bc660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdc08bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7efdc089d200" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7efdc089d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc089d580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc089d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc089d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc089da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc089dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc089dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc089c020"/>
        <function-ref name="get" scoped="" ref="0x7efdc089c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc089c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc089c4d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc089c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc089c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc089c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc089cc10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc089cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7efdc08a5530" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7efdc08a5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc08a58b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdc08a5a40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdc08a5bd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdc08a5d60"/>
        <function-ref name="fired" scoped="" ref="0x7efdc08a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7efdc08a1200" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7efdc08a1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc08a1580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc08a1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc08a18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc08a1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc08a1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc08a1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc08a0020"/>
        <function-ref name="get" scoped="" ref="0x7efdc08a01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc08a0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc08a04d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc08a0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc08a07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc08a0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc08a0c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc08a0da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7efdc0897200" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7efdc0897200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0897580"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0897710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc08978a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0897a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0897bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0897d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0896020"/>
        <function-ref name="get" scoped="" ref="0x7efdc08961b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0896340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc08964d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0896660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc08967f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0896980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0896c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0896da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7efdc07d7020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7efdc07d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7efdc07d73a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7efdc07d7530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7efdc07d76c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7efdc07d7850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7efdc07d79e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7efdc07d7b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7efdc07d7d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7efdc07d6020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7efdc07d61b0"/>
        <function-ref name="getMem" scoped="" ref="0x7efdc07d6340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7efdc07d64d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7efdc07d6660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7efdc07d67f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7efdc07d6a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7efdc07d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc07463a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc07463a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc0746740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc07468d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdc0745570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0745570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0745910"/>
        <function-ref name="configure" scoped="" ref="0x7efdc0745aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0748520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0748520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc07488c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0748a50"/>
        <function-ref name="request" scoped="" ref="0x7efdc0748be0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0748d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0746020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdc0746b20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0746b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0745020"/>
        <function-ref name="userId" scoped="" ref="0x7efdc07451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf1fb060" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf1fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf1fb3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7efdbf1fb670" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7efdbf1fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbf1fb9f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbf1fbb80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbf1fbd10"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbf1fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbf1f7530" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf1f7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbf1f78d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf1f7a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdbf1f6610" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbf1f6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdbf1f69b0"/>
        <function-ref name="configure" scoped="" ref="0x7efdbf1f6b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efdbf1f6dd0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efdbf1f6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbf1f5180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbf1f5310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbf1f54a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbf1f5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf1f86c0" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf1f86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf1f8a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf1f8bf0"/>
        <function-ref name="request" scoped="" ref="0x7efdbf1f8d80"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf1f7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf1f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdbf1f7cb0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbf1f7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbf1f60a0"/>
        <function-ref name="userId" scoped="" ref="0x7efdbf1f6230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efdbf1f5900" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efdbf1f5900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf1f5c80"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf1f5e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7efdc0724740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7efdc0724740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdc07233d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7efdc07251d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7efdc07251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0725550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc07256e0"/>
        <function-ref name="request" scoped="" ref="0x7efdc0725870"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0725a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0725b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7efdc072ed20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7efdc072ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc072b0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc072b270"/>
        <function-ref name="request" scoped="" ref="0x7efdc072b400"/>
        <function-ref name="granted" scoped="" ref="0x7efdc072b590"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc072b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7efdc071e9a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7efdc071e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7efdc071ed20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7efdc071d020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7efdc071d1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7efdc071d340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7efdc071d4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7efdc071d660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7efdc071d7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7efdc071d980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7efdc071db10"/>
        <function-ref name="getMem" scoped="" ref="0x7efdc071dca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7efdc071de30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7efdc071c020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7efdc071c1b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7efdc071c440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7efdc071c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7efdc0716020" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7efdc0716020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0712630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0715a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0714920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc07144a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0711020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0712ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0714020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0716c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0712020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0715110"/>
        <function-ref name="stop" scoped="" ref="0x7efdc07155e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7efdc071fe00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7efdc071fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc071e1c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc071e350"/>
        <function-ref name="start" scoped="" ref="0x7efdc071e4e0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc071e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7efdc07116c0" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7efdc07116c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc070dc40"/>
        <function-ref name="fired" scoped="" ref="0x7efdc070f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc070d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc070fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc070c590"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc070c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc070f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0710390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc070d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0710860"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0710d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7efdc071f240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7efdc071f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc071f5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc071f750"/>
        <function-ref name="start" scoped="" ref="0x7efdc071f8e0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc071fa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7efdc071ca90" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7efdc071ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0717020"/>
        <function-ref name="fired" scoped="" ref="0x7efdc071a510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0719300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc071ae10"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0717920"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc07174a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc071a990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc071b6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0719910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc071bb80"/>
        <function-ref name="stop" scoped="" ref="0x7efdc071a090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7efdc06bc020" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7efdc06bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdc06bcc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7efdc06bf9c0" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7efdc06bf9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc06bfd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc06be020"/>
        <function-ref name="start" scoped="" ref="0x7efdc06be1b0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc06be340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7efdc06c0030" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7efdc06c0030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc06c03b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc06c0540"/>
        <function-ref name="request" scoped="" ref="0x7efdc06c06d0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc06c0860"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc06c09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7efdc06c4ca0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7efdc06c4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc06c10a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc06c1230"/>
        <function-ref name="request" scoped="" ref="0x7efdc06c13c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc06c1550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc06c16e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7efdc06ba7f0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7efdc06ba7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc06bab70"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc06bad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7efdc06c0d80" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7efdc06c0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc06bf180"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc06bf310"/>
        <function-ref name="start" scoped="" ref="0x7efdc06bf4a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc06bf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc068b4e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc068b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0687a20"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0689020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0689da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc0689920"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc06864a0"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0686020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc06894a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc068a110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0687410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc068a5e0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc068aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc0684020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc0684020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0680630"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0683a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc0682920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc06824a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc067f020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0680ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0682020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc0684c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc0680020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc0683110"/>
        <function-ref name="stop" scoped="" ref="0x7efdc06835e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdc067eb40" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdc067eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0679110"/>
        <function-ref name="fired" scoped="" ref="0x7efdc067c5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdc067a4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdc067a020"/>
        <function-ref name="getdt" scoped="" ref="0x7efdc0679a10"/>
        <function-ref name="gett0" scoped="" ref="0x7efdc0679590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc067ca30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdc067d750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdc067aab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdc067dc20"/>
        <function-ref name="stop" scoped="" ref="0x7efdc067c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7efdbf210060" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7efdbf210060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf210c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7efdbf20f300" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7efdbf20f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf20e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7efdbf2285c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf2285c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf226240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7efdbf22b840" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7efdbf22b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7efdbf229340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7efdbf22a480"/>
        <function-ref name="read" scoped="" ref="0x7efdbf22adf0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbf229df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7efdc0642c90" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdc0642c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc06410a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdc0641230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdc06413c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdc0641550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdc06416e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdc0641870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdc0641a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7efdc06435e0" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc06435e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdc0642240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7efdc06471d0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7efdc06471d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7efdc0646c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7efdc0647dc0"/>
        <function-ref name="read" scoped="" ref="0x7efdc0646770"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0644730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efdc063f280" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc063f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc063f600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc063f790"/>
        <function-ref name="request" scoped="" ref="0x7efdc063f920"/>
        <function-ref name="granted" scoped="" ref="0x7efdc063fab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc063fc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7efdc0609380" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7efdc0609380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0609700"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0609890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7efdc0617aa0" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7efdc0617aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0617e20"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0616020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7efdc0611100" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7efdc0611100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc0611480"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0611610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7efdc0632020" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdc0632020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0630870"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0631840"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc0630220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0631d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc0630d30"/>
        <function-ref name="start" scoped="" ref="0x7efdc0632e30"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0631380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc063b150" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc063b150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7efdc1a29800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7efdc1a29800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc063b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7efdc0635b10" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc0635b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdc0633790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7efdc06361d0" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7efdc06361d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdc0636550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdc06366e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdc0636870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdc0636a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdc0636b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdc0636d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdc0635020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7efdc063be70" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7efdc063be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7efdc0638910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7efdc063aa90"/>
        <function-ref name="read" scoped="" ref="0x7efdc0638440"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0637440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdc05cd970" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdc05cd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc05c91b0"/>
        <function-ref name="fired" scoped="" ref="0x7efdc05cb1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc05cbb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc05cb670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc05c9670"/>
        <function-ref name="start" scoped="" ref="0x7efdc05cc7c0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc05cccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc05cd120" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc05cd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc05cd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf1adca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf1adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf1a94e0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf1aa4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf1aae60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf1aa9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf1a99a0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf1abae0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf1aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf1ad450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf1ad450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf1ad7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efdbf193440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf193440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdbf1937c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdbf193950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdbf193ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdbf193c70"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf193e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efdbf196880" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf196880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf196c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbf196d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf195020"/>
        <function-ref name="get" scoped="" ref="0x7efdbf1951b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf195340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf1954d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf195660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf1957f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf195980"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbf195b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbf195ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efdbf194020" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf194020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdbf1943a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdbf194530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf1946c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdbf194850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdbf1949e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf194b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdbf194d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdbf193020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdbf1931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efdbf1890c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf1890c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdbf189440"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdbf1895d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdbf189760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdbf1898f0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf189a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efdbf18c710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf18c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf18ca90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbf18cc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf18cdb0"/>
        <function-ref name="get" scoped="" ref="0x7efdbf18b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf18b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf18b340"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf18b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf18b660"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf18b7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbf18b980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbf18bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf1905b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf1905b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf18edf0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf18fdf0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf18e7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf18e2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf18c2e0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf18f420"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf18f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf191ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf191ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf1900a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efdbf18bda0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf18bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdbf18a180"/>
        <function-ref name="getControl" scoped="" ref="0x7efdbf18a310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf18a4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdbf18a630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdbf18a7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf18a950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdbf18aae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdbf18ac70"/>
        <function-ref name="setControl" scoped="" ref="0x7efdbf18ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf1a6020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf1a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf1a3870"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf1a5840"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf1a3220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf1a5d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf1a3d30"/>
        <function-ref name="start" scoped="" ref="0x7efdbf1a6e30"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf1a5380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efdbf1a0780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efdbf1a0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf19c020"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf19d020"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf19d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf19d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf19c4e0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf19f5d0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf19fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdbf1a23d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdbf1a23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbf1a1240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf1a1bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf1a1700"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf1a00d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7efdc0599bf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7efdc0599bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7efdc0596710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7efdc0597860"/>
        <function-ref name="read" scoped="" ref="0x7efdc0596220"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0594220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7efdc05c4cb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7efdc05c4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7efdc059a850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7efdc059b940"/>
        <function-ref name="read" scoped="" ref="0x7efdc059a360"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0599360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efdc05948f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc05948f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0594c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0594e20"/>
        <function-ref name="request" scoped="" ref="0x7efdc0593020"/>
        <function-ref name="granted" scoped="" ref="0x7efdc05931b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0593340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7efdbf1ba020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7efdbf1ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdbf1ba3a0"/>
        <function-ref name="configure" scoped="" ref="0x7efdbf1ba530"/>
        <function-ref name="dataReady" scoped="" ref="0x7efdbf1ba6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7efdbf1bb020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7efdbf1bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7efdbf1bb3a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7efdbf1bb530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7efdbf1bb6c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7efdbf1bb850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7efdbf1bb9e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7efdbf1bbb70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7efdbf1bbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7efdbf1ba910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7efdbf1ba910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7efdbf1bac90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7efdbf1bae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7efdbf1b9280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdbf1b9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf1b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf1bc360" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf1bc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf1bc6e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf1bc870"/>
        <function-ref name="request" scoped="" ref="0x7efdbf1bca00"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf1bcb90"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf1bcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7efdbf149dc0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7efdbf149dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf148ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7efdbf146120" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7efdbf146120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdbf146d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7efdc057b300" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7efdc057b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7efdc057a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7efdc057e8b0" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7efdc057e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7efdc057ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7efdc056bb80" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7efdc056bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc1584770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7efdc15830d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7efdc0569c10"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0569790"/>
        <function-ref name="notify" scoped="" ref="0x7efdc05680d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7efdc056e920" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7efdc056e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc1584770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7efdc15830d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc056b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7efdc0564080" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7efdc0564080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0564400"/>
        <function-ref name="disable" scoped="" ref="0x7efdc0564590"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc0564720"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc05648b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0568e80" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0568e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0565220"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc05653b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0565540"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc05656d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0565860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc05659f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0565b80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0565d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc05612f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc05612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0561670"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0561800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0561990"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0561b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0561cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0561e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0560020"/>
        <function-ref name="get" scoped="" ref="0x7efdc05601b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0560340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc05604d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0560660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc05607f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0560980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0560c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0560da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0562140" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0562140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc05624c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0562650"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc05627e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0562970"/>
        <function-ref name="get" scoped="" ref="0x7efdc0562b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0562c90"/>
        <function-ref name="set" scoped="" ref="0x7efdc0562e20"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0561020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efdc055dde0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc055dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc055b180"/>
        <function-ref name="fired" scoped="" ref="0x7efdc055b310"/>
        <function-ref name="disable" scoped="" ref="0x7efdc055b4a0"/>
        <function-ref name="edge" scoped="" ref="0x7efdc055b630"/>
        <function-ref name="enable" scoped="" ref="0x7efdc055b7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc055b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efdc055d2e0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efdc055d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc055d660"/>
        <function-ref name="disable" scoped="" ref="0x7efdc055d7f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc055d980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc055db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7efdc053d480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7efdc053d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc053d800"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc053d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7efdc053e8f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7efdc053e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc053ec70"/>
        <function-ref name="disable" scoped="" ref="0x7efdc053ee00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc053d020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc053d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7efdc0542ca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7efdc0542ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7efdc0541d40"/>
        <function-ref name="enable" scoped="" ref="0x7efdc05418c0"/>
        <function-ref name="notify" scoped="" ref="0x7efdc053f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7efdc0543b10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7efdc0543b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0542750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7efdc053f660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc053f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc053f9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc053fb70"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc053fd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc053e020"/>
        <function-ref name="get" scoped="" ref="0x7efdc053e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc053e340"/>
        <function-ref name="set" scoped="" ref="0x7efdc053e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc053e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7efdc0536e20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7efdc0536e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0534a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7efdc0537270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7efdc0537270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc1584770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7efdc15830d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7efdc0536310"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0537e60"/>
        <function-ref name="notify" scoped="" ref="0x7efdc0536790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7efdc0533130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7efdc0533130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7efdc05321e0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc0533d20"/>
        <function-ref name="notify" scoped="" ref="0x7efdc0532660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7efdc0538020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7efdc0538020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc1584770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7efdc15830d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0538c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdc0528c00" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc0528c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc0525020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc05251b0"/>
        <function-ref name="start" scoped="" ref="0x7efdc0525340"/>
        <function-ref name="stop" scoped="" ref="0x7efdc05254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efdc0525ca0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdc0525ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc05240a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc0524230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc05243c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc0524550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc05246e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7efdc0522c00" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7efdc0522c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc0521020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efdc05212b0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdc05212b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc0521630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdc05217c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc0521950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc0521ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdc0521c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efdc051e430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdc051e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdc051db00"/>
        <function-ref name="clear" scoped="" ref="0x7efdc050f2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7efdc051d3d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc050f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efdc0502430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc0502430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efdc05027b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efdc0502940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efdc0502ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efdc0502c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdc0522020" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdc0522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc05223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efdc0517350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc0517350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdc05176d0"/>
        <function-ref name="noAck" scoped="" ref="0x7efdc0517860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdc05179f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efdc0520020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdc0520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdc05203a0"/>
        <function-ref name="source" scoped="" ref="0x7efdc0520530"/>
        <function-ref name="address" scoped="" ref="0x7efdc05206c0"/>
        <function-ref name="destination" scoped="" ref="0x7efdc0520850"/>
        <function-ref name="setSource" scoped="" ref="0x7efdc05209e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdc0520b70"/>
        <function-ref name="type" scoped="" ref="0x7efdc0520d00"/>
        <function-ref name="setType" scoped="" ref="0x7efdc051f020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdc051f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdc051f340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdc051f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efdc050e660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdc050e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdc050dce0"/>
        <function-ref name="clear" scoped="" ref="0x7efdc050b460"/>
        <function-ref name="isValid" scoped="" ref="0x7efdc050d5b0"/>
        <function-ref name="set" scoped="" ref="0x7efdc050bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdc04f72f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc04f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc04f7670"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc04f7800"/>
        <function-ref name="start" scoped="" ref="0x7efdc04f7990"/>
        <function-ref name="stop" scoped="" ref="0x7efdc04f7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efdc04ef2c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04ef2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdc04ef640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdc04ef7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdc04ef960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdc04efaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7efdc04efc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdc04efe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7efdc04db1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7efdc04db1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7efdc04db650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efdc04f1020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdc04f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc04f13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdc04f1530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04f16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04f1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdc04f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efdc04f6320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdc04f6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc04f66a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04f6830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04f69c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc04f6b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc04f6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7efdc04f31d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7efdc04f31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc04f3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efdc04e80f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc04e80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdc04e8470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdc04e8600"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdc04e8790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdc04e8920"/>
        <function-ref name="getPower" scoped="" ref="0x7efdc04e8ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdc04e8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efdc04dd170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc04dd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efdc04dd4f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efdc04dd680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efdc04dd810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efdc04dd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdc04f5510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdc04f5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc04f5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efdc04f0020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdc04f03a0"/>
        <function-ref name="noAck" scoped="" ref="0x7efdc04f0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdc04f06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efdc04d3430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efdc04d3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efdc04d37b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efdc04d3940"/>
        <function-ref name="getRetries" scoped="" ref="0x7efdc04d3ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efdc04d3c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efdc04d3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efdc04f3800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdc04f3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdc04f3b80"/>
        <function-ref name="source" scoped="" ref="0x7efdc04f3d10"/>
        <function-ref name="address" scoped="" ref="0x7efdc04f2020"/>
        <function-ref name="destination" scoped="" ref="0x7efdc04f21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7efdc04f2340"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdc04f24d0"/>
        <function-ref name="type" scoped="" ref="0x7efdc04f2660"/>
        <function-ref name="setType" scoped="" ref="0x7efdc04f27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdc04f2980"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdc04f2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdc04f2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efdc04e3170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdc04e3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efdc04e34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdc04ce020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc04ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc04ce3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc04ce530"/>
        <function-ref name="start" scoped="" ref="0x7efdc04ce6c0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc04ce850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efdc04bd9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdc04bd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efdc04bdd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efdc04bcb70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efdc04bcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efdc04bb020"/>
        <function-ref name="setRetries" scoped="" ref="0x7efdc04bb1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7efdc04bb340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efdc04bb4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efdc04bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efdc04be020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc04be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdc04be3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdc04be530"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdc04be6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdc04be850"/>
        <function-ref name="getPower" scoped="" ref="0x7efdc04be9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdc04beb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efdc04c9990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efdc04c9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc04c9d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04c1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04c11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc04c1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc04c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efdc04bc080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efdc04bc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efdc04bc400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efdc04bc590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efdc04bc720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efdc04bc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efdc04ca500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efdc04ca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc04ca880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efdc04bd020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdc04bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdc04bd3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7efdc04bd530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdc04bd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc04cd1d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc04cd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc04cd550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc04cd6e0"/>
        <function-ref name="request" scoped="" ref="0x7efdc04cd870"/>
        <function-ref name="granted" scoped="" ref="0x7efdc04cda00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc04cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efdc04bf6f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efdc04bf6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc04bfa70"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04bfc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04bfd90"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc04ca020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc04ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efdc04cabc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efdc04cabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc04c9020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdc04c91b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04c9340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04c94d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdc04c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efdc04c1840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efdc04c1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc04c1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdc04b8390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc04b8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc04b8710"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc04b88a0"/>
        <function-ref name="start" scoped="" ref="0x7efdc04b8a30"/>
        <function-ref name="stop" scoped="" ref="0x7efdc04b8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efdc04b6330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04b6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdc04b66b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdc04b6840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdc04b69d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdc04b6b60"/>
        <function-ref name="setCca" scoped="" ref="0x7efdc04b6cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdc04b6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdc04b8e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdc04b8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc04b7220"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04b73b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04b7540"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc04b76d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc04b7860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdc04b7b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdc04b7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdc04b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdc04b5e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdc04b5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdc04b2220"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdc04b23b0"/>
        <function-ref name="start" scoped="" ref="0x7efdc04b2540"/>
        <function-ref name="stop" scoped="" ref="0x7efdc04b26d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efdc04b17e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efdc04b17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdc04b1b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdc04b1cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdc04b1e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdc04b0030"/>
        <function-ref name="setCca" scoped="" ref="0x7efdc04b01c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdc04b0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7efdc04a6ae0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7efdc04a6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdc04a6e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdc04a5020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdc04a51b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdc04a5340"/>
        <function-ref name="setCca" scoped="" ref="0x7efdc04a54d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdc04a5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efdc049a020" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdc049a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdc049a3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdc049a530"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdc049a6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdc049a850"/>
        <function-ref name="getPower" scoped="" ref="0x7efdc049a9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdc049ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7efdc049fd30" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7efdc049fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc04a60e0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc04a6270"/>
        <function-ref name="modify" scoped="" ref="0x7efdc04a6400"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc04a6590"/>
        <function-ref name="resend" scoped="" ref="0x7efdc04a6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdc04b2990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdc04b2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc04b2d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04b1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdc04b11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdc04b1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc04b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efdc049e020" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efdc049e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efdc049e3a0"/>
        <function-ref name="rand32" scoped="" ref="0x7efdc049e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7efdc04ac020" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7efdc04ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdc04ac3a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc04ac530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdc0494660" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdc0494660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdc04949e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdc0494b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdc0494d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7efdc04a8b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efdc04a8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efdc04ad020"/>
        <function-ref name="rfOff" scoped="" ref="0x7efdc04ad1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7efdc04ad340"/>
        <function-ref name="startVReg" scoped="" ref="0x7efdc04ad4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efdc04ad660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efdc04ad7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efdc04ad980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efdc04adb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc049e7f0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc049e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc049eb70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc049ed00"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc049d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc049d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc049d340"/>
        <function-ref name="get" scoped="" ref="0x7efdc049d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc049d660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc049dca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc049d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc049d980"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc049db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efdc04b0640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc04b0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc04b09c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc04b0b50"/>
        <function-ref name="request" scoped="" ref="0x7efdc04b0ce0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc04b0e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc04ae030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7efdc048fe40" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7efdc048fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdc0497310"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdc04974a0"/>
        <function-ref name="isState" scoped="" ref="0x7efdc0497630"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdc04977c0"/>
        <function-ref name="requestState" scoped="" ref="0x7efdc0497950"/>
        <function-ref name="forceState" scoped="" ref="0x7efdc0497ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7efdc048a9e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7efdc048a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc048ad60"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0489020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7efdc048ba10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7efdc048ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc048bd90"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc048a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7efdc048ca00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7efdc048ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc048cd80"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc048b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7efdc0432b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efdc0432b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efdc043e020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efdc043e1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efdc043e340"/>
        <function-ref name="syncDone" scoped="" ref="0x7efdc043e4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efdc043e660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efdc043e7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efdc043e980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efdc043eb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efdc043eca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efdc043ee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efdc043d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efdc043d1b0"/>
        <function-ref name="sync" scoped="" ref="0x7efdc043d340"/>
        <function-ref name="getChannel" scoped="" ref="0x7efdc043d5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efdc043d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7efdc0431e60" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7efdc0431e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0430a80"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc042f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7efdc043da60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efdc043da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efdc043dde0"/>
        <function-ref name="rfOff" scoped="" ref="0x7efdc0431020"/>
        <function-ref name="rxOn" scoped="" ref="0x7efdc04311b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7efdc0431340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efdc04314d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efdc0431660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efdc04317f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efdc0431980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0442720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0442720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0442aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0442c30"/>
        <function-ref name="request" scoped="" ref="0x7efdc0442dc0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc043f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc043f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7efdc042a7e0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efdc042a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efdc042ab60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efdc042acf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efdc042ae80"/>
        <function-ref name="syncDone" scoped="" ref="0x7efdc0429030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efdc04291c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efdc0429350"/>
        <function-ref name="setChannel" scoped="" ref="0x7efdc04294e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efdc0429670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efdc0429800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efdc0429990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efdc0429b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efdc0429cb0"/>
        <function-ref name="sync" scoped="" ref="0x7efdc0429e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7efdc0428120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efdc04282b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7efdc040c8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efdc040c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc040cc60"/>
        <function-ref name="write" scoped="" ref="0x7efdc040cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7efdc0425de0" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdc0425de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efdc0424180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7efdc04247f0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7efdc04247f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0420090"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0421090"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc0421a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0421550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc0420550"/>
        <function-ref name="start" scoped="" ref="0x7efdc04236a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0423bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7efdc040d710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdc040d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc040da90"/>
        <function-ref name="write" scoped="" ref="0x7efdc040dc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7efdc041fce0" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7efdc041fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc041e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc041e230"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc041e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc041e550"/>
        <function-ref name="get" scoped="" ref="0x7efdc041e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc041e870"/>
        <function-ref name="set" scoped="" ref="0x7efdc041ea00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc041eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7efdc04279b0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7efdc04279b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc04265c0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0426a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7efdc03fa820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7efdc03fa820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc03faba0"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc03fad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7efdc040b1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efdc040b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc040b540"/>
        <function-ref name="write" scoped="" ref="0x7efdc040b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7efdc040ba70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdc040ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc040bdf0"/>
        <function-ref name="write" scoped="" ref="0x7efdc040a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7efdc0410550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efdc0410550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc04108d0"/>
        <function-ref name="write" scoped="" ref="0x7efdc0410a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7efdc0416af0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdc0416af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efdc0416e70"/>
        <function-ref name="changed" scoped="" ref="0x7efdc0419030"/>
        <function-ref name="amGroup" scoped="" ref="0x7efdc04191c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7efdc0419350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efdc0420a40" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efdc0420a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0420dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc041f020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc041f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc041f340"/>
        <function-ref name="get" scoped="" ref="0x7efdc041f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc041f660"/>
        <function-ref name="set" scoped="" ref="0x7efdc041f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc041f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7efdc0409120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdc0409120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdc04096a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7efdc041d020" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7efdc041d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc041d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc041d530"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc041d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc041d850"/>
        <function-ref name="get" scoped="" ref="0x7efdc041d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc041db70"/>
        <function-ref name="set" scoped="" ref="0x7efdc041dd00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc041c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc042b3c0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc042b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc042b740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7efdc040c020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdc040c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc040c3a0"/>
        <function-ref name="write" scoped="" ref="0x7efdc040c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7efdc0409a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efdc0409a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdc0409dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efdc04081d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efdc04081d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0408550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc04086e0"/>
        <function-ref name="request" scoped="" ref="0x7efdc0408870"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0408a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0408b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7efdc0406d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7efdc0406d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0405180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0405310"/>
        <function-ref name="request" scoped="" ref="0x7efdc04054a0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0405630"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc04057c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7efdc04285b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efdc04285b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efdc0428930"/>
        <function-ref name="rfOff" scoped="" ref="0x7efdc0428ac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7efdc0428c50"/>
        <function-ref name="startVReg" scoped="" ref="0x7efdc0428de0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efdc0427020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efdc04271b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efdc0427340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efdc04274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7efdc0410e00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efdc0410e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc040d1c0"/>
        <function-ref name="write" scoped="" ref="0x7efdc040d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7efdc040ebe0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efdc040ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0410020"/>
        <function-ref name="write" scoped="" ref="0x7efdc04101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7efdc04072b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efdc04072b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdc0407630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc0405a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc0405a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc0405e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc0404020"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc04041b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc0404340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc04044d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0404660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc04047f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc0404e30"/>
        <function-ref name="set" scoped="" ref="0x7efdc0404980"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc0404b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc0404ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7efdc03fc940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7efdc03fc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc03fccc0"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc03fce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc042ba30" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc042ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc042bdb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc042a020"/>
        <function-ref name="request" scoped="" ref="0x7efdc042a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc042a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc042a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7efdc04185a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efdc04185a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0418920"/>
        <function-ref name="write" scoped="" ref="0x7efdc0418ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7efdc0411c00" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efdc0411c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc04180a0"/>
        <function-ref name="write" scoped="" ref="0x7efdc0418230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7efdc041c400" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7efdc041c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc041c780"/>
        <function-ref name="disable" scoped="" ref="0x7efdc041c910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc041caa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc041cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7efdc0406020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7efdc0406020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc04063a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0406530"/>
        <function-ref name="request" scoped="" ref="0x7efdc04066c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0406850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc04069e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7efdc04079c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efdc04079c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdc0407d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc03857e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc03857e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc0385b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7efdc0381220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc0381220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc037fb30"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0380a60"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc037f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc037f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc037e020"/>
        <function-ref name="start" scoped="" ref="0x7efdc0380090"/>
        <function-ref name="stop" scoped="" ref="0x7efdc03805a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc037b260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc037b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc037b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7efdc037baf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7efdc037baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdc0340390"/>
        <function-ref name="fired" scoped="" ref="0x7efdc0341360"/>
        <function-ref name="startAt" scoped="" ref="0x7efdc0341ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdc0341820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdc0340850"/>
        <function-ref name="start" scoped="" ref="0x7efdc0342970"/>
        <function-ref name="stop" scoped="" ref="0x7efdc0342e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf105ca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf105ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf1014e0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf1024e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf102e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf1029a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf1019a0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf103ae0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf102020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf105450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf105450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf1057d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf0fdc20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf0fdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf0fa4e0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf0fb4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf0fbe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf0fb9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf0fa9a0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf0fca80"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf0fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf0fd3d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf0fd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf0fd750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efdbf0e4440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf0e4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdbf0e47c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdbf0e4950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdbf0e4ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdbf0e4c70"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf0e4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efdbf0e79d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf0e79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf0e7d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbf0e6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf0e61b0"/>
        <function-ref name="get" scoped="" ref="0x7efdbf0e6340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf0e64d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf0e6660"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf0e67f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf0e6980"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf0e6b10"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbf0e6ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbf0e6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efdbf0e5120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf0e5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdbf0e54a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efdbf0e5630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf0e57c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdbf0e5950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdbf0e5ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf0e5c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdbf0e5e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdbf0e4020"/>
        <function-ref name="setControl" scoped="" ref="0x7efdbf0e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efdbf0da0c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efdbf0da0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdbf0da440"/>
        <function-ref name="setEvent" scoped="" ref="0x7efdbf0da5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efdbf0da760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efdbf0da8f0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf0daa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efdbf0dd710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbf0dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf0dda90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbf0ddc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf0dddb0"/>
        <function-ref name="get" scoped="" ref="0x7efdbf0dc020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf0dc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf0dc340"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbf0dc4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf0dc660"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf0dc7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbf0dc980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbf0dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf0e15b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf0e15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf0dedf0"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf0dfdf0"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf0de7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf0de2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf0dd2e0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf0df420"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf0df930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbf0e2ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbf0e2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbf0e10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efdbf0dcda0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdbf0dcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdbf0db180"/>
        <function-ref name="getControl" scoped="" ref="0x7efdbf0db310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbf0db4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdbf0db630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdbf0db7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbf0db950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdbf0dbae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdbf0dbc70"/>
        <function-ref name="setControl" scoped="" ref="0x7efdbf0dbe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdc0364080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc0364080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc0363020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc03639a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc03634e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc0363e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efdc035c0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efdc035c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc035a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc035a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc035a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc035ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdc035fcd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdc035fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdc035eb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc035d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc035d090"/>
        <function-ref name="overflow" scoped="" ref="0x7efdc035da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efdbf0f6020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efdbf0f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf0f4870"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf0f5840"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf0f4220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf0f5d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf0f4d30"/>
        <function-ref name="start" scoped="" ref="0x7efdbf0f6e30"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf0f5380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efdbf0f0780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efdbf0f0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbf0ed020"/>
        <function-ref name="fired" scoped="" ref="0x7efdbf0ee020"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbf0ee9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbf0ee4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbf0ed4e0"/>
        <function-ref name="start" scoped="" ref="0x7efdbf0ef5d0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbf0efae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdbf0f33d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdbf0f33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbf0f2240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbf0f2bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbf0f2700"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbf0f00d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7efdc033a090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7efdc033a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc033a410"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc033a5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc033a730"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc033a8c0"/>
        <function-ref name="get" scoped="" ref="0x7efdc033aa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc033abe0"/>
        <function-ref name="set" scoped="" ref="0x7efdc033ad70"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0339020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7efdc0339390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7efdc0339390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0339710"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc03398a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0339a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0339bc0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0339d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0337020"/>
        <function-ref name="set" scoped="" ref="0x7efdc03371b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0337340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7efdc03376a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7efdc03376a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0337a20"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0337bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0337d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0336020"/>
        <function-ref name="get" scoped="" ref="0x7efdc03361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0336340"/>
        <function-ref name="set" scoped="" ref="0x7efdc03364d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0336660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7efdc033ce60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efdc033ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc033b210"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc033b3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc033b530"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc033b6c0"/>
        <function-ref name="get" scoped="" ref="0x7efdc033b850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc033b9e0"/>
        <function-ref name="set" scoped="" ref="0x7efdc033bb70"/>
        <function-ref name="clr" scoped="" ref="0x7efdc033bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7efdc0335ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7efdc0335ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc03340a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0334230"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc03343c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0334550"/>
        <function-ref name="get" scoped="" ref="0x7efdc03346e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0334870"/>
        <function-ref name="set" scoped="" ref="0x7efdc0334a00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0334b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7efdc0383b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7efdc0383b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc033c020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc033c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc033c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc033c4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc033c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc033c7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc033c980"/>
        <function-ref name="clr" scoped="" ref="0x7efdc033cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7efdc03369b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7efdc03369b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0336d30"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0335020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc03351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0335340"/>
        <function-ref name="get" scoped="" ref="0x7efdc03354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0335660"/>
        <function-ref name="set" scoped="" ref="0x7efdc03357f0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0335980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc03312f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc03312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0331670"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0331800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0331990"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0331b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0331cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0331e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0330020"/>
        <function-ref name="get" scoped="" ref="0x7efdc03301b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0330340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc03304d0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0330660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc03307f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0330980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0330c10"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0330da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0332020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc03323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0332530"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc03326c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0332850"/>
        <function-ref name="get" scoped="" ref="0x7efdc03329e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0332b70"/>
        <function-ref name="set" scoped="" ref="0x7efdc0332d00"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0331020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc032dde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc032dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc032c180"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc032c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc032c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc032c630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc032c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc032c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc032cae0"/>
        <function-ref name="get" scoped="" ref="0x7efdc032cc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc032ce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc032b020"/>
        <function-ref name="set" scoped="" ref="0x7efdc032b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc032b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc032b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc032b760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc032b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc032eb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc032eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc032d020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc032d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc032d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc032d4d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc032d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc032d7f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc032d980"/>
        <function-ref name="clr" scoped="" ref="0x7efdc032db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0328930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0328930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0328cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0328e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0327020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc03271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0327340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc03274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0327660"/>
        <function-ref name="get" scoped="" ref="0x7efdc03277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0327980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0327b10"/>
        <function-ref name="set" scoped="" ref="0x7efdc0327ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0327e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0326020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc03262b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0326440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0329710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0329710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0329a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0329c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0329db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0328020"/>
        <function-ref name="get" scoped="" ref="0x7efdc03281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0328340"/>
        <function-ref name="set" scoped="" ref="0x7efdc03284d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0328660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0323480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0323480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0323800"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0323990"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0323b20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0323cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0323e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0321020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc03211b0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0321340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc03214d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0321660"/>
        <function-ref name="set" scoped="" ref="0x7efdc03217f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0321980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0321b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0321da0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0320020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc03241d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc03241d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0324550"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc03246e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0324870"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0324a00"/>
        <function-ref name="get" scoped="" ref="0x7efdc0324b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0324d20"/>
        <function-ref name="set" scoped="" ref="0x7efdc0323020"/>
        <function-ref name="clr" scoped="" ref="0x7efdc03231b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc031d020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc031d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc031d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc031d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc031d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc031d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc031d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc031db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc031dd00"/>
        <function-ref name="get" scoped="" ref="0x7efdc031c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc031c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc031c340"/>
        <function-ref name="set" scoped="" ref="0x7efdc031c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc031c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc031c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc031ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efdc031cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc031fd70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc031fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc031e180"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc031e310"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc031e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc031e630"/>
        <function-ref name="get" scoped="" ref="0x7efdc031e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc031e950"/>
        <function-ref name="set" scoped="" ref="0x7efdc031eae0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc031ec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0319de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0319de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0318180"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0318310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc03184a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0318630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc03187c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0318950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0318ae0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0318c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0318e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0317020"/>
        <function-ref name="set" scoped="" ref="0x7efdc03171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0317340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc03174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0317760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc03178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc031ab60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc031ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0319020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc03191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0319340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc03194d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0319660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc03197f0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0319980"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0319b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdc0314930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdc0314930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0314cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0314e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0313020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc03131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0313340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc03134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0313660"/>
        <function-ref name="get" scoped="" ref="0x7efdc03137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0313980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0313b10"/>
        <function-ref name="set" scoped="" ref="0x7efdc0313ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0313e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc0312020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc03122b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0312440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdc0315710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc0315710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0315a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0315c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0315db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0314020"/>
        <function-ref name="get" scoped="" ref="0x7efdc03141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0314340"/>
        <function-ref name="set" scoped="" ref="0x7efdc03144d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdc0314660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7efdc02ff150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7efdc02ff150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efdc02ff4d0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02ff660"/>
        <function-ref name="captured" scoped="" ref="0x7efdc02ff7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efdc02ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7efdc02ffd60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7efdc02ffd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc02fe180"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02fe310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc02fe4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc02fe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7efdc02fea20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efdc02fea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc02feda0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02fa020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc02fa1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc02fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7efdc02e58f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7efdc02e58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efdc02e5c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efdc02e5e00"/>
        <function-ref name="captured" scoped="" ref="0x7efdc02e3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdc02e31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdc02e3340"/>
        <function-ref name="setEdge" scoped="" ref="0x7efdc02e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efdc02f7a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efdc02f7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efdc02f7da0"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02e6020"/>
        <function-ref name="captured" scoped="" ref="0x7efdc02e61b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efdc02e6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efdc02e65d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efdc02e65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efdc02e6950"/>
        <function-ref name="getControl" scoped="" ref="0x7efdc02e6ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdc02e6c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efdc02e6e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efdc02e5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdc02e51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efdc02e5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efdc02e54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efdc02e5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7efdc02e37a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdc02e37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc02e3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc02e3cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc02e3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc02e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc02e21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc02e2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc02e24d0"/>
        <function-ref name="get" scoped="" ref="0x7efdc02e2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc02e27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc02e2980"/>
        <function-ref name="set" scoped="" ref="0x7efdc02e2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc02e2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc02e2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc02e1120"/>
        <function-ref name="clr" scoped="" ref="0x7efdc02e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efdc02dd480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc02dd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc02dd800"/>
        <function-ref name="fired" scoped="" ref="0x7efdc02dd990"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02ddb20"/>
        <function-ref name="edge" scoped="" ref="0x7efdc02ddcb0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc02dde40"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc02dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efdc02de8a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efdc02de8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc02dec20"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02dedb0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc02dd020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc02dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efdc02da480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efdc02da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdc02da800"/>
        <function-ref name="fired" scoped="" ref="0x7efdc02da990"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02dab20"/>
        <function-ref name="edge" scoped="" ref="0x7efdc02dacb0"/>
        <function-ref name="enable" scoped="" ref="0x7efdc02dae40"/>
        <function-ref name="getValue" scoped="" ref="0x7efdc02d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efdc02db8b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efdc02db8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc02dbc30"/>
        <function-ref name="disable" scoped="" ref="0x7efdc02dbdc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdc02da020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdc02da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efdbfefee50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfefee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefc410"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefc5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efdbff07160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efdbff07160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff074e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efdbff01e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbff01e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbff00210"/>
        <function-ref name="write" scoped="" ref="0x7efdbff003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efdbfefb880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfefb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefbc00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efdbfef30a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efdbfef30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef3420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efdbfefa0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efdbfefa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefa420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefa5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efdbfee7500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfee7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfee7880"/>
        <function-ref name="write" scoped="" ref="0x7efdbfee7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efdbfeea500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfeea500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeea880"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeeaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efdbff06490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efdbff06490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff06810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efdbfef0880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efdbfef0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef0c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efdbfeeb500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfeeb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeeb880"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeeba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efdbff00e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efdbff00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeff210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efdbfeffe50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfeffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefe210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efdbfef5880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfef5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef5c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efdbfef70a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efdbfef70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef7420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efdbfefa880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfefa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefac00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdbff09a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbff09a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdbff09e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdbff08020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdbff081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efdbff05e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbff05e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff041c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efdbff04490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efdbff04490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff04910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efdbfeeec80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfeeec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeed0a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeed230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efdbff04be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efdbff04be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efdbfeebce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfeebce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeea0a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeea230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efdbff05160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbff05160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff054e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efdbfef00a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efdbfef00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef0420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efdbfeff670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfeff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeff9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efdbff00670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbff00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbff009f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbff00b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efdbff08ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efdbff08ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff08e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efdbfef10a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfef10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef1420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efdbfef3880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efdbfef3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef3c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efdbfef1880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfef1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef1c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efdbfee9ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfee9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfee70a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfee7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efdbfeeace0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfeeace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfee90a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfee9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efdbfef7880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efdbfef7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef7c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efdbfef20a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efdbfef20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef2420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efdbfeecce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfeecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeeb0a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeeb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efdbfef9880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfef9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef9c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efdbfee7ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfee7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfee60a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfee6230"/>
        <function-ref name="write" scoped="" ref="0x7efdbfee63c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfee6550"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfee66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efdbff08480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbff08480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff08800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efdbff01670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efdbff01670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbff019f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbff01b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efdbfefe670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfefe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefe9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efdbfef40a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfef40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef4420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efdbfef90a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfef90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef9420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efdbfef4880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfef4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef4c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efdbfefc870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfefc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefcbf0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefcd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efdbff077b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efdbff077b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff07b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efdbfefb0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfefb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfefb420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfefb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbff0de20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbff0de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbff091c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbff09350"/>
        <function-ref name="request" scoped="" ref="0x7efdbff094e0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbff09670"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbff09800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efdbff022f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efdbff022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff02670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efdbff01020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efdbff01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efdbfeec500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efdbfeec500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeec880"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeeca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efdbfeedce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfeedce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeec0a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeec230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efdbff057b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbff057b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff05b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efdbfeed500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfeed500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeed880"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeeda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efdbfee9500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efdbfee9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfee9880"/>
        <function-ref name="write" scoped="" ref="0x7efdbfee9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efdbfef50a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfef50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef5420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efdbfef2880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efdbfef2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef2c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efdbff07e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efdbff07e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff061c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efdbff06ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efdbff06ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff06e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efdbfef80a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfef80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef8420"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efdbff02940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efdbff02940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbff02cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efdbfef8880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efdbfef8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfef8c00"/>
        <function-ref name="write" scoped="" ref="0x7efdbfef8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efdbfeee0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efdbfeee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeee820"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeee9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efdbfee69b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfee69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfee6d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfee5020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfee51b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfee5340"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfee54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7efdc0297630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7efdc0297630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdc02979b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdc0297b40"/>
        <function-ref name="write" scoped="" ref="0x7efdc0297cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdc0297e60"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc0296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdc0299670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0299670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdc02999f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdc0299b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdc0299d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7efdc02968c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7efdc02968c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0296c40"/>
        <function-ref name="write" scoped="" ref="0x7efdc0296dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7efdc02956f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7efdc02956f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc0295a70"/>
        <function-ref name="write" scoped="" ref="0x7efdc0295c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc029c950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc029c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc029ccd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc029ce60"/>
        <function-ref name="request" scoped="" ref="0x7efdc0299020"/>
        <function-ref name="granted" scoped="" ref="0x7efdc02991b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0299340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7efdc0294510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7efdc0294510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdc0294890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7efdc027e680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efdc027e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc027ea00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc027eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7efdc028ebb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7efdc028ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdc028d020"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdc028d1b0"/>
        <function-ref name="write" scoped="" ref="0x7efdc028d340"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdc028d4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdc028d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdc0293920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdc0293920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdc0293ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdc0293e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdc028f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7efdc0287080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efdc0287080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efdc0287400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7efdc0286020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7efdc0286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdc02863a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdc0286530"/>
        <function-ref name="isState" scoped="" ref="0x7efdc02866c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdc0286850"/>
        <function-ref name="requestState" scoped="" ref="0x7efdc02869e0"/>
        <function-ref name="forceState" scoped="" ref="0x7efdc0286b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efdc0289400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efdc0289400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0289780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0289910"/>
        <function-ref name="request" scoped="" ref="0x7efdc0289aa0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0289c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0289dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7efdc028c020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7efdc028c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc028c3a0"/>
        <function-ref name="write" scoped="" ref="0x7efdc028c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7efdc028cdb0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7efdc028cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdc028b180"/>
        <function-ref name="write" scoped="" ref="0x7efdc028b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc0286df0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc0286df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc02851c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc0285350"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc02854e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc0285670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc0285800"/>
        <function-ref name="get" scoped="" ref="0x7efdc0285990"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc0285b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc027f1b0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0285cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc0285e40"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc027f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc028f810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc028f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc028fb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc028fd20"/>
        <function-ref name="request" scoped="" ref="0x7efdc028e020"/>
        <function-ref name="granted" scoped="" ref="0x7efdc028e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc028e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7efdc0279120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7efdc0279120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc02794a0"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc0279630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7efdc028bba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7efdc028bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdc0289020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efdc021e770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdc021e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdc021eaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdc021ec80"/>
        <function-ref name="isState" scoped="" ref="0x7efdc021ee10"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdc021b020"/>
        <function-ref name="requestState" scoped="" ref="0x7efdc021b1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7efdc021b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efdc021a280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdc021a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdc021a600"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdc021a790"/>
        <function-ref name="isState" scoped="" ref="0x7efdc021a920"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdc021aab0"/>
        <function-ref name="requestState" scoped="" ref="0x7efdc021ac40"/>
        <function-ref name="forceState" scoped="" ref="0x7efdc021add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdc0216020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdc0216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdc02163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efdc0216b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdc0216b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdc0215020"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdc02151b0"/>
        <function-ref name="isState" scoped="" ref="0x7efdc0215340"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdc02154d0"/>
        <function-ref name="requestState" scoped="" ref="0x7efdc0215660"/>
        <function-ref name="forceState" scoped="" ref="0x7efdc02157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efdbff32020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efdbff32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbff323a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbff32530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efdbff338f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efdbff338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efdbff33c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc01fbc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc01fbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbff33020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbff331b0"/>
        <function-ref name="request" scoped="" ref="0x7efdbff33340"/>
        <function-ref name="granted" scoped="" ref="0x7efdbff334d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbff33660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbf00f440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbf00f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbf00f7c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbf00f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efdbefebd70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efdbefebd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbefea180"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbefea310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efdbefea5a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdbefea5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdbefea920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efdbf00fbe0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efdbf00fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efdbefeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbf010770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbf010770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbf010af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbf010c80"/>
        <function-ref name="request" scoped="" ref="0x7efdbf010e10"/>
        <function-ref name="granted" scoped="" ref="0x7efdbf00f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbf00f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efdbefeb2b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efdbefeb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efdbefeb630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efdbefeb7c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7efdbefeb950"/>
        <function-ref name="write" scoped="" ref="0x7efdbefebae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efdc01e75c0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc01e75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc01e7940"/>
        <function-ref name="configure" scoped="" ref="0x7efdc01e7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efdc01e5510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efdc01e5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc01e5890"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc01e5a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efdc01e3600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdc01e3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdc01e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efdc01e7db0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efdc01e7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efdc01e6180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efdc01e4370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efdc01e4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc01e46f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc01e4880"/>
        <function-ref name="request" scoped="" ref="0x7efdc01e4a10"/>
        <function-ref name="granted" scoped="" ref="0x7efdc01e4ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc01e4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc01e9320" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc01e9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc01e96a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc01e9830"/>
        <function-ref name="request" scoped="" ref="0x7efdc01e99c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc01e9b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc01e9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efdc01e6480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efdc01e6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efdc01e6800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efdc01e6990"/>
        <function-ref name="splitRead" scoped="" ref="0x7efdc01e6b20"/>
        <function-ref name="write" scoped="" ref="0x7efdc01e6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efdc01e3df0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc01e3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc01e11c0"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc01e1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efdc018bc40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc018bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0189020"/>
        <function-ref name="configure" scoped="" ref="0x7efdc01891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efdc0188700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efdc0188700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdc0188aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdc0188c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efdc0187e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efdc0187e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efdc01861c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efdc0189440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efdc0189440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efdc01897c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efdc0186490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efdc0186490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc0186810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc01869a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc0186b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc0186cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc0186e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc0185020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc01851b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc0185340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc01854d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc0185660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc01857f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc0185980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc0185b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc0185da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc0184020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc01841b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc0184340"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc01844d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc0184660"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc01847f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc0184980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc0184b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc0184ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc0184e30"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc0183020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc01833b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc0183540"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc01836d0"/>
        <function-ref name="tx" scoped="" ref="0x7efdc0183860"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc01839f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc0183b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc0183d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc0182020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc01821b0"/>
        <function-ref name="rx" scoped="" ref="0x7efdc0182340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc01824d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc0182660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc01827f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc0182980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc0182b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdc01815a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdc01815a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdc0181920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdc0181ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7efdc0181c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdc0181dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdc0180020"/>
        <function-ref name="get" scoped="" ref="0x7efdc01801b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdc0180340"/>
        <function-ref name="led2On" scoped="" ref="0x7efdc0180980"/>
        <function-ref name="set" scoped="" ref="0x7efdc0180660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdc01804d0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdc01807f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efdc0187060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efdc0187060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0187400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0187590"/>
        <function-ref name="request" scoped="" ref="0x7efdc0187720"/>
        <function-ref name="granted" scoped="" ref="0x7efdc01878b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0187a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc018ce80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc018ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc018b240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc018b3d0"/>
        <function-ref name="request" scoped="" ref="0x7efdc018b560"/>
        <function-ref name="granted" scoped="" ref="0x7efdc018b6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc018b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efdc0189a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efdc0189a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efdc0189dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efdc0188020"/>
        <function-ref name="splitRead" scoped="" ref="0x7efdc01881b0"/>
        <function-ref name="write" scoped="" ref="0x7efdc0188340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efdc0182de0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efdc0182de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0181180"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0181310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7efdc0180c50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7efdc0180c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdc017f020"/>
        <function-ref name="runTask" scoped="" ref="0x7efdc017f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7efdc0173c30" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efdc0173c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0172020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efdc01733b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdc01733b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0173730"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc01738c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efdc017a860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdc017a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc017abe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc017ad70"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc0177020"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc01771b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc0177340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc01774d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc0177660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc01777f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc0177980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc0177b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc0177ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc0177e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc0176020"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc01762b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc0176440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc01765d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc0176760"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc01768f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc0176a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc0176c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc0176da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc0175020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc01751b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc0175340"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc01754d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc0175860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc01759f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc0175b80"/>
        <function-ref name="tx" scoped="" ref="0x7efdc0175d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc0174020"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc01741b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc0174340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc01744d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc0174660"/>
        <function-ref name="rx" scoped="" ref="0x7efdc01747f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc0174980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc0174b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc0174ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc0174e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc0173020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efdc0136990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efdc0136990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0136d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0135020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc01351b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0135340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc01354d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0135660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc01357f0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0135980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0135b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0135ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0135e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0134020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc01341b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0134440"/>
        <function-ref name="clr" scoped="" ref="0x7efdc01345d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efdc0169020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efdc0169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc01693a0"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc0169530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efdc0134990" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efdc0134990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0134d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0133020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc01331b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0133340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc01334d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0133660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc01337f0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0133980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0133b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0133ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0133e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0132020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc01321b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0132440"/>
        <function-ref name="clr" scoped="" ref="0x7efdc01325d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efdc0132990" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efdc0132990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0132d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0131020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc01311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0131340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc01314d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0131660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc01317f0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0131980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0131b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0131ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0131e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0130020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc01301b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0130440"/>
        <function-ref name="clr" scoped="" ref="0x7efdc01305d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efdc016f360" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efdc016f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc016f6e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc016f870"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc016fa00"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc016fb90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc016fd20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc016d020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc016d1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc016d340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc016d4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc016d660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc016d7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc016d980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc016db10"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc016dda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc016c020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc016c1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc016c340"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc016c4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc016c660"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc016c7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc016c980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc016cb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc016cca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc016ce30"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc016b020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc016b3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc016b540"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc016b6d0"/>
        <function-ref name="tx" scoped="" ref="0x7efdc016b860"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc016b9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc016bb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc016bd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc016a020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc016a1b0"/>
        <function-ref name="rx" scoped="" ref="0x7efdc016a340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc016a4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc016a660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc016a7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc016a980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc016ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7efdc013fbc0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7efdc013fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efdc0167020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efdc01671b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efdc0167340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efdc01674d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efdc0167660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efdc01677f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efdc0167980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efdc0167b10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc0167ca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efdc0167e30"/>
        <function-ref name="getData" scoped="" ref="0x7efdc0166020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efdc01661b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efdc0166340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efdc01665d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efdc0166760"/>
        <function-ref name="getIV" scoped="" ref="0x7efdc01668f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efdc0166a80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efdc0166c10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efdc0166da0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efdc013e020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efdc013e1b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efdc013e340"/>
        <function-ref name="isI2C" scoped="" ref="0x7efdc013e4d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efdc013e660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efdc013e7f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efdc013eb80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efdc013ed10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efdc013d020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efdc013d1b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efdc013d340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efdc013d4d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efdc013d660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efdc013d7f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efdc013d980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efdc013db10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efdc013dca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efdc013de30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efdc013c020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efdc013c1b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efdc013c340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efdc013c4d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efdc013c660"/>
        <function-ref name="setData" scoped="" ref="0x7efdc013c7f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efdc013c980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efdc013cb10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efdc013cca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efdc013ce30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efdc013b020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efdc013b1b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efdc013b740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efdc013b8d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efdc013ba60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efdc013bbf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efdc013bd80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efdc013a020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efdc013a1b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efdc013a340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efdc013a4d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efdc013a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efdc0138990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efdc0138990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc0138d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0137020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc01371b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0137340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc01374d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0137660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc01377f0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0137980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0137b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0137ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0137e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0136020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc01361b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0136440"/>
        <function-ref name="clr" scoped="" ref="0x7efdc01365d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efdc0169970" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc0169970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0169cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efdc013aa20" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efdc013aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc013ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0139020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc01391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0139340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc01394d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0139660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc01397f0"/>
        <function-ref name="get" scoped="" ref="0x7efdc0139980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0139b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0139ca0"/>
        <function-ref name="set" scoped="" ref="0x7efdc0139e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0138020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc01381b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0138440"/>
        <function-ref name="clr" scoped="" ref="0x7efdc01385d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbefe3d90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbefe3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbefe1180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbefe1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7efdbefdb020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efdbefdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdbefdb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdbefd45d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbefd45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdbefd4950"/>
        <function-ref name="configure" scoped="" ref="0x7efdbefd4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7efdbefdb630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efdbefdb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efdbefdb9b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efdbefdbb40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efdbefdbcd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efdbefdbe60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efdbefda020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efdbefda1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efdbefda340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efdbefda4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbefda660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efdbefda7f0"/>
        <function-ref name="getData" scoped="" ref="0x7efdbefda980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efdbefdab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efdbefdaca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efdbefd9020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efdbefd91b0"/>
        <function-ref name="getIV" scoped="" ref="0x7efdbefd9340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efdbefd94d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efdbefd9660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efdbefd97f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efdbefd9980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efdbefd9b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efdbefd9ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efdbefd9e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efdbefd8020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efdbefd81b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efdbefd8540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efdbefd86d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efdbefd8860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efdbefd89f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efdbefd8b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efdbefd8d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efdbefd7020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efdbefd71b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efdbefd7340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efdbefd74d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efdbefd7660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efdbefd77f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efdbefd7980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efdbefd7b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efdbefd7ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efdbefd7e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efdbefd6020"/>
        <function-ref name="setData" scoped="" ref="0x7efdbefd61b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efdbefd6340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efdbefd64d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efdbefd6660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efdbefd67f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efdbefd6980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efdbefd6b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efdbefd5420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efdbefd55b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efdbefd5740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efdbefd58d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efdbefd5a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efdbefd5bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efdbefd5d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efdbefd4020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efdbefd41b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efdbefd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efdbefdc760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efdbefdc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdbefdcae0"/>
        <function-ref name="txDone" scoped="" ref="0x7efdbefdcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbefe3140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbefe3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbefe34c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbefe3650"/>
        <function-ref name="request" scoped="" ref="0x7efdbefe37e0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbefe3970"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbefe3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efdbefe1d40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efdbefe1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdbefe00e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdbefe0270"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdbefe0400"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdbefe0590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdbefe0720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdbefe08b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdbefe0a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdbefe0bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdbefe0d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdbefdf020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdbefdf1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdbefdf340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdbefdf4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdbefdf760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdbefdf8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdbefdfa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdbefdfc10"/>
        <function-ref name="isUart" scoped="" ref="0x7efdbefdfda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdbefde020"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdbefde1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdbefde340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdbefde4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdbefde660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdbefde7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbefde980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdbefded10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdbefdd020"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdbefdd1b0"/>
        <function-ref name="tx" scoped="" ref="0x7efdbefdd340"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdbefdd4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdbefdd660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdbefdd7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdbefdd980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdbefddb10"/>
        <function-ref name="rx" scoped="" ref="0x7efdbefddca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdbefdde30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdbefdc020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdbefdc1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdbefdc340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdbefdc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdbefe15a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbefe15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbefe1920"/>
        <function-ref name="userId" scoped="" ref="0x7efdbefe1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc00902c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc00902c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc0090640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc00907d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdc008f8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc008f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc008fc20"/>
        <function-ref name="configure" scoped="" ref="0x7efdc008fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efdc00934d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efdc00934d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc0093850"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc00939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0091020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0091020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc00913a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0091530"/>
        <function-ref name="request" scoped="" ref="0x7efdc00916c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0091850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc00919e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efdc00923f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc00923f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc0092770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdc0090ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0090ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0090e50"/>
        <function-ref name="userId" scoped="" ref="0x7efdc008f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efdc008be50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc008be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc008a210"/>
        <function-ref name="userId" scoped="" ref="0x7efdc008a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efdc008c060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efdc008c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc008c400"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc008c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efdc008b840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efdc008b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc008bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efdc008c990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efdc008c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdc008cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efdc008b060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efdc008b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efdc008b3e0"/>
        <function-ref name="txDone" scoped="" ref="0x7efdc008b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdc0087850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdc0087850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdc0087bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc0087d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdc0084570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdc0084570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdc0084910"/>
        <function-ref name="configure" scoped="" ref="0x7efdc0084aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efdc0086020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdc0086020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc00863a0"/>
        <function-ref name="requested" scoped="" ref="0x7efdc0086530"/>
        <function-ref name="granted" scoped="" ref="0x7efdc00866c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc0086850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdc00869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdc0088a80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdc0088a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdc0088e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdc0087020"/>
        <function-ref name="request" scoped="" ref="0x7efdc00871b0"/>
        <function-ref name="granted" scoped="" ref="0x7efdc0087340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdc00874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdc0086c30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdc0086c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdc0084020"/>
        <function-ref name="userId" scoped="" ref="0x7efdc00841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbef6f020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbef6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbef6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efdbef6f630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbef6f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbef6f9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbef6fb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbef6fcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbef6fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efdbef6b6c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efdbef6b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efdbef6ba60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbef6bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efdbef69400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efdbef69400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efdbef697a0"/>
        <function-ref name="configure" scoped="" ref="0x7efdbef69930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efdbef69bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efdbef69bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbef68020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbef681b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbef68340"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbef684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efdbef6be40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efdbef6be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbef6a1e0"/>
        <function-ref name="requested" scoped="" ref="0x7efdbef6a370"/>
        <function-ref name="granted" scoped="" ref="0x7efdbef6a500"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbef6a690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efdbef6a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdbef68720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdbef68720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdbef68aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdbef68c30"/>
        <function-ref name="led1On" scoped="" ref="0x7efdbef68dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdbef66020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdbef661b0"/>
        <function-ref name="get" scoped="" ref="0x7efdbef66340"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdbef664d0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdbef66b10"/>
        <function-ref name="set" scoped="" ref="0x7efdbef667f0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdbef66660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdbef66980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbef6c850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbef6c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbef6cbf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbef6cd80"/>
        <function-ref name="request" scoped="" ref="0x7efdbef6b020"/>
        <function-ref name="granted" scoped="" ref="0x7efdbef6b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbef6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efdbef6aa70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efdbef6aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efdbef6adf0"/>
        <function-ref name="userId" scoped="" ref="0x7efdbef69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efdbef66de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efdbef66de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbef65180"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbef65310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7efdc007d540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efdc007d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efdc007d8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efdc007da50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efdc007dbe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efdc007dd70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efdc007a020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efdc007a1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efdc007a340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efdc007a4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc007a660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efdc007a7f0"/>
        <function-ref name="getData" scoped="" ref="0x7efdc007a980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efdc007ab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efdc007aca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efdc0079020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efdc00791b0"/>
        <function-ref name="getIV" scoped="" ref="0x7efdc0079340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efdc00794d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efdc0079660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efdc00797f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efdc0079980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efdc0079b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efdc0079ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efdc0079e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efdc0078020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efdc00781b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efdc0078540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efdc00786d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efdc0078860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efdc00789f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efdc0078b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efdc0078d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efdc0077020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efdc00771b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efdc0077340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efdc00774d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efdc0077660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efdc00777f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efdc0077980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efdc0077b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efdc0077ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efdc0077e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efdc0076020"/>
        <function-ref name="setData" scoped="" ref="0x7efdc00761b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efdc0076340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efdc00764d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efdc0076660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efdc00767f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efdc0076980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efdc0076b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efdc0075420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efdc00755b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efdc0075740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efdc00758d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efdc0075a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efdc0075bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efdc0075d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efdc0074020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efdc00741b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efdc0074340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7efdc006a250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7efdc006a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efdc006a5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efdc006a760"/>
        <function-ref name="setUctl" scoped="" ref="0x7efdc006a8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efdc006aa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efdc006ac10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efdc006ada0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efdc0069020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efdc00691b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efdc0069340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efdc00694d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efdc0069660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efdc00697f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efdc0069980"/>
        <function-ref name="getUbr" scoped="" ref="0x7efdc0069c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efdc0069da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efdc0068020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efdc00681b0"/>
        <function-ref name="isUart" scoped="" ref="0x7efdc0068340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efdc00684d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efdc0068660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efdc00687f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efdc0068980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efdc0068b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efdc0068ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7efdc0068e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efdc0067220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efdc00673b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efdc0067540"/>
        <function-ref name="tx" scoped="" ref="0x7efdc00676d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efdc0067860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efdc00679f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efdc0067b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efdc0067d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efdc0066020"/>
        <function-ref name="rx" scoped="" ref="0x7efdc00661b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efdc0066340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efdc00664d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efdc0066660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efdc00667f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efdc0066980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efdc0064cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efdc0064cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc00630a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0063230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc00633c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0063550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc00636e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc0063870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0063a00"/>
        <function-ref name="get" scoped="" ref="0x7efdc0063b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0063d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0062020"/>
        <function-ref name="set" scoped="" ref="0x7efdc00621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0062340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc00624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0062760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc00628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7efdc0071430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7efdc0071430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efdc00717b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efdc0071940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efdc0071ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efdc0071c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efdc0071df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efdc0070020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efdc00701b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efdc0070340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdc00704d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efdc0070660"/>
        <function-ref name="getData" scoped="" ref="0x7efdc00707f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efdc0070980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efdc0070b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efdc0070da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efdc006f020"/>
        <function-ref name="getIV" scoped="" ref="0x7efdc006f1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efdc006f340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efdc006f4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efdc006f660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efdc006f7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efdc006f980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efdc006fb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7efdc006fca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efdc006fe30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efdc006e020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efdc006e3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efdc006e540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efdc006e6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efdc006e860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efdc006e9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efdc006eb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efdc006ed10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efdc006d020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efdc006d1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efdc006d340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efdc006d4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efdc006d660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efdc006d7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efdc006d980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efdc006db10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efdc006dca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efdc006de30"/>
        <function-ref name="setData" scoped="" ref="0x7efdc006c020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efdc006c1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efdc006c340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efdc006c4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efdc006c660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efdc006c7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efdc006c980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efdc006b020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efdc006b1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efdc006b340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efdc006b4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efdc006b660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efdc006b7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efdc006b980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efdc006bb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efdc006bca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efdc006be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efdc0066d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efdc0066d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdc00650e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdc0065270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdc0065400"/>
        <function-ref name="toggle" scoped="" ref="0x7efdc0065590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdc0065720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdc00658b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdc0065a40"/>
        <function-ref name="get" scoped="" ref="0x7efdc0065bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdc0065d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdc0064020"/>
        <function-ref name="set" scoped="" ref="0x7efdc00641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdc0064340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdc00644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdc0064760"/>
        <function-ref name="clr" scoped="" ref="0x7efdc00648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efdbfecdc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfecdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecc210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efdbfed8da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efdbfed8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efdbfed1b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfed1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecf020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efdbfecb670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfecb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecb9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efdbfec4e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efdbfec4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec2210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efdbfecbe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efdbfecbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeca210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efdbfeb72f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfeb72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeb7670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efdbfeb92f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfeb92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeb9670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efdbfed5120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfed5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efdbfebf670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efdbfebf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebf9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efdbfeba2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfeba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeba670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efdbfecfc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efdbfecfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfece020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfece1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efdbfecec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfecec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecd020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efdbfec5670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfec5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec59f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efdbfec7e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efdbfec7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec6210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efdbfeca670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfeca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeca9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdbfed9760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfed9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdbfed9ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdbfed9c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdbfed9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efdbfed4aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfed4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efdbfed3120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efdbfed3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efdbfebea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfebea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebedf0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efdbfed3870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfed3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efdbfebaad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfebaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebae50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efdbfed5dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfed5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efdbfec0e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efdbfec0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebf210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efdbfece480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfece480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfece800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfece990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efdbfecf480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfecf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecf800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efdbfed8750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfed8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efdbfec1e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfec1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec0210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efdbfec2670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efdbfec2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec29f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efdbfec0670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfec0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec09f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efdbfeb8ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfeb8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeb8e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efdbfeb9ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfeb9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeb9e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efdbfec6670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efdbfec6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec69f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efdbfec2e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efdbfec2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec1210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efdbfebcad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfebcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebce50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efdbfec8670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfec8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec89f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efdbfeb7ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfeb7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfeb7e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfeb6020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfeb6340"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfeb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efdbfed8100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbfed8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed8480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efdbfed1370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efdbfed1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfed16f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfed1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efdbfecd480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfecd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecd800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efdbfec5e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfec5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec4210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efdbfecae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfecae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec8210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efdbfec4670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfec4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec49f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efdbfecc670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfecc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecc9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efdbfed7450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efdbfed7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efdbfecce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfecce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfecb210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfecb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbfedaa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbfedaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfedae00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfed9020"/>
        <function-ref name="request" scoped="" ref="0x7efdbfed91b0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfed9340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfed94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efdbfed2020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfed2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efdbfed2cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efdbfed2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efdbfebc2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efdbfebc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebc670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efdbfebdad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfebdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebde50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efdbfed4450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfed4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efdbfebd2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfebd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebd670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efdbfeb82f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efdbfeb82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfeb8670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efdbfec6e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfec6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec5210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efdbfec1670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efdbfec1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec19f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efdbfed7aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efdbfed7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efdbfed5770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfed5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efdbfec8e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfec8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec7210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efdbfed2670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efdbfed2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfed29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efdbfec7670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efdbfec7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfec79f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfec7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efdbfebfe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efdbfebfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfebe610"/>
        <function-ref name="write" scoped="" ref="0x7efdbfebe7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efdbfeb67a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfeb67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfeb6b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfeb6cb0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfeb6e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfeb5020"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfeb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efdbfea1c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfea1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9f210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efdbfeabda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efdbfeabda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfeaa180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efdbfea4b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfea4b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea3020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efdbfe9e670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfe9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efdbfe97e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efdbfe97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe96210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efdbfe9ee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efdbfe9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9d210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efdbfe8a2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfe8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8a670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efdbfe8d2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfe8d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8d670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efdbfea9120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfea9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efdbfe92670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efdbfe92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe929f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efdbfe8e2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfe8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8e670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efdbfea3c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efdbfea3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea2020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efdbfea2c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfea2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea1020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efdbfe98670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfe98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe989f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efdbfe9be50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efdbfe9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe99210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efdbfe9d670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfe9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdbfeac760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfeac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdbfeacae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdbfeacc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdbfeace00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efdbfea8aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfea8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efdbfea6120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efdbfea6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea65a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efdbfe91a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfe91a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe91df0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efdbfea6870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfea6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efdbfe8ead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfe8ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8ee50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efdbfea9dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfea9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efdbfe94e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efdbfe94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe92210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efdbfea2480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfea2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea2800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efdbfea3480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfea3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea3800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efdbfeab750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfeab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfeabad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efdbfe95e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfe95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe94210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efdbfe96670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efdbfe96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe969f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe96b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efdbfe94670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfe94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe949f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efdbfe8bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfe8bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8be50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efdbfe8dad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfe8dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8de50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efdbfe99670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efdbfe99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe999f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efdbfe96e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efdbfe96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe95210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efdbfe8fad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfe8fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8fe50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efdbfe9c670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfe9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efdbfe8aad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfe8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfe8ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfe89020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe891b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfe89340"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfe894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efdbfeab100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbfeab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfeab480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efdbfea4370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efdbfea4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea46f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efdbfea1480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfea1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfea1800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfea1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efdbfe98e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfe98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe97210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efdbfe9de50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfe9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9c210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efdbfe97670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfe97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe979f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efdbfe9f670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfe9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efdbfeaa450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efdbfeaa450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfeaa7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efdbfe9fe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfe9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9e210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbfeae9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbfeae9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfeaed60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfeac020"/>
        <function-ref name="request" scoped="" ref="0x7efdbfeac1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfeac340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfeac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efdbfea5020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfea5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efdbfea5cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efdbfea5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efdbfe8f2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efdbfe8f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8f670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efdbfe90ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfe90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe90e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efdbfea8450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfea8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efdbfe902f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfe902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe90670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe90800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efdbfe8b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efdbfe8b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe8b670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe8b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efdbfe99e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfe99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe98210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efdbfe95670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efdbfe95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe959f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efdbfeaaaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efdbfeaaaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfeaae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efdbfea9770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfea9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efdbfe9ce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfe9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9b210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efdbfea5670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efdbfea5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfea59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efdbfe9b670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efdbfe9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efdbfe92e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efdbfe92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe91610"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe917a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efdbfe897a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfe897a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfe89b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfe89cb0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe89e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfe88020"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfe881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7efdbfe81b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdbfe81b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efdbfe7e020"/>
        <function-ref name="changed" scoped="" ref="0x7efdbfe7e1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7efdbfe7e340"/>
        <function-ref name="setAddress" scoped="" ref="0x7efdbfe7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7efdbfe80d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdbfe80d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efdbfe6a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7efdbfe66310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efdbfe66310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efdbfe66690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7efdbfe63880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe63880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe63c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7efdbfe58020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe583a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7efdbfe4ebd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7efdbfe4ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe51020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7efdbfe51530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7efdbfe51530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbfe518b0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfe51a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7efdbfe52140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7efdbfe52140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe524c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7efdbfe57c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7efdbfe57c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe3e020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7efdbfe3e540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7efdbfe3e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfe3e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfe3ea50"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfe3ebe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfe3ed70"/>
        <function-ref name="get" scoped="" ref="0x7efdbfe3c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfe3c1b0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfe3c340"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfe3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7efdbfe34950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe34950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7efdbfe37780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7efdbfe39150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7efdbfe39150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfe394d0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfe39660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7efdbfe399f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7efdbfe399f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfe39d70"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfe38020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfe381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfe38340"/>
        <function-ref name="get" scoped="" ref="0x7efdbfe384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfe38660"/>
        <function-ref name="set" scoped="" ref="0x7efdbfe387f0"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfe38980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7efdbfe3bca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe3bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7efdbfe14ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7efdbfe12a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7efdbfe12a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7efdbfe118d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdbfe01020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdbfe01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfe01e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbfe00800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbfe00340"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbfe00cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7efdbfdfc530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7efdbfdfc530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfdfb3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbfdfbd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbfdfb890"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbfdf9260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efdbfdf4020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efdbfdf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbfdf43a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efdbfdf4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efdbfdf46c0"/>
        <function-ref name="get" scoped="" ref="0x7efdbfdf4850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efdbfdf49e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbfdf4b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efdbfdf4d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbfdf3020"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbfdf31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efdbfdf3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efdbfdf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efdbfdf8e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdbfdf8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7efdc1594d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfdf7ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbfdf6670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbfdf61b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbfdf6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7efdbfe3f590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7efdbfe3f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfe3f910"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfe3faa0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfe3fc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfe3fdc0"/>
        <function-ref name="get" scoped="" ref="0x7efdbfdef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfdef1b0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdef340"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfdef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efdbfdedc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efdbfdedc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfdec020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfdec1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efdbfdec340"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfdec4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfdec660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efdbfdec7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfdec980"/>
        <function-ref name="get" scoped="" ref="0x7efdbfdecb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efdbfdecca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efdbfdece30"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdeb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efdbfdeb1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efdbfdeb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efdbfdeb5d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfdeb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efdbfdee9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efdbfdee9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfdeed60"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfded020"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfded1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfded340"/>
        <function-ref name="get" scoped="" ref="0x7efdbfded4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfded660"/>
        <function-ref name="set" scoped="" ref="0x7efdbfded7f0"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfded980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdbfdf0a20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdbfdf0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbfdf0da0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfde6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efdbfdd7cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfdd7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdbfdd60a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdbfdd6230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdbfdd63c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdbfdd6550"/>
        <function-ref name="setCca" scoped="" ref="0x7efdbfdd66e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdbfdd6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7efdbfdd3990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7efdbfdd3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efdbfdd3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7efdbfdd7020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7efdbfdd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfdd73a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfdd7530"/>
        <function-ref name="modify" scoped="" ref="0x7efdbfdd76c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfdd7850"/>
        <function-ref name="resend" scoped="" ref="0x7efdbfdd79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdbfdda6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdbfdda6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbfddaa40"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfddabd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7efdbfdd5150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7efdbfdd5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efdbfdd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efdbfdc8970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfdc8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdbfdc8cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdbfdc8e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdbfdc7030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdbfdc71c0"/>
        <function-ref name="setCca" scoped="" ref="0x7efdbfdc7350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdbfdc74e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7efdbfdc0950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efdbfdc0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdbfdbd020"/>
        <function-ref name="clear" scoped="" ref="0x7efdbfdbd750"/>
        <function-ref name="isValid" scoped="" ref="0x7efdbfdbe780"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdbde80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7efdbfda8020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfda8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfda83a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfda8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7efdbfda8890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfda8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfda8c10"/>
        <function-ref name="write" scoped="" ref="0x7efdbfda8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7efdbfdc7900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7efdbfdc7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efdbfdc7c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7efdbfdac530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfdac530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfdac8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7efdbfdbb880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7efdbfdbb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efdbfdbbc00"/>
        <function-ref name="disable" scoped="" ref="0x7efdbfdbbd90"/>
        <function-ref name="captured" scoped="" ref="0x7efdbfdba020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efdbfdba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7efdbfdc6ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7efdbfdc6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbfdc2390"/>
        <function-ref name="fired" scoped="" ref="0x7efdbfdc3360"/>
        <function-ref name="startAt" scoped="" ref="0x7efdbfdc3ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbfdc3820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efdbfdc2850"/>
        <function-ref name="start" scoped="" ref="0x7efdbfdc5970"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfdc5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efdbfdc2d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfdc2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdbfdc10a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdbfdc1230"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdbfdc13c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdbfdc1550"/>
        <function-ref name="getPower" scoped="" ref="0x7efdbfdc16e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdbfdc1870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7efdbfdae550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfdae550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfdae8d0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfdaea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7efdbfdaee00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfdaee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfdad1c0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfdad350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7efdbfda2d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfda2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfda50e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efdbfda5270"/>
        <function-ref name="sfd" scoped="" ref="0x7efdbfda5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbfdc9bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbfdc9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfdc8020"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfdc81b0"/>
        <function-ref name="modify" scoped="" ref="0x7efdbfdc8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfdc84d0"/>
        <function-ref name="resend" scoped="" ref="0x7efdbfdc8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7efdbfdb0d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfdb0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdbfdaf0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdbfdaf270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdbfdaf400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7efdbfdacc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfdacc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfdaa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efdbfdb3820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efdbfdb3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfdb3ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfdb3d30"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfdb2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfdb21b0"/>
        <function-ref name="get" scoped="" ref="0x7efdbfdb2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfdb24d0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdb2660"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfdb27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfdcbc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfdcbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfdc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdbfdc1bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfdc1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfdc0020"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfdc01b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfdc0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7efdbfdb5be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfdb5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfdbb020"/>
        <function-ref name="isSet" scoped="" ref="0x7efdbfdbb1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfdbb340"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7efdbfdaa3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfdaa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfdaa960"/>
        <function-ref name="write" scoped="" ref="0x7efdbfdaaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efdbfdb0020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efdbfdb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfdb03a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfdb0530"/>
        <function-ref name="request" scoped="" ref="0x7efdbfdb06c0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfdb0850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfdb09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7efdbfdba500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7efdbfdba500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfdba980"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfdbab10"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfdbaca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfdbae30"/>
        <function-ref name="get" scoped="" ref="0x7efdbfdb3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfdb31b0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdb3340"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfdb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7efdbfda7130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfda7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfda74b0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfda7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7efdbfda79c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfda79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfda7d40"/>
        <function-ref name="write" scoped="" ref="0x7efdbfda6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7efdbfdad6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbfdad6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfdada50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7efdbfdb2b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7efdbfdb2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfdb1020"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfdb11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfdb1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfdb14d0"/>
        <function-ref name="get" scoped="" ref="0x7efdbfdb1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfdb17f0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfdb1980"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfdb1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdbfda56c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdbfda56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdbfda5a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdbfda5bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7efdbfda5d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdbfda4020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdbfda41b0"/>
        <function-ref name="get" scoped="" ref="0x7efdbfda4340"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdbfda44d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdbfda4b10"/>
        <function-ref name="set" scoped="" ref="0x7efdbfda4660"/>
        <function-ref name="led0On" scoped="" ref="0x7efdbfda47f0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdbfda4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7efdbfda95e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfda95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfda9960"/>
        <function-ref name="write" scoped="" ref="0x7efdbfda9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdbfdc9320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdbfdc9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbfdc96a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfdc9830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7efdbfdaf780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfdaf780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfdafb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfdafc90"/>
        <function-ref name="write" scoped="" ref="0x7efdbfdafe20"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfdae020"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfdae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7efdbfdadde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efdbfdadde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfdac180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7efdbfdaae80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efdbfdaae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfda9220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7efdbfdc60f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7efdbfdc60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efdbfdc6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efdbfd06c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfd06c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd04210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efdbfd0f020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efdbfd0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efdbfd09c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfd09c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd08020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efdbfd03670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfd03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd039f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd03b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efdbfcfce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efdbfcfce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfb210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efdbfd03e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efdbfd03e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd02210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efdbfcef2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfcef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcef670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efdbfcf22f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfcf22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf2670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efdbfd0e370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfd0e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efdbfcf7670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efdbfcf7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf79f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efdbfcf32f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfcf32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf3670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efdbfd08c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efdbfd08c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd07020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efdbfd07c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfd07c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd06020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efdbfcfd670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfcfd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfd9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efdbfd00e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efdbfd00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfe210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efdbfd02670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfd02670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd029f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd02b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdbfd118f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfd118f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdbfd11c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdbfd11e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdbfd10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efdbfd0dd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfd0dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efdbfd0b370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efdbfd0b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efdbfcf6a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfcf6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf6df0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efdbfd0bac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfd0bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efdbfcf3ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfcf3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf3e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efdbfd0d060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfd0d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efdbfcf9e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efdbfcf9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf7210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efdbfd07480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfd07480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd07800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd07990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efdbfd08480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfd08480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd08800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd08990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efdbfd10940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfd10940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd10cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efdbfcfae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfcfae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf9210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efdbfcfb670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efdbfcfb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfb9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efdbfcf9670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfcf9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf99f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efdbfcf0ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfcf0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf0e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efdbfcf2ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfcf2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf2e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efdbfcfe670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efdbfcfe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfe9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efdbfcfbe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efdbfcfbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfa210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efdbfcf4ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfcf4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf4e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efdbfd01670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfd01670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd019f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd01b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efdbfcefad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfcefad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfcefe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfcee020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcee1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfcee340"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfcee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efdbfd102f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbfd102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd10670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efdbfd09490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efdbfd09490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd09810"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd099a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efdbfd06480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfd06480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd06800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd06990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efdbfcfde50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfcfde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfc210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efdbfd02e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfd02e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd01210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efdbfcfc670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfcfc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfc9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efdbfd04670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfd04670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd049f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd04b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efdbfd0f670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efdbfd0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efdbfd04e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfd04e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd03210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbfd13c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbfd13c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfd11020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfd111b0"/>
        <function-ref name="request" scoped="" ref="0x7efdbfd11340"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfd114d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfd11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efdbfd0a160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfd0a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efdbfd0ae00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efdbfd0ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd091c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efdbfcf42f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efdbfcf42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf4670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efdbfcf5ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfcf5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf5e50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efdbfd0d6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfd0d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efdbfcf52f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfcf52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf5670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efdbfcf02f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efdbfcf02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf0670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efdbfcfee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfcfee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfd210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efdbfcfa670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efdbfcfa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcfa9f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcfab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efdbfd0fcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efdbfd0fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efdbfd0e9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfd0e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efdbfd01e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfd01e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd00210"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efdbfd0a7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efdbfd0a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfd0ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efdbfd00670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efdbfd00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfd009f0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfd00b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efdbfcf7e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efdbfcf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcf6610"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcf67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efdbfcee7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfcee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfceeb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfceecb0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfceee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfced020"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfced1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7efdbfce2df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfce2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfcdf1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efdbfcdf350"/>
        <function-ref name="sfd" scoped="" ref="0x7efdbfcdf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfcdf7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfcdf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfcdfb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7efdbfcde020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7efdbfcde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efdbfcde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdbfce25c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdbfce25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbfce2940"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfce2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7efdbfcd7380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7efdbfcd7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfcd7700"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfcd7890"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfcd7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfcd7bb0"/>
        <function-ref name="get" scoped="" ref="0x7efdbfcd7d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfcd5020"/>
        <function-ref name="set" scoped="" ref="0x7efdbfcd51b0"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfcd5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7efdbfccfb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efdbfccfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efdbfcce020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efdbfcce1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efdbfcce340"/>
        <function-ref name="syncDone" scoped="" ref="0x7efdbfcce4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efdbfcce660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efdbfcce7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efdbfcce980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efdbfcceb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efdbfcceca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efdbfccee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efdbfccd020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efdbfccd1b0"/>
        <function-ref name="sync" scoped="" ref="0x7efdbfccd340"/>
        <function-ref name="getChannel" scoped="" ref="0x7efdbfccd5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efdbfccd760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7efdbfcb89d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7efdbfcb89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbfcb8d50"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbfcb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7efdbfccdd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efdbfccdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdbfccb330"/>
        <function-ref name="clear" scoped="" ref="0x7efdbfccba60"/>
        <function-ref name="isValid" scoped="" ref="0x7efdbfcccba0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfcc9210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7efdbfcd56b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7efdbfcd56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfcd5a30"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfcd5bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfcd5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfcd4020"/>
        <function-ref name="get" scoped="" ref="0x7efdbfcd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfcd4340"/>
        <function-ref name="set" scoped="" ref="0x7efdbfcd44d0"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfcd4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7efdbfcc8cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfcc8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcc70a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcc7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7efdbfcc7590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfcc7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcc7910"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcc7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7efdbfcc66d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfcc66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcc6a50"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcc6be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efdbfcd0330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfcd0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdbfcd06b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdbfcd0840"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdbfcd09d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdbfcd0b60"/>
        <function-ref name="getPower" scoped="" ref="0x7efdbfcd0cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdbfcd0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7efdbfcda550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efdbfcda550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfcda8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efdbfcdaa60"/>
        <function-ref name="sfd" scoped="" ref="0x7efdbfcdabf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7efdbfcd13a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efdbfcd13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfcd1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efdbfcd8020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efdbfcd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efdbfcd83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efdbfcd8530"/>
        <function-ref name="toggle" scoped="" ref="0x7efdbfcd86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efdbfcd8850"/>
        <function-ref name="get" scoped="" ref="0x7efdbfcd89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efdbfcd8b70"/>
        <function-ref name="set" scoped="" ref="0x7efdbfcd8d00"/>
        <function-ref name="clr" scoped="" ref="0x7efdbfcd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7efdbfcc5020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfcc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcc53a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcc5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfcdb620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfcdb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfcdb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdbfccf1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfccf1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfccf560"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfccf6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfccf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfcd9020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfcd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfcd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efdbfcd36e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efdbfcd36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfcd3a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfcd3bf0"/>
        <function-ref name="request" scoped="" ref="0x7efdbfcd3d80"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfcd2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfcd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7efdbfcc7e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfcc7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcc61c0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcc6350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7efdbfcd2530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfcd2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfcd28b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfcd2a40"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcd2bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfcd2d60"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfcd1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7efdbfcc58b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbfcc58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfcc5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7efdbfcd97c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7efdbfcd97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efdbfcd9b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdbfcc4150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdbfcc4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdbfcc44d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdbfcc4660"/>
        <function-ref name="led1On" scoped="" ref="0x7efdbfcc47f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdbfcc4980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdbfcc4b10"/>
        <function-ref name="get" scoped="" ref="0x7efdbfcc4ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdbfcc4e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdbfcc34d0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfcc3020"/>
        <function-ref name="led0On" scoped="" ref="0x7efdbfcc31b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efdbfcc3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7efdbfcc83e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfcc83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfcc8760"/>
        <function-ref name="write" scoped="" ref="0x7efdbfcc88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7efdbfcc9b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfcc9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfcc8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7efdbfcd4a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efdbfcd4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efdbfcd4dd0"/>
        <function-ref name="disable" scoped="" ref="0x7efdbfcd3020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efdbfcd31b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efdbfcd3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7efdbfcd1ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfcd1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfcd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efdbfcdbca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efdbfcdbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efdbfcda0a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfcda230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efdbfc57a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdbfc57a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efdbfc57df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efdbfc5b670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc5b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdbfc5b9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdbfc5bb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdbfc5bd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdbfc58020"/>
        <function-ref name="getPower" scoped="" ref="0x7efdbfc581b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdbfc58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efdbfc56550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc56550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdbfc55b00"/>
        <function-ref name="clear" scoped="" ref="0x7efdbfc542a0"/>
        <function-ref name="isValid" scoped="" ref="0x7efdbfc553d0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfc549d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7efdbfc570c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc570c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfc57440"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfc575d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfc57760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7efdbfc4e480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfc4e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfc4e800"/>
        <function-ref name="isSet" scoped="" ref="0x7efdbfc4e990"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfc4eb20"/>
        <function-ref name="set" scoped="" ref="0x7efdbfc4ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efdbfc52660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdbfc52660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdbfc51ce0"/>
        <function-ref name="clear" scoped="" ref="0x7efdbfc50460"/>
        <function-ref name="isValid" scoped="" ref="0x7efdbfc515b0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfc50b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efdbfc586e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efdbfc586e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdbfc58a60"/>
        <function-ref name="noAck" scoped="" ref="0x7efdbfc58bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdbfc58d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efdbfc48020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efdbfc48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efdbfc483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efdbfc4dd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfc4dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdbfc4a0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdbfc4a270"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdbfc4a400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdbfc4a590"/>
        <function-ref name="getPower" scoped="" ref="0x7efdbfc4a720"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdbfc4a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efdbfc3f4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdbfc3f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbfc3f820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbfc3f9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfc3fb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfc3fcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbfc3fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efdbfc48a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efdbfc48a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdbfc46020"/>
        <function-ref name="clear" scoped="" ref="0x7efdbfc46750"/>
        <function-ref name="isValid" scoped="" ref="0x7efdbfc478d0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfc46e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7efdbfc49640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfc49640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfc499c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfc49b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfc49ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7efdbfc408b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efdbfc408b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfc40c30"/>
        <function-ref name="isSet" scoped="" ref="0x7efdbfc40dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfc3f020"/>
        <function-ref name="set" scoped="" ref="0x7efdbfc3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7efdbfc3e3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7efdbfc3e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfc3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7efdbfc3d6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7efdbfc3d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfc3c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efdbfc44af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efdbfc44af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efdbfc420d0"/>
        <function-ref name="clear" scoped="" ref="0x7efdbfc42800"/>
        <function-ref name="isValid" scoped="" ref="0x7efdbfc43970"/>
        <function-ref name="set" scoped="" ref="0x7efdbfc40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efdbfc4ac50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efdbfc4ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdbfc49020"/>
        <function-ref name="noAck" scoped="" ref="0x7efdbfc491b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdbfc49340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efdbfbedcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efdbfbedcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfbec980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efdbfbeb020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efdbfbeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1594270"/>
            <typename><typedef-ref name="T32khz" ref="0x7efdc15945e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efdbfbebe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efdbfbe9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efdbfbe9340"/>
        <function-ref name="overflow" scoped="" ref="0x7efdbfbe9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efdbfbe60b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efdbfbe60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc1595680"/>
            <typename><typedef-ref name="TMilli" ref="0x7efdc1595df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efdbfbe2630"/>
        <function-ref name="fired" scoped="" ref="0x7efdbfbe5b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efdbfbe4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efdbfbe44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efdbfbe1020"/>
        <function-ref name="gett0" scoped="" ref="0x7efdbfbe2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efdbfbe4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efdbfbe6ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efdbfbe2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efdbfbe51b0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfbe5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efdbfbd1620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efdbfbd1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd1ba0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efdbfbdc940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efdbfbdc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbdccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efdbfbd4620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efdbfbd4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd49a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efdbfbcf060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efdbfbcf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcf3e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcf570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efdbfbc7840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efdbfbc7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc7bc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efdbfbcf840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efdbfbcf840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcfbc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcfd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efdbfbbcc60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efdbfbbcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbb020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efdbfbbec60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efdbfbbec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbd020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efdbfbdacc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efdbfbdacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efdbfbc3060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efdbfbc3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc33e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efdbfbbfc60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efdbfbbfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbe020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efdbfbd3620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efdbfbd3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd39a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efdbfbd2620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efdbfbd2620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd29a0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efdbfbc9060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efdbfbc9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc93e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efdbfbcb840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efdbfbcb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcbbc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcbd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efdbfbcd060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efdbfbcd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcd3e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efdbfbdd2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efdbfbdd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efdbfbdd630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efdbfbdd7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efdbfbdd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efdbfbd86b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efdbfbd86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd8a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efdbfbd8d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efdbfbd8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efdbfbc2480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efdbfbc2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc2800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efdbfbd7490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efdbfbd7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efdbfbbe480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efdbfbbe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbe800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbe990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efdbfbd99c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efdbfbd99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efdbfbc4840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efdbfbc4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc4bc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efdbfbd3e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efdbfbd3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd21c0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd2350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efdbfbd4e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efdbfbd4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd31c0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd3350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efdbfbdc2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efdbfbdc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbdc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efdbfbc5840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efdbfbc5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc5bc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efdbfbc6060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efdbfbc6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc63e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efdbfbc4060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efdbfbc4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc43e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efdbfbbc480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efdbfbbc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbc800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efdbfbbd480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efdbfbbd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbd800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efdbfbca060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efdbfbca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbca3e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbca570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efdbfbc6840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efdbfbc6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc6bc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efdbfbbf480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efdbfbbf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbf800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efdbfbcc060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efdbfbcc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcc3e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efdbfbbb480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efdbfbbb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfbbb800"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfbbb990"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbbb20"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfbbbcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfbbbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efdbfbddc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efdbfbddc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efdbfbd6e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efdbfbd6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd41c0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd4350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efdbfbd2e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efdbfbd2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd11c0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efdbfbc9840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efdbfbc9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc9bc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efdbfbcd840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efdbfbcd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcdbc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcdd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efdbfbc7060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efdbfbc7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc73e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efdbfbd0060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efdbfbd0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd03e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efdbfbda020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efdbfbda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efdbfbd0840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efdbfbd0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbd0bc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbd0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbfbde520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbfbde520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfbde8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfbdea30"/>
        <function-ref name="request" scoped="" ref="0x7efdbfbdebc0"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfbded50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfbdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efdbfbd7ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efdbfbd7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efdbfbd67b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efdbfbd67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efdbfbc0c60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efdbfbc0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbf020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efdbfbc0480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efdbfbc0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc0800"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efdbfbd8060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efdbfbd8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd83e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efdbfbc2c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efdbfbc2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc0020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efdbfbbdc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efdbfbbdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbbc020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efdbfbca840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efdbfbca840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcabc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efdbfbc5060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efdbfbc5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc53e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efdbfbda670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efdbfbda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbda9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efdbfbd9370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efdbfbd9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efdbfbcc840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efdbfbcc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbccbc0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbccd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efdbfbd6160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efdbfbd6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efdbfbd64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efdbfbcb060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efdbfbcb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbcb3e0"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbcb570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efdbfbc3840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efdbfbc3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efdbfbc2020"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efdbfbb9160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efdbfbb9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efdbfbb94e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efdbfbb9670"/>
        <function-ref name="write" scoped="" ref="0x7efdbfbb9800"/>
        <function-ref name="beginRead" scoped="" ref="0x7efdbfbb9990"/>
        <function-ref name="readDone" scoped="" ref="0x7efdbfbb9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7efdbfb8ea20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efdbfb8ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efdbfb8eda0"/>
        <function-ref name="rand32" scoped="" ref="0x7efdbfb8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7efdbfb8c920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7efdbfb8c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfb8e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfb92990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfb92990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfb92d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7efdbfb87a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efdbfb87a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efdbfb87da0"/>
        <function-ref name="rand32" scoped="" ref="0x7efdbfb86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7efdbfb88940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7efdbfb88940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfb87560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfb88080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfb88080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfb88400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efdbfb90aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdbfb90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdbfb90e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdbfb89020"/>
        <function-ref name="isState" scoped="" ref="0x7efdbfb891b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdbfb89340"/>
        <function-ref name="requestState" scoped="" ref="0x7efdbfb894d0"/>
        <function-ref name="forceState" scoped="" ref="0x7efdbfb89660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfb70020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfb70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb703a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb70530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb706c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb70850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb709e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbfb71220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbfb71220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb715a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb71730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb718c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb71a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb71be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfb6ce60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfb6ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb6a210"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb6a3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb6a530"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb6a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb6a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbfb6fa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbfb6fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb6fd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb6c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb6c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb6c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efdbfb698f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efdbfb698f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efdbfb69c70"/>
        <function-ref name="rand32" scoped="" ref="0x7efdbfb69e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfb6c750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfb6c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfb6cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdbfb68170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfb68170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb684f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfb68680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfb68810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7efdbfb6aae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdbfb6aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdbfb6ae60"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdbfb69020"/>
        <function-ref name="isState" scoped="" ref="0x7efdbfb691b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdbfb69340"/>
        <function-ref name="requestState" scoped="" ref="0x7efdbfb694d0"/>
        <function-ref name="forceState" scoped="" ref="0x7efdbfb69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efdbfb6d690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdbfb6d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdbfb6da10"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdbfb6dba0"/>
        <function-ref name="isState" scoped="" ref="0x7efdbfb6dd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdbfb55020"/>
        <function-ref name="requestState" scoped="" ref="0x7efdbfb551b0"/>
        <function-ref name="forceState" scoped="" ref="0x7efdbfb55340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efdbfb4f950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb4f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb4fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfb52aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfb52aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb52e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7efdbfb4f200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7efdbfb4f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb4f580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efdbfb4a3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb4a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb4a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfb4bb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfb4bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfb4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfb4ee30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfb4ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb4b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdbfb4aa70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfb4aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb4adf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfb49020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfb491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7efdbfb4b570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7efdbfb4b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb4b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efdbfb1b020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfb1b6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfb1b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb1ba30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb1bbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb1bd50"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb1a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbfb208e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbfb208e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb20c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb20df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb1e020"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb1e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efdbfb1ec90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efdbfb1ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb1d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb1d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb1d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb1d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb1d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfb1e5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfb1e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb1e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbfb21be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbfb21be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfb20020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfb201b0"/>
        <function-ref name="request" scoped="" ref="0x7efdbfb20340"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfb204d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfb20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efdbfb1da50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efdbfb1da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb1ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efdbfb1c170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efdbfb1c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbfb1c4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbfb1c680"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb1c810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb1c9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbfb1cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfb11d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfb11d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb10180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb10310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb104a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb10630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb107c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efdbfb10b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efdbfb10b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb0f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7efdbfae2db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7efdbfae2db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbfae1180"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbfae1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efdbfb0f2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfb0f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdbfb0f670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdbfb0f800"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdbfb0f990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdbfb0fb20"/>
        <function-ref name="getPower" scoped="" ref="0x7efdbfb0fcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdbfb0fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efdbfb14a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efdbfb14a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb14da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb13020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb131b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb13340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb134d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efdbfb0eb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efdbfb0eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbfb0d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbfb0d1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbfb0d340"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbfb0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdbfb0e170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfb0e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb0e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfb0e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfb0e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efdbfb14370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efdbfb14370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb146f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efdbfb167b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efdbfb167b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfb16b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfb16cc0"/>
        <function-ref name="request" scoped="" ref="0x7efdbfb16e50"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfb15020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfb151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efdbfb154d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efdbfb154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfb15850"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb159e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb15b70"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfb15d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfb14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efdbfb13840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efdbfb13840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfb13bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efdbfb11020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efdbfb11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbfb113a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbfb11530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfb116c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfb11850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbfb119e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efdbfac2dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efdbfac2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efdbfac1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efdbfac1410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efdbfac1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efdbfac1790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efdbfac1920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efdbfac1ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efdbfac1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efdbfab6b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efdbfab6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdbfab5020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdbfab51b0"/>
        <function-ref name="start" scoped="" ref="0x7efdbfab5340"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfab54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfab3860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfab3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfab3be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfab3d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfab2020"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfab21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfab2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efdbfab2690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efdbfab2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfab2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbfabace0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbfabace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfab70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfab7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfab73c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfab7550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfab76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efdbfab6080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efdbfab6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efdbfab6400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efdbfab6590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efdbfab6720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efdbfab68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7efdbfab5800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7efdbfab5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdbfab5b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdbfab5d10"/>
        <function-ref name="isState" scoped="" ref="0x7efdbfab3020"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdbfab31b0"/>
        <function-ref name="requestState" scoped="" ref="0x7efdbfab3340"/>
        <function-ref name="forceState" scoped="" ref="0x7efdbfab34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7efdbfab2d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7efdbfab2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efdbfab1180"/>
        <function-ref name="stopDone" scoped="" ref="0x7efdbfab1310"/>
        <function-ref name="start" scoped="" ref="0x7efdbfab14a0"/>
        <function-ref name="stop" scoped="" ref="0x7efdbfab1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfab7980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfab7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfab7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efdbfaae2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efdbfaae2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efdbfaae650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efdbfaae7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efdbfaae970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efdbfaaeb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efdbfab0580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efdbfab0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efdbfab0900"/>
        <function-ref name="toIdle" scoped="" ref="0x7efdbfab0a90"/>
        <function-ref name="isState" scoped="" ref="0x7efdbfab0c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7efdbfab0db0"/>
        <function-ref name="requestState" scoped="" ref="0x7efdbfaaf020"/>
        <function-ref name="forceState" scoped="" ref="0x7efdbfaaf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfaa1d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfaa1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfaa0180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfaa0310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfaa04a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfaa0630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfaa07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbfaa4350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbfaa4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfaa46d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfaa4860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfaa49f0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfaa4b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfaa4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efdbfaa1020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efdbfaa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efdbfaa13a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efdbfaa1530"/>
        <function-ref name="getRetries" scoped="" ref="0x7efdbfaa16c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efdbfaa1850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efdbfaa19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7efdbfa9b1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efdbfa9b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdbfa9b540"/>
        <function-ref name="noAck" scoped="" ref="0x7efdbfa9b6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdbfa9b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efdbfa9f410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efdbfa9f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efdbfa9f790"/>
        <function-ref name="setRetries" scoped="" ref="0x7efdbfa9f920"/>
        <function-ref name="getRetries" scoped="" ref="0x7efdbfa9fab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efdbfa9fc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efdbfa9fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efdbfa7b690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efdbfa7b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfa7ba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efdbfa7c860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efdbfa7c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfa7cbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfa7cd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfa7b020"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfa7b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfa7b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7efdbfa79610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efdbfa79610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efdbfa79990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efdbfa79b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efdbfa79cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7efdbfa79e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efdbfa78020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efdbfa781b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efdbfa78340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efdbfa784d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efdbfa78660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efdbfa787f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efdbfa78980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efdbfa78b10"/>
        <function-ref name="sync" scoped="" ref="0x7efdbfa78ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7efdbfa77020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efdbfa771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efdbfa7e8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efdbfa7e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdbfa7ec30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdbfa7edc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdbfa7c020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdbfa7c1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7efdbfa7c340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdbfa7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7efdbfa7fce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7efdbfa7fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7efdbfa7e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7efdbfa761f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7efdbfa761f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efdbfa76570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efdbfa76700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efdbfa76890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efdbfa76a20"/>
        <function-ref name="setCca" scoped="" ref="0x7efdbfa76bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efdbfa76d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efdbfa80a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdbfa80a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbfa80e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbfa7f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfa7f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfa7f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbfa7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efdbfa83020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdbfa83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbfa833a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfa83530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbfa836c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbfa83850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbfa839e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7efdbfa82df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7efdbfa82df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfa811c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efdbfa7bce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efdbfa7bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efdbfa7a0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efdbfa7a230"/>
        <function-ref name="getRssi" scoped="" ref="0x7efdbfa7a3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efdbfa7a550"/>
        <function-ref name="getPower" scoped="" ref="0x7efdbfa7a6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efdbfa7a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7efdbfa774d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efdbfa774d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efdbfa77950"/>
        <function-ref name="changed" scoped="" ref="0x7efdbfa77ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7efdbfa77c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7efdbfa77e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efdbfa7ab70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efdbfa7ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efdbfa79020"/>
        <function-ref name="getHeader" scoped="" ref="0x7efdbfa791b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efdbfa79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbfa82210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbfa82210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbfa82590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efdbfa75d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efdbfa75d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efdbfa740e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efdbfa74270"/>
        <function-ref name="led1On" scoped="" ref="0x7efdbfa74400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efdbfa74590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efdbfa74720"/>
        <function-ref name="get" scoped="" ref="0x7efdbfa748b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efdbfa74a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7efdbfa731b0"/>
        <function-ref name="set" scoped="" ref="0x7efdbfa74bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7efdbfa74d60"/>
        <function-ref name="led2On" scoped="" ref="0x7efdbfa73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efdbfa81470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdbfa81470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdbfa817f0"/>
        <function-ref name="source" scoped="" ref="0x7efdbfa81980"/>
        <function-ref name="address" scoped="" ref="0x7efdbfa81b10"/>
        <function-ref name="destination" scoped="" ref="0x7efdbfa81ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7efdbfa81e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdbfa80020"/>
        <function-ref name="type" scoped="" ref="0x7efdbfa801b0"/>
        <function-ref name="setType" scoped="" ref="0x7efdbfa80340"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdbfa804d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdbfa80660"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdbfa807f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7efdbfa750f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7efdbfa750f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efdbfa75470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efdbfa75600"/>
        <function-ref name="request" scoped="" ref="0x7efdbfa75790"/>
        <function-ref name="granted" scoped="" ref="0x7efdbfa75920"/>
        <function-ref name="isOwner" scoped="" ref="0x7efdbfa75ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efdbf963020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdbf963020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbf9633a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf963530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf9636c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbf963850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbf9639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efdbf963c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdbf963c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf962020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbf9621b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf962340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf9624d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbf962660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efdbf9628b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdbf9628b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdbf962c30"/>
        <function-ref name="source" scoped="" ref="0x7efdbf962dc0"/>
        <function-ref name="address" scoped="" ref="0x7efdbf961020"/>
        <function-ref name="destination" scoped="" ref="0x7efdbf9611b0"/>
        <function-ref name="setSource" scoped="" ref="0x7efdbf961340"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdbf9614d0"/>
        <function-ref name="type" scoped="" ref="0x7efdbf961660"/>
        <function-ref name="setType" scoped="" ref="0x7efdbf9617f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdbf961980"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdbf961b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdbf961ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efdbf960020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efdbf960020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdbf9603a0"/>
        <function-ref name="noAck" scoped="" ref="0x7efdbf960530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdbf9606c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efdbee05b60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdbee05b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbee04020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbee041b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbee04340"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbee044d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbee04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efdbee048b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdbee048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbee04c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbee04dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbee03020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbee031b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbee03340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efdbee03590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdbee03590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdbee03910"/>
        <function-ref name="source" scoped="" ref="0x7efdbee03aa0"/>
        <function-ref name="address" scoped="" ref="0x7efdbee03c30"/>
        <function-ref name="destination" scoped="" ref="0x7efdbee03dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7efdbee02020"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdbee021b0"/>
        <function-ref name="type" scoped="" ref="0x7efdbee02340"/>
        <function-ref name="setType" scoped="" ref="0x7efdbee024d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdbee02660"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdbee027f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdbee02980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efdbee02c10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efdbee02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efdbee01020"/>
        <function-ref name="noAck" scoped="" ref="0x7efdbee011b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efdbee01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efdbedf8640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdbedf8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbedf89c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbedf8b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbedf8ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbedf8e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbedf7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7efdbedf72e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbedf72e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbedf7660"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbedf77f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbedf7980"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbedf7b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbedf7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efdbedf6020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdbedf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdbedf63a0"/>
        <function-ref name="source" scoped="" ref="0x7efdbedf6530"/>
        <function-ref name="address" scoped="" ref="0x7efdbedf66c0"/>
        <function-ref name="destination" scoped="" ref="0x7efdbedf6850"/>
        <function-ref name="setSource" scoped="" ref="0x7efdbedf69e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdbedf6b70"/>
        <function-ref name="type" scoped="" ref="0x7efdbedf6d00"/>
        <function-ref name="setType" scoped="" ref="0x7efdbedf5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdbedf51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdbedf5340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdbedf54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbf9c7930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbf9c7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbf9c7cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf9c7e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf9c2020"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbf9c21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbf9c2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efdbf977400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efdbf977400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbf9777a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf977930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf977ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbf977c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbf977de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efdbf9794b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efdbf9794b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efdbf979850"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf9799e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf979b70"/>
        <function-ref name="cancel" scoped="" ref="0x7efdbf979d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efdbf977020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efdbf975720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdbf975720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf975aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbf975c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf975dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf974020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbf9741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7efdbf974480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7efdbf974480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf974800"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf974990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7efdbf974c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7efdbf974c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efdbf973020"/>
        <function-ref name="runTask" scoped="" ref="0x7efdbf9731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efdbf976060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdbf976060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdbf9763e0"/>
        <function-ref name="source" scoped="" ref="0x7efdbf976570"/>
        <function-ref name="address" scoped="" ref="0x7efdbf976700"/>
        <function-ref name="destination" scoped="" ref="0x7efdbf976890"/>
        <function-ref name="setSource" scoped="" ref="0x7efdbf976a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdbf976bb0"/>
        <function-ref name="type" scoped="" ref="0x7efdbf976d40"/>
        <function-ref name="setType" scoped="" ref="0x7efdbf975020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdbf9751b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdbf975340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdbf9754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efdbf956020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efdbf956020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efdbf9563a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efdbf956530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efdbf9566c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efdbf956850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efdbf9569e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efdbf95d910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efdbf95d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efdbf95dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efdbf956c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efdbf956c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efdbf955020"/>
        <function-ref name="source" scoped="" ref="0x7efdbf9551b0"/>
        <function-ref name="address" scoped="" ref="0x7efdbf955340"/>
        <function-ref name="destination" scoped="" ref="0x7efdbf9554d0"/>
        <function-ref name="setSource" scoped="" ref="0x7efdbf955660"/>
        <function-ref name="setDestination" scoped="" ref="0x7efdbf9557f0"/>
        <function-ref name="type" scoped="" ref="0x7efdbf955980"/>
        <function-ref name="setType" scoped="" ref="0x7efdbf955b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7efdbf955ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efdbf955e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7efdbf954020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7efdc14dfc80" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efdc14dfa00" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7efdc14dc2a0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efdc14dc020" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efdc14df020" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efdc14de520" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7efdc157f190" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7efdc1504e80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc1504c00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7efdc1501020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc1502c90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efdc14fd490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc14fee50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc14fd1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efdc14fe560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7efdc15005e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc1500020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc1500350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efdc14e8020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efdc14e95e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7efdc14e9960" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc14e9c90" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efdc14e4660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc14e4060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc14e4390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efdc14e3790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efdc14e7390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc14e7110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efdc14e58b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc14e52d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efdc14e5620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efdc1561e30" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1561e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7efdc155b720" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efdc155a5d0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1561e30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc155a020" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efdc155a340" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1561e30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7efdc14da670" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
              <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc14eacc0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efdc14da060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc14da390" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efdc1564cb0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1564cb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7efdc1560e10" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7efdc15605f0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7efdc155f840" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1564cb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efdc155f5c0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1564cb0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efdc1570690" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1570690"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efdc1562020" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc1570690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7efdc156c7b0" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7efdc156a020" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7efdc156a800" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7efdc15697d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7efdc1567020" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efdc1567830" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7efdc1569020" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efdc15653f0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efdc1565170" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7efdc156c020" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7efdc1568020" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7efdc15687b0" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7efdc14eed30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14eeab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7efdc14f8a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14f8790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7efdc1554e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7efdc14fb950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14fb6d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7efdc14f53a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14f7d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efdc14f5110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7efdc14f6e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14f6870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efdc14f6bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7efdc14f2810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14f2590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7efdc14f0b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14f05e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7efdc14f0900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efdc15161b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7efdc14f3600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14f3380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7efdc14ed2f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efdc14efcf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7efdc14ed060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7efdc14eb190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc157e350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc157e350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efdc15761f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efdc157ba60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7efdc1579820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efdc1579250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efdc1579590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7efdc157aa60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7efdc1575270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7efdc1576980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efdc157a270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7efdc157c020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efdc157ec40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7efdc1577820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efdc1577250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efdc1577590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7efdc157cae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efdc157c860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efdc157b350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efdc14ab1f0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7efdc147e420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7efdc1481700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7efdc147fce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7efdc1481020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7efdc1481e70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7efdc14820e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7efdc14827c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7efdc147f5c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efdc16a8020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7efdc196dc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7efdc142c020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efdc142ecc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7efdc1430390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efdc1477ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efdc1476940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efdc142c890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7efdc142b7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7efdc142e560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efdc142b020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7efdc1430b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7efdc142f350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7efdc142fda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efdc1477ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efdc1476940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efdc142fb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efdc1477ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efdc1476940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efdc141e0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7efdc141b730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7efdc141b4b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efdc141a2e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efdc141a060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efdc141dca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efdc141d3e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7efdc141ea90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efdc141e810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efdc14253e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7efdc1425d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efdc1425ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7efdc1423790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efdc1423510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7efdc14222a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efdc1422020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efdc1422990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efdc1436810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efdc14342a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7efdc1434020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efdc1435020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efdc143caa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efdc1435760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efdc14399b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efdc1436120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efdc1439270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efdc14370e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7efdc14379f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efdc1437770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7efdc1434cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7efdc1434a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efdc13f79f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7efdc15cba80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7efdc15ca1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7efdc15cb2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7efdc17e4810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efdc1a26020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7efdc1a25020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7efdc1a26790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7efdc1a1a270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7efdc1a1aac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efdc12cce30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efdc12cb5c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efdc12cc020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efdc12c9480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efdc12cc720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efdc12cbce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efdc12cd120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efdc12cd7f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efdc12a0020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efdc12a0770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7efdc129b2e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efdc129b060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efdc12a2770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efdc129e780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7efdc129bbd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efdc129e020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efdc12a1820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7efdc129c020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7efdc12a1020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efdc12a58b0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7efdc129d020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7efdc129c7c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7efdc129d7e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efdc12a2020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc1051c40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc1051c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efdc104e5a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc10485d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc10485d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efdc1048810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efdc1043390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efdc10463b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7efdc10459d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efdc1045400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7efdc1045740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efdc1046b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7efdc1043b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efdc1047390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efdc1047110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc1048810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efdc1047bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc0fd74f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc0fd74f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efdc0fd7730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc0fd7730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efdc0fd6070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc0fd7730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efdc0fd5190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efdc0fd68f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efdc0fd58f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efdc0eb3020" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efdc0eb3830" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7efdc0ea8390" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7efdc0ea8110" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efdc0eae2a0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efdc0eae020" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7efdc0eaeae0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efdc0ead9a0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efdc0ead3b0" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7efdc0ead710" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7efdc0eab840" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efdc0e9b050" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efdc0e9ea60" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc0e9eda0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7efdc0e98cc0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efdc0e98a40" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efdc0e96ae0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efdc0e96510" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc0e96850" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7efdc0e97930" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7efdc0e943b0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efdc0e93a60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc0e93da0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efdc0e94110" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7efdc0e98270" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efdc0e99950" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efdc0e99020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc0e99360" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efdc0e996b0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7efdc0e40ae0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efdc0e394e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efdc0e35890" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efdc0e5ee70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efdc0e5d2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efdc0e3c350" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7efdc0e3d350" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7efdc0e41980" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efdc0e3db40" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efdc0e3cdb0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7efdc0e2d020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7efdc0e2e750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7efdc0e25d70" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc0e25af0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7efdc0e25350" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7efdc0dff390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7efdc0e0a020" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7efdc0e1ade0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e8c190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efdc0e8c9d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efdc0e1ab60" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e8c190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efdc0e8c9d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7efdc0e0d0e0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7efdc0e152a0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e88110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efdc0e88950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efdc0e15020" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e88110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efdc0e88950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7efdc0e04750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7efdc0e01cf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7efdc0e16830" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e8a080"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7efdc0e8a810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7efdc0e15a90" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e88110"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7efdc0e88950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7efdc0e11830" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7efdc0e115b0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7efdc0e12e40" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7efdc0e04020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7efdc0e16040" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e8a080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efdc0e8a810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efdc0e17da0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e8a080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efdc0e8a810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7efdc0e13c80" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7efdc0e04e80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7efdc0e12690" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7efdc0e12410" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7efdc0e0e190" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7efdc0e0e910" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7efdc0e05070" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7efdc0e08020" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7efdc0e0c070" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7efdc0e057b0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7efdc0e0a800" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7efdc0e035c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efdc0e0f070" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efdc0e90120"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7efdc0e8f810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7efdc0e03d60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7efdc0e00bd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7efdc0e134d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7efdc0e13250" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7efdc0dffd30" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc0dffab0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7efdc0e17600" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0e8c190"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7efdc0e8c9d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7efdc0e0d850" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7efdc0e09020" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7efdc0e07800" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efdc0e5ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efdc0e5d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc0e07580" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efdc0e5ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efdc0e5d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7efdc0e08af0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efdc0e70020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efdc0e70440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc0e08870" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efdc0e70020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efdc0e70440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7efdc0dfe730" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7efdc0e01570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7efdc0e0f880" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7efdc0e00480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7efdc0e09790" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7efdc0e0c850" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efdc0d87420" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efdc0d87c70" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7efdc0cdf020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7efdc0cdf880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efdc0ccb420" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efdc0cb1270" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7efdc0cb0350" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efdc0cb49c0" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efdc0cb1ae0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efdc0cb0c80" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7efdc0ca4110" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efdc0cad3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efdc0ca5e30" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efdc0cad3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7efdc0ca6120" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7efdc0ca6c20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efdc0cad3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efdc0ca69a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efdc0cad3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7efdc0ca5580" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7efdc0cad3f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7efdc0c38770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7efdc0bedb30" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7efdc0bd6910" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc0bd6340" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efdc0bd6680" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7efdc0bd5190" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7efdc0bd7b50" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7efdc0bd84e0" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7efdc0bd3aa0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efdc0bd3820" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7efdc0bda270" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7efdc0bd25c0" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc0bd2340" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7efdc0bd3020" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc0bd59c0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efdc0bd5cf0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7efdc0bdac40" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc0bda9c0" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7efdc0bd72f0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc0bd8cd0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efdc0bd7060" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efdc0b90b10" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efdc0b90350" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7efdc0b92b70" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7efdc0b922b0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efdc0ad67b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efdc0ad42b0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efdc0ad6020" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7efdc0ad5a60" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7efdc0ad57e0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7efdc0ada820" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7efdc0ad5020" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efdc0972bf0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0972bf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7efdc096b020" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0972bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc096e650" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7efdc096e9d0" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0972bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7efdc096ed30" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7efdc096fb10" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0972bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efdc096f520" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0972bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7efdc096f880" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7efdc096dd90" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7efdc096db10" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efdc096a660" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc096a020" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7efdc096a3d0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7efdc0941d20" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7efdc0941d20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7efdc093e730" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7efdc0941d20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efdc0936390" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0936390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7efdc0936c90" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efdc0935a20" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0936390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efdc0935470" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efdc0935790" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efdc0936390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7efdc0921df0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7efdc092aaa0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc092a820" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7efdc0927020" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc0928990" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7efdc0928d00" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7efdc0922a70" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc09237e0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7efdc09220d0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7efdc0922450" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7efdc09227c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7efdc091e770" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7efdc091e0d0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7efdc091e460" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7efdc09253c0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc0926150" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7efdc09269f0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7efdc0926d80" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7efdc0925110" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7efdc0920ad0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc0920850" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7efdc08cece0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7efdc08ce020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0962110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7efdc09625e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc08d1970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7efdc09634e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7efdc0964b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7efdc08d1d60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0962110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7efdc09625e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7efdc08cf110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7efdc08cf4b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7efdc08cf860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7efdc08cfbd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7efdc08cdd40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7efdc08cd720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7efdc08cdab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7efdc08cb780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7efdc08c9020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7efdc08b2120" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc0948ce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7efdc09477a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7efdc08b02a0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0962110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7efdc09625e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7efdc08b0020" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7efdc08ad8a0" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7efdc08acaa0" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7efdc08ac2e0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7efdc08ac060" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7efdc08b2940" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc0946e20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7efdc0945770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7efdc08b1760" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0962110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7efdc09625e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7efdc08b1110" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7efdc08b14d0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efdc0962110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7efdc09625e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7efdc08abb40" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7efdc08b7e40" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc0948ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7efdc09477a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7efdc08b7bc0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc0948ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7efdc09477a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7efdc08b0d70" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7efdc08b0af0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7efdc08af840" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7efdc08af5c0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7efdc08ad0e0" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7efdc08ab2b0" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7efdc08aa350" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7efdc08b48c0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc0946e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7efdc0945770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7efdc08b4640" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efdc0946e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7efdc0945770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7efdc05191e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdc05191e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efdc0519420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc0519420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7efdc05142a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc0519420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0514020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7efdc0513430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc05131b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7efdc0515020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0519d60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efdc0512740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc0519420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0512150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7efdc05124b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdc0519420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7efdc0506990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0506370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7efdc0506700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7efdc0503b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc05038b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7efdc0507ae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7efdc0507120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7efdc050ae80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7efdc051c5f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc051c370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7efdc051b7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc051b550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7efdc0518940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc05186c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7efdc04de980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04de700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7efdc04e1c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04e19b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7efdc04e2350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7efdc04e20d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7efdc04e4800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7efdc04e4580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7efdc04e2d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7efdc04e2b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7efdc04dfb10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04df890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7efdc04d12b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7efdc04dcc50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7efdc04d1020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7efdc04ed810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04ed230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7efdc04ed580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7efdc04e9e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04e9820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7efdc04e9b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7efdc04ec350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7efdc2470110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04ec0d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7efdc04ead30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04eaab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7efdc04ee9c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04ee740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7efdc04ece80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04ecc00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7efdc04d5b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04d58b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7efdc04dabc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04da5a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7efdc04da930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7efdc04d9ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04d9850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7efdc04d9020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04d89c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7efdc04d8d50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7efdc04d4b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04d48f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7efdc04e6780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04e6500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efdc04cbdc0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04cb800" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc04cbb30" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efdc04c3620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04c3020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc04c3350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efdc04c2660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efdc04c62a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04c6020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efdc04c5750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc04c5170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efdc04c54c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efdc04a4ca0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04a46e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7efdc04a4a10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efdc04a2020" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7efdc049f930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efdc04a0ab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7efdc049f360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc049f690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efdc04a02b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efdc04a2bb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efdc04a0020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7efdc04a3780" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7efdc04a3500" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7efdc049cb50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7efdc049c350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7efdc0495020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0496c90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7efdc0496490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7efdc1551960"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7efdc154f390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0496190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7efdc0494360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7efdc154fe90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7efdc154c7e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdc0494060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7efdc04aa6e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7efdc04a8840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7efdc04a8070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7efdc04aee20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7efdc04abe80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7efdc04a9020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7efdc04a9840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7efdc04ab6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7efdc048fa70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7efdc0490020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7efdc048f2a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7efdc048f020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7efdc0490790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7efdc0498ca0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7efdc0498a20" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7efdc04917a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7efdc0491520" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7efdc0433640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7efdc0433060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7efdc04333b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7efdc0434020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7efdc0436690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7efdc0436020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7efdc0436400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7efdc043ca40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efdc043c7c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7efdc04348a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7efdc0438540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7efdc04382c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7efdc043bb90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7efdc043b910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7efdc04328a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7efdc04376b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7efdc0437430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7efdc0432070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7efdc043a350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efdc0509e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7efdc05015a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7efdc043ab40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7efdc043c020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7efdc043b1f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7efdc0438ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efdc0415ce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc0415a60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efdc040e7f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc040e570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7efdc0425ab0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efdc0509e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7efdc05015a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7efdc0417860" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7efdc04167d0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7efdc0416070" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7efdc0417020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7efdc041a980" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efdc1516590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7efdc041acd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efdc1516970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7efdc040ae40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efdc0412020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efdc0414110" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7efdc0414980" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc0414cd0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efdc0411780" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efdc04128f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7efdc0411190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc04114e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7efdc02fdbb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efdc02fbd70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efdc02fb5c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efdc02fb340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7efdc02fd350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7efdc02cb0e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7efdc02cb930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7efdc02c91f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7efdc02a3b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc02a3580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc02a38d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7efdc029edd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc029e490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc029e7e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efdc029eb30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efdc02a06b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc02a00d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc02a0420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7efdc02a5730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efdc15569e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc02a5150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc02a54a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efdc02a12c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc02a2930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efdc02a2c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efdc02a1020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efdc0284df0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7efdc0284480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7efdc0284810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc0284b50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efdc02823c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7efdc02816a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7efdc0281a30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdc0281d70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efdc0282110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7efdc0288c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7efdc0288a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efdc01eb070" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efdc0e70020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efdc0e70440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7efdc01f3d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc01f3ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7efdc01ee2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc01ee020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7efdc01f0610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efdc01eecc0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc01eea40" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7efdc0148780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7efdc015bc90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7efdc014e020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efdc0150ca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7efdc0163390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7efdc014c7a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7efdc0154020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7efdc015cda0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7efdc015ab70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efdc015ed40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7efdc015eac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7efdc015f270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7efdc0157900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7efdc014d020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7efdc0148020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7efdc0150560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7efdc01431f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7efdc013f880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7efdc0162270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7efdc0157190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7efdc0156a90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7efdc015c650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7efdc0164190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7efdc0151d40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efdc0151ac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7efdc01689f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7efdc014c020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7efdc0147020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7efdc01429a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7efdc013f120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7efdc014b790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7efdc0147750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7efdc014e7b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7efdc01441f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7efdc0162990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7efdc01521f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7efdc0146630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7efdc0149790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7efdc0155760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7efdc01554e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7efdc0141190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7efdc0151390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7efdc014b020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7efdc0164c10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efdc0e4ab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7efdc0e49020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efdc0164990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efdc0e4ab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7efdc0e49020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7efdc0159a00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7efdc0160a80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efdc0160800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7efdc01562a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efdc0156020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7efdc01449c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7efdc015e3b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7efdc0160120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7efdc0152bb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7efdc0152930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efdc246f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7efdc0163ac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7efdc0147e70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7efdc0149020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7efdc014d790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7efdc01549f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7efdc0154770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7efdc01592b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7efdc015b530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7efdc0141900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7efdc015fbf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efdc015f970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7efdc01439b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7efdc015a420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7efdc01421f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efdbfe635e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efdbfe63360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efdbfe4fb00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7efdbfe4f1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7efdbfe4f530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdbfe4f860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efdbfe4e880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efdbfe4e2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efdbfe4e5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efdbfe35530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efdbfe35530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efdbfe35770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdbfe35770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7efdbfe342e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdbfe35770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efdbfe34060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efdbfe35770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7efdbfdd3580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7efdbfda29e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7efdbfda2020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7efdbfda2750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7efdbfda37f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7efdbfda3020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efdbfda6d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efdc246f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7efdbfdb73d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efdc246f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdbfdb7150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7efdbfdb93d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efdc1a2a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdbfdb9150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efdbfdb5350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdbfdb50d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efdbfdb6390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efdbfdb6110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efdc1506e00"/>
                <typename><typedef-ref name="message_t" ref="0x7efdc1504450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7efdbfb8f5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efdbfb8f5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7efdbfb8c2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efdc1a21c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efdbfb8f5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7efdbfb8c020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efdbfb8f5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
